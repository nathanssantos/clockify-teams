{"version":3,"sources":["services/baseAPI.js","hooks/useLocalStorage.js","stores/models/user.js","stores/containers/authStore.js","utils/getDuration.js","utils/getDate.js","stores/containers/userStore.js","stores/models/project.js","stores/containers/projectStore.js","stores/models/team.js","stores/containers/teamStore.js","stores/containers/rootStore.js","hooks/useStore.js","components/Menu/Menu.js","components/Drawer/Drawer.js","components/Logo/Logo.js","components/Header/Header.js","components/User/User.js","components/Chart/HorizontalBarChart.js","screens/TeamDetail/TeamDetail.js","components/Team/Team.js","screens/EditTeam/EditTeam.js","screens/CreateTeam/CreateTeam.js","screens/Teams/Teams.js","components/Chart/LineChart.js","components/TimeEntry/TimeEntry.js","screens/UserDetail/UserDetail.js","screens/Users/Users.js","components/Project/Project.js","screens/Projects/Projects.js","screens/ProjectDetail/ProjectDetail.js","screens/Login/Login.js","components/Router/Router.js","constants/theme.js","components/Theme/Theme.js","App.js","index.js"],"names":["baseAPI","axios","create","baseURL","timeout","useLocalStorage","key","state","JSON","parse","localStorage","getItem","setState","newState","setItem","stringify","User","newUser","id","name","email","defaultWorkspace","profilePicture","timeEntries","timeEntriesByDay","teams","hours","makeObservable","this","observable","Error","AuthStore","user","authStatus","autoLogin","fetchDataLog","isAuthenticated","computed","isConfirmingIdentity","setUser","action","bound","confirmIdentity","unauthenticate","setAutoLogin","feedFetchDataLog","authenticate","flow","fromApi","payload","text","status","color","length","push","getEnv","defaults","headers","common","apiKey","setApiKey","get","response","alert","data","console","log","getHours","_time","time","split","minutes","Number","replace","error","getDate","_dateTime","dateTime","date","UserStore","userList","queryStartDate","queryEndDate","setUserList","fetchUserData","fetchUserList","fetchUserTimeEntries","fetchAllUsersTimeEntries","map","start","end","userFound","find","timeEntry","timeInterval","duration","project","getRoot","projectStore","projectList","projectId","dateFound","entry","getDuration","teamStore","teamList","team","users","authStore","pageSize","params","item","newUsers","Project","newProject","workspaceId","estimate","fetchedTimeEntries","timeEntriesByUser","ProjectStore","setProjectList","fetchProjectData","fetchProjectList","archived","projectTimeEntriesByUser","userStore","projectTimeEntriesFound","filter","userId","Team","newTeam","image","timeEntriesByProject","TeamStore","setTeamList","createTeam","editTeam","fetchTeamList","fetchTeamData","_teamList","newTeamList","includes","usersWithTimeEntries","teamTimeEntriesByProject","_user","projectFound","index","_project","RootStore","RootStoreContext","createContext","RootStoreProvider","Provider","useStore","useContext","menuButtons","route","label","Menu","vertical","drawer","history","useHistory","className","Button","fullWidth","onClick","close","Drawer","useState","isOpen","setIsOpen","open","SwipeableDrawer","anchor","onClose","onOpen","Logo","observer","Container","maxWidth","props","disabled","ListItem","button","Avatar","alt","src","HorizontalBarChart","options","responsive","indexAxis","scales","y","beginAtZero","plugins","legend","display","store","useParams","setTeam","showConfirmationModal","setShowConfirmationModal","foundTeam","closeConfirmationModal","useEffect","window","scrollTo","Delete","labels","_","orderBy","datasets","toFixed","backgroundColor","borderWidth","hourValue","payment","Fab","aria-label","Edit","Dialog","aria-labelledby","DialogTitle","style","cursor","DialogContent","DialogContentText","DialogActions","autoFocus","removeTeam","avatarSize","fontSize","width","height","teamData","teamName","setTeamName","teamImage","setTeamImage","newUserList","setNewUserList","a","newTeamId","_userList","forEach","splice","TextField","variant","value","onChange","e","target","_newUserList","sortBy","ArrowForward","ArrowBack","filterTerm","setFilterTerm","filteredList","setFilteredList","toLowerCase","Add","LineChart","description","borderColor","foundUser","reverse","day","showColor","setShowColor","colorEffect","setTimeout","clearTimeout","setProject","foundProject","Date","inputValue","setInputValue","fetching","setFetching","getFullYear","getMonth","startDate","setStartDate","endDate","setEndDate","flowResult","fetchData","setQueryDate","dataLogContainer","document","querySelector","scrollTop","scrollHeight","margin","format","KeyboardButtonProps","LinearProgress","path","theme","palette","type","primary","main","Theme","children","customTheme","createMuiTheme","ThemeProvider","CssBaseline","App","rootStore","setRootStore","init","newRootStore","wrapRoot","env","utils","DateFnsUtils","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.139dd29e.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseURL = \"https://api.clockify.me/api/v1\";\r\n\r\nconst baseAPI = axios.create({\r\n  baseURL,\r\n  timeout: 10000,\r\n});\r\n\r\nexport default baseAPI;\r\n","const useLocalStorage = (key = \"\") => {\r\n  const state = JSON.parse(localStorage.getItem(`clockify-teams@${key}`)) || {};\r\n\r\n  const setState = (newState) => {\r\n    localStorage.setItem(`clockify-teams@${key}`, JSON.stringify(newState));\r\n  };\r\n\r\n  return [state, setState];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import { makeObservable, observable } from \"mobx\";\r\n\r\nexport default class User {\r\n  id = null;\r\n  name = null;\r\n  email = null;\r\n  defaultWorkspace = null;\r\n  profilePicture = null;\r\n  timeEntries = [];\r\n  timeEntriesByDay = [];\r\n  teams = [];\r\n  hours = null;\r\n\r\n  constructor(newUser) {\r\n    makeObservable(this, {\r\n      id: observable,\r\n      name: observable,\r\n      email: observable,\r\n      defaultWorkspace: observable,\r\n      profilePicture: observable,\r\n      timeEntries: observable,\r\n      timeEntriesByDay: observable,\r\n      teams: observable,\r\n      hours: observable,\r\n    });\r\n\r\n    if (newUser == null || newUser.id == null) {\r\n      throw new Error(\"Invalid user constructor\");\r\n    }\r\n\r\n    const {\r\n      id,\r\n      name,\r\n      email,\r\n      defaultWorkspace,\r\n      profilePicture,\r\n      timeEntries,\r\n      timeEntriesByDay,\r\n      teams,\r\n      hours,\r\n    } = newUser;\r\n\r\n    this.id = id;\r\n    this.name = name || \"\";\r\n    this.email = email || \"\";\r\n    this.defaultWorkspace = defaultWorkspace || \"\";\r\n    this.profilePicture = profilePicture || \"\";\r\n    this.timeEntries = timeEntries || [];\r\n    this.timeEntriesByDay = timeEntriesByDay || [];\r\n    this.teams = teams || [];\r\n    this.hours = hours || 0;\r\n  }\r\n\r\n  static fromApi({\r\n    id,\r\n    name,\r\n    email,\r\n    defaultWorkspace,\r\n    profilePicture,\r\n    timeEntries,\r\n    timeEntriesByDay,\r\n    teams,\r\n    hours,\r\n  } = {}) {\r\n    return new User({\r\n      id,\r\n      name,\r\n      email,\r\n      defaultWorkspace,\r\n      profilePicture,\r\n      timeEntries,\r\n      timeEntriesByDay,\r\n      teams,\r\n      hours,\r\n    });\r\n  }\r\n}\r\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport { action, flow, computed, makeObservable, observable } from \"mobx\";\nimport { getEnv } from \"mobx-easy\";\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\n\nimport User from \"../models/user\";\n\nexport default class AuthStore {\n  user = null;\n  authStatus = \"unauthenticated\";\n  autoLogin = false;\n  fetchDataLog = [];\n\n  constructor() {\n    makeObservable(this, {\n      user: observable,\n      authStatus: observable,\n      autoLogin: observable,\n      fetchDataLog: observable,\n\n      isAuthenticated: computed,\n      isConfirmingIdentity: computed,\n\n      setUser: action.bound,\n      confirmIdentity: action.bound,\n      unauthenticate: action.bound,\n      setAutoLogin: action.bound,\n      feedFetchDataLog: action.bound,\n\n      authenticate: flow,\n    });\n  }\n\n  get isAuthenticated() {\n    return this.authStatus === \"authenticated\";\n  }\n\n  get isConfirmingIdentity() {\n    return this.authStatus === \"confirming-identity\";\n  }\n\n  setUser(user) {\n    this.user = User.fromApi(user);\n  }\n\n  confirmIdentity() {\n    this.authStatus = \"authenticated\";\n  }\n\n  setAutoLogin(payload) {\n    this.autoLogin = payload;\n  }\n\n  feedFetchDataLog(text, status) {\n    let color = \"\";\n    switch (status) {\n      case \"success\": {\n        color = \"#27ae60\";\n        break;\n      }\n\n      case \"error\": {\n        color = \"#c0392b\";\n        break;\n      }\n\n      default: {\n        color = \"#ffffff\";\n        break;\n      }\n    }\n    if (typeof text === \"string\" && text.length)\n      this.fetchDataLog.push({ text, color });\n  }\n\n  unauthenticate() {\n    this.authStatus = \"unauthenticated\";\n    this.user = null;\n    getEnv().defaults.headers.common[\"X-Api-Key\"] = null;\n  }\n\n  *authenticate(apiKey) {\n    try {\n      const [, setApiKey] = useLocalStorage(\"clockify-api-key\");\n      getEnv().defaults.headers.common[\"X-Api-Key\"] = apiKey;\n      setApiKey(apiKey);\n\n      const response = yield getEnv().get(`/user`);\n\n      if (response?.status !== 200) {\n        alert(\"Invalid Clockify API Key\");\n        return false;\n      }\n\n      if (response?.data) {\n        this.setUser(response.data);\n        this.authStatus = \"confirming-identity\";\n        return true;\n      }\n\n      this.unauthenticate();\n      return false;\n    } catch (error) {\n      console.log(error);\n      this.unauthenticate();\n      alert(\"Invalid Clockify API Key\");\n      return false;\n    }\n  }\n}\n","const getHours = (_time) => {\r\n  try {\r\n    const time = _time?.split(\"H\");\r\n    let hours = 0;\r\n    let minutes = 0;\r\n\r\n    if (time?.length) {\r\n      if (time?.length === 2) {\r\n        hours = Number(time[0].split(\"PT\")[1]) || 0;\r\n        minutes = Number(time[1].split(\"M\")[0]) || 0;\r\n      } else {\r\n        if (time[0] !== \"PT0S\") {\r\n          minutes = Number(time[0].replace(\"PT\", \"\").replace(\"M\", \"\"));\r\n        }\r\n      }\r\n\r\n      return Number(hours + minutes / 60);\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default getHours;\r\n","const getDate = (_dateTime) => {\r\n  try {\r\n    const dateTime = _dateTime?.split(\"T\");\r\n\r\n    if (dateTime?.length) {\r\n      const date = dateTime[0].split(\"-\");\r\n\r\n      return `${date[2]}/${date[1]}/${date[0]}`;\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default getDate;\r\n","import { action, flow, makeObservable, observable } from \"mobx\";\r\nimport { getEnv, getRoot } from \"mobx-easy\";\r\n\r\nimport getDuration from \"../../utils/getDuration\";\r\nimport getDate from \"../../utils/getDate\";\r\n\r\nimport User from \"../models/user\";\r\n\r\nexport default class UserStore {\r\n  userList = [];\r\n  queryStartDate = null;\r\n  queryEndDate = null;\r\n\r\n  constructor() {\r\n    makeObservable(this, {\r\n      userList: observable,\r\n      queryStartDate: observable,\r\n      queryEndDate: observable,\r\n\r\n      setUserList: action.bound,\r\n      fetchUserData: action.bound,\r\n\r\n      fetchUserList: flow,\r\n      fetchUserTimeEntries: flow,\r\n      fetchAllUsersTimeEntries: flow,\r\n    });\r\n  }\r\n\r\n  setUserList(payload = []) {\r\n    this.userList = payload.map((user) => User.fromApi(user));\r\n  }\r\n\r\n  setQueryDate(start, end) {\r\n    this.queryStartDate = start;\r\n    this.queryEndDate = end;\r\n  }\r\n\r\n  fetchUserData(payload = {}) {\r\n    try {\r\n      const { id } = payload;\r\n      const userFound = this.userList.find((user) => user.id === id);\r\n\r\n      let timeEntriesByDay = [];\r\n      let teams = [];\r\n\r\n      for (const timeEntry of userFound.timeEntries) {\r\n        const time = timeEntry?.timeInterval?.duration;\r\n        const date = timeEntry?.timeInterval?.start;\r\n        const project = getRoot().projectStore.projectList.find(\r\n          ({ id }) => id === timeEntry?.projectId\r\n        );\r\n\r\n        const dateFound = timeEntriesByDay.find(\r\n          (entry) => entry.date === getDate(date)\r\n        );\r\n\r\n        if (time?.length && date?.length) {\r\n          if (dateFound) {\r\n            timeEntriesByDay = timeEntriesByDay.map((entry) => {\r\n              if (entry.date === getDate(date)) {\r\n                return {\r\n                  date: entry.date,\r\n                  timeEntries: [\r\n                    ...entry.timeEntries,\r\n                    {\r\n                      ...timeEntry,\r\n                      project: project\r\n                        ? project\r\n                        : { name: \"Sem projeto\", color: \"#ffffff\" },\r\n                    },\r\n                  ],\r\n                  hours: entry.hours + getDuration(time),\r\n                };\r\n              }\r\n\r\n              return entry;\r\n            });\r\n          } else {\r\n            timeEntriesByDay.push({\r\n              date: getDate(date),\r\n              timeEntries: [\r\n                {\r\n                  ...timeEntry,\r\n                  project: project\r\n                    ? project\r\n                    : { name: \"Sem projeto\", color: \"#ffffff\" },\r\n                },\r\n              ],\r\n              hours: getDuration(time),\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n      for (const team of getRoot().teamStore.teamList) {\r\n        for (const user of team.users) if (user.id === id) teams.push(team);\r\n      }\r\n\r\n      this.setUserList(\r\n        this.userList.map((user) => {\r\n          if (user.id === id) {\r\n            return {\r\n              ...payload,\r\n              timeEntriesByDay,\r\n              teams,\r\n            };\r\n          }\r\n\r\n          return user;\r\n        })\r\n      );\r\n\r\n      return false;\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n      return false;\r\n    }\r\n  }\r\n\r\n  *fetchUserList(payload = {}) {\r\n    try {\r\n      getRoot().authStore.feedFetchDataLog(\"fetching user list...\");\r\n\r\n      const { pageSize = 1000 } = payload;\r\n      const { defaultWorkspace } = getRoot().authStore.user;\r\n\r\n      const response = yield getEnv().get(\r\n        `/workspaces/${defaultWorkspace}/users`,\r\n        {\r\n          params: {\r\n            \"page-size\": pageSize,\r\n            status: \"ACTIVE\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.status !== 200) {\r\n        getRoot().authStore.feedFetchDataLog(\"fetch user list error\", \"error\");\r\n        return false;\r\n      }\r\n\r\n      if (response?.data?.length) {\r\n        this.setUserList(response.data);\r\n        getRoot().authStore.feedFetchDataLog(\r\n          \"fetch user list success\",\r\n          \"success\"\r\n        );\r\n        return true;\r\n      }\r\n\r\n      getRoot().authStore.feedFetchDataLog(\"fetch user list error\", \"error\");\r\n      return false;\r\n    } catch (error) {\r\n      console.log(error);\r\n      getRoot().authStore.feedFetchDataLog(\"fetch user list error\", \"error\");\r\n      return false;\r\n    }\r\n  }\r\n\r\n  *fetchUserTimeEntries(payload = {}) {\r\n    const { id, name, pageSize = 1000 } = payload;\r\n\r\n    try {\r\n      getRoot().authStore.feedFetchDataLog(\r\n        `fetching user ${name} time entries...`\r\n      );\r\n\r\n      const { defaultWorkspace } = getRoot().authStore.user;\r\n\r\n      const response = yield getEnv().get(\r\n        `/workspaces/${defaultWorkspace}/user/${id}/time-entries`,\r\n        {\r\n          params: {\r\n            start: this.queryStartDate,\r\n            end: this.queryEndDate,\r\n            \"page-size\": pageSize,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.status !== 200) {\r\n        getRoot().authStore.feedFetchDataLog(\r\n          `fetch user ${name} time entries error`,\r\n          \"error\"\r\n        );\r\n        return false;\r\n      }\r\n\r\n      if (response?.data) {\r\n        let hours = 0;\r\n\r\n        for (const item of response.data) {\r\n          const time = item?.timeInterval?.duration;\r\n\r\n          if (time?.length) {\r\n            hours += getDuration(time);\r\n          }\r\n        }\r\n\r\n        getRoot().authStore.feedFetchDataLog(\r\n          `fetch user ${name} time entries success`,\r\n          \"success\"\r\n        );\r\n\r\n        return {\r\n          timeEntries: response.data,\r\n          hours,\r\n        };\r\n      }\r\n\r\n      getRoot().authStore.feedFetchDataLog(\r\n        `fetch user ${name} time entries error`,\r\n        \"error\"\r\n      );\r\n\r\n      return false;\r\n    } catch (error) {\r\n      console.log(error);\r\n      getRoot().authStore.feedFetchDataLog(\r\n        `fetch user ${name} time entries error`,\r\n        \"error\"\r\n      );\r\n      return false;\r\n    }\r\n  }\r\n\r\n  *fetchAllUsersTimeEntries() {\r\n    try {\r\n      getRoot().authStore.feedFetchDataLog(\r\n        \"fetching all users time entries...\"\r\n      );\r\n\r\n      let newUsers = [];\r\n\r\n      for (const user of this.userList) {\r\n        const data = yield this.fetchUserTimeEntries(user);\r\n\r\n        if (data) {\r\n          const { timeEntries, hours } = data;\r\n\r\n          newUsers.push({\r\n            ...user,\r\n            timeEntries,\r\n            hours,\r\n          });\r\n        }\r\n      }\r\n\r\n      if (newUsers.length) {\r\n        this.setUserList(newUsers);\r\n        getRoot().authStore.feedFetchDataLog(\r\n          \"fetch all users time entries success\",\r\n          \"success\"\r\n        );\r\n        return true;\r\n      }\r\n\r\n      getRoot().authStore.feedFetchDataLog(\r\n        \"fetch all users time entries error\",\r\n        \"error\"\r\n      );\r\n      return false;\r\n    } catch (error) {\r\n      getRoot().authStore.feedFetchDataLog(\r\n        \"fetch all users time entries error\",\r\n        \"error\"\r\n      );\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { makeObservable, observable } from \"mobx\";\r\n\r\nexport default class Project {\r\n  id = null;\r\n  name = null;\r\n  email = null;\r\n  workspaceId = null;\r\n  color = null;\r\n  duration = null;\r\n  estimate = null;\r\n  users = [];\r\n  fetchedTimeEntries = false;\r\n  timeEntriesByUser = [];\r\n\r\n  constructor(newProject) {\r\n    makeObservable(this, {\r\n      id: observable,\r\n      name: observable,\r\n      email: observable,\r\n      workspaceId: observable,\r\n      color: observable,\r\n      duration: observable,\r\n      estimate: observable,\r\n      users: observable,\r\n      fetchedTimeEntries: observable,\r\n      timeEntriesByUser: observable,\r\n    });\r\n\r\n    if (newProject == null || newProject.id == null) {\r\n      throw new Error(\"Invalid Project constructor\");\r\n    }\r\n\r\n    const {\r\n      id,\r\n      name,\r\n      email,\r\n      workspaceId,\r\n      color,\r\n      duration,\r\n      estimate,\r\n      users,\r\n      fetchedTimeEntries,\r\n      timeEntriesByUser,\r\n    } = newProject;\r\n\r\n    this.id = id;\r\n    this.name = name || \"\";\r\n    this.email = email || \"\";\r\n    this.workspaceId = workspaceId || \"\";\r\n    this.color = color || \"\";\r\n    this.duration = duration || \"\";\r\n    this.estimate = estimate || \"\";\r\n    this.users = users || [];\r\n    this.fetchedTimeEntries = fetchedTimeEntries || false;\r\n    this.timeEntriesByUser = timeEntriesByUser || [];\r\n  }\r\n\r\n  static fromApi({\r\n    id,\r\n    name,\r\n    email,\r\n    workspaceId,\r\n    color,\r\n    duration,\r\n    estimate,\r\n    users,\r\n    fetchedTimeEntries,\r\n    timeEntriesByUser,\r\n  } = {}) {\r\n    return new Project({\r\n      id,\r\n      name,\r\n      email,\r\n      workspaceId,\r\n      color,\r\n      duration,\r\n      estimate,\r\n      users,\r\n      fetchedTimeEntries,\r\n      timeEntriesByUser,\r\n    });\r\n  }\r\n}\r\n","/* eslint-disable no-loop-func */\r\nimport { action, flow, makeObservable, observable } from \"mobx\";\r\nimport { getEnv, getRoot } from \"mobx-easy\";\r\n\r\nimport Project from \"../models/project\";\r\n\r\nimport getDuration from \"../../utils/getDuration\";\r\nexport default class ProjectStore {\r\n  projectList = [];\r\n\r\n  constructor() {\r\n    makeObservable(this, {\r\n      projectList: observable,\r\n      setProjectList: action.bound,\r\n      fetchProjectData: action.bound,\r\n      fetchProjectList: flow,\r\n    });\r\n  }\r\n\r\n  setProjectList(payload = []) {\r\n    this.projectList = payload.map((project) => Project.fromApi(project));\r\n  }\r\n\r\n  *fetchProjectList(payload = {}) {\r\n    try {\r\n      getRoot().authStore.feedFetchDataLog(\"fetching project list...\");\r\n\r\n      const { pageSize = 1000 } = payload;\r\n      const { defaultWorkspace } = getRoot().authStore.user;\r\n\r\n      const response = yield getEnv().get(\r\n        `/workspaces/${defaultWorkspace}/projects`,\r\n        {\r\n          params: {\r\n            archived: false,\r\n            \"page-size\": pageSize,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.status !== 200) {\r\n        getRoot().authStore.feedFetchDataLog(\r\n          \"fetch project list error\",\r\n          \"error\"\r\n        );\r\n        return false;\r\n      }\r\n\r\n      if (response?.data?.length) {\r\n        this.setProjectList(response.data);\r\n        getRoot().authStore.feedFetchDataLog(\r\n          \"fetch project list success\",\r\n          \"success\"\r\n        );\r\n\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    } catch (error) {\r\n      console.log(error);\r\n      getRoot().authStore.feedFetchDataLog(\"fetch project list error\", \"error\");\r\n      return false;\r\n    }\r\n  }\r\n\r\n  fetchProjectData(payload = {}) {\r\n    try {\r\n      const { id } = payload;\r\n\r\n      let projectTimeEntriesByUser = [];\r\n      for (const user of getRoot().userStore.userList) {\r\n        const projectTimeEntriesFound = user.timeEntries.filter(\r\n          (entry) => entry.projectId === id\r\n        );\r\n\r\n        for (const timeEntry of projectTimeEntriesFound) {\r\n          const userFound = projectTimeEntriesByUser.find(\r\n            (user) => user.id === timeEntry.userId\r\n          );\r\n\r\n          let hours = 0;\r\n\r\n          const time = timeEntry?.timeInterval?.duration;\r\n\r\n          if (time?.length) {\r\n            hours += getDuration(time);\r\n          }\r\n\r\n          if (userFound) {\r\n            projectTimeEntriesByUser = projectTimeEntriesByUser.map((user) => {\r\n              if (user.id === timeEntry.userId) {\r\n                return {\r\n                  ...user,\r\n                  timeEntries: [...user.timeEntries, timeEntry],\r\n                  hours: user.hours + hours,\r\n                };\r\n              }\r\n\r\n              return user;\r\n            });\r\n          } else {\r\n            projectTimeEntriesByUser.push({\r\n              ...user,\r\n              timeEntries: [timeEntry],\r\n              hours,\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n      this.setProjectList(\r\n        this.projectList.map((project) => {\r\n          if (project.id === id) {\r\n            return {\r\n              ...payload,\r\n              timeEntriesByUser: projectTimeEntriesByUser,\r\n              fetchedTimeEntries: true,\r\n            };\r\n          }\r\n\r\n          return project;\r\n        })\r\n      );\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { makeObservable, observable } from \"mobx\";\r\n\r\nexport default class Team {\r\n  id = null;\r\n  name = null;\r\n  image = null;\r\n  users = [];\r\n  fetchedTimeEntries = false;\r\n  timeEntriesByProject = [];\r\n\r\n  constructor(newTeam) {\r\n    makeObservable(this, {\r\n      id: observable,\r\n      name: observable,\r\n      image: observable,\r\n      users: observable,\r\n      fetchedTimeEntries: observable,\r\n      timeEntriesByProject: observable,\r\n    });\r\n\r\n    if (newTeam == null || newTeam.id == null) {\r\n      throw new Error(\"Invalid Team constructor\");\r\n    }\r\n\r\n    const { id, name, image, users, fetchedTimeEntries, timeEntriesByProject } =\r\n      newTeam;\r\n\r\n    this.id = id;\r\n    this.name = name || \"\";\r\n    this.image = image || \"\";\r\n    this.users = users || [];\r\n    this.fetchedTimeEntries = fetchedTimeEntries || false;\r\n    this.timeEntriesByProject = timeEntriesByProject || [];\r\n  }\r\n\r\n  static fromApi({\r\n    id,\r\n    name,\r\n    image,\r\n    users,\r\n    fetchedTimeEntries,\r\n    timeEntriesByProject,\r\n  } = {}) {\r\n    return new Team({\r\n      id,\r\n      name,\r\n      image,\r\n      users,\r\n      fetchedTimeEntries,\r\n      timeEntriesByProject,\r\n    });\r\n  }\r\n}\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport { action, makeObservable, observable } from \"mobx\";\r\nimport { getRoot } from \"mobx-easy\";\r\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\r\nimport getDuration from \"../../utils/getDuration\";\r\n\r\nimport Team from \"../models/team\";\r\n\r\nexport default class TeamStore {\r\n  teamList = [];\r\n\r\n  constructor() {\r\n    makeObservable(this, {\r\n      teamList: observable,\r\n\r\n      setTeamList: action.bound,\r\n      createTeam: action.bound,\r\n      editTeam: action.bound,\r\n      fetchTeamList: action.bound,\r\n      fetchTeamData: action.bound,\r\n    });\r\n  }\r\n\r\n  createTeam(payload = {}) {\r\n    try {\r\n      const { users } = payload;\r\n      const [_teamList, setTeamList] = useLocalStorage(\"team-list\");\r\n\r\n      const teamList = _teamList || [];\r\n\r\n      let id = 1;\r\n\r\n      if (teamList.length) {\r\n        id = teamList.length + 1;\r\n        setTeamList([\r\n          ...teamList,\r\n          {\r\n            ...payload,\r\n            id,\r\n            users: users.map((user) => user.id),\r\n          },\r\n        ]);\r\n      } else {\r\n        setTeamList([\r\n          {\r\n            ...payload,\r\n            id: 1,\r\n            users: users.map((user) => user.id),\r\n          },\r\n        ]);\r\n      }\r\n\r\n      return id;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return false;\r\n    } finally {\r\n      this.fetchTeamList();\r\n    }\r\n  }\r\n\r\n  editTeam(id, payload = {}) {\r\n    try {\r\n      const [teamList, setTeamList] = useLocalStorage(\"team-list\");\r\n      const { users } = payload;\r\n\r\n      setTeamList(\r\n        teamList.map((team) => {\r\n          if (team.id === id) {\r\n            return {\r\n              ...team,\r\n              ...payload,\r\n              users: users.map((user) => user.id),\r\n            };\r\n          }\r\n          return team;\r\n        })\r\n      );\r\n\r\n      return id;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return false;\r\n    } finally {\r\n      this.fetchTeamList();\r\n    }\r\n  }\r\n\r\n  removeTeam(payload = {}) {\r\n    try {\r\n      const [teamList, setTeamList] = useLocalStorage(\"team-list\");\r\n      const newTeamList = teamList.filter((team) => team.id !== payload.id);\r\n      setTeamList(newTeamList);\r\n      this.setTeamList(\r\n        newTeamList.map((team) => ({\r\n          ...team,\r\n          users: getRoot().userStore.userList.filter((user) =>\r\n            team.users.includes(user.id)\r\n          ),\r\n        }))\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  setTeamList(payload = []) {\r\n    this.teamList = payload.map((team) => Team.fromApi(team));\r\n  }\r\n\r\n  fetchTeamList() {\r\n    try {\r\n      getRoot().authStore.feedFetchDataLog(\"fetching team list...\");\r\n\r\n      const [teamList] = useLocalStorage(\"team-list\");\r\n\r\n      if (teamList.length) {\r\n        this.setTeamList(\r\n          teamList.map((team) => ({\r\n            ...team,\r\n            users: getRoot().userStore.userList.filter((user) =>\r\n              team.users.includes(user.id)\r\n            ),\r\n          }))\r\n        );\r\n\r\n        getRoot().authStore.feedFetchDataLog(\r\n          \"fetch team list success\",\r\n          \"success\"\r\n        );\r\n      }\r\n\r\n      return false;\r\n    } catch (error) {\r\n      console.log(error);\r\n      getRoot().authStore.feedFetchDataLog(\"fetch team list error\", \"error\");\r\n      return false;\r\n    }\r\n  }\r\n\r\n  fetchTeamData(payload = {}) {\r\n    try {\r\n      const { id, users = [] } = payload;\r\n\r\n      let usersWithTimeEntries = [];\r\n      let teamTimeEntriesByProject = [];\r\n      for (const user of users) {\r\n        const userFound = getRoot().userStore.userList.find(\r\n          (_user) => _user.id === user.id\r\n        );\r\n\r\n        if (userFound) {\r\n          const { timeEntries, hours } = userFound;\r\n\r\n          for (const timeEntry of timeEntries) {\r\n            const projectFound = teamTimeEntriesByProject.find(\r\n              (project) => project.id === timeEntry.projectId\r\n            );\r\n\r\n            let hours = 0;\r\n            const time = timeEntry?.timeInterval?.duration;\r\n\r\n            if (time?.length) {\r\n              hours += getDuration(time);\r\n            }\r\n\r\n            if (projectFound) {\r\n              teamTimeEntriesByProject = teamTimeEntriesByProject.map(\r\n                (project) => {\r\n                  if (project.id === timeEntry.projectId) {\r\n                    return {\r\n                      ...project,\r\n                      id: timeEntry.projectId,\r\n                      timeEntries: [...project.timeEntries, timeEntry],\r\n                      hours: project.hours + hours,\r\n                    };\r\n                  }\r\n\r\n                  return project;\r\n                }\r\n              );\r\n            } else {\r\n              teamTimeEntriesByProject.push({\r\n                id: timeEntry.projectId,\r\n                timeEntries: [timeEntry],\r\n                hours,\r\n              });\r\n            }\r\n          }\r\n\r\n          const newUser = getRoot().userStore.userList.find(\r\n            (_user) => _user.id === user.id\r\n          );\r\n\r\n          usersWithTimeEntries.push({\r\n            ...newUser,\r\n            timeEntries,\r\n            hours,\r\n          });\r\n        }\r\n      }\r\n\r\n      let index = 0;\r\n      for (const project of teamTimeEntriesByProject) {\r\n        if (project.id) {\r\n          const projectFound = getRoot().projectStore.projectList.find(\r\n            (_project) => _project.id === project.id\r\n          );\r\n\r\n          if (projectFound) {\r\n            teamTimeEntriesByProject[index] = {\r\n              ...teamTimeEntriesByProject[index],\r\n              name: projectFound.name,\r\n              color: projectFound.color,\r\n            };\r\n          }\r\n        } else {\r\n          teamTimeEntriesByProject[index] = {\r\n            ...teamTimeEntriesByProject[index],\r\n            name: \"Sem projeto\",\r\n            color: \"#ffffff\",\r\n          };\r\n        }\r\n\r\n        index++;\r\n      }\r\n\r\n      const newTeam = {\r\n        ...payload,\r\n        users: usersWithTimeEntries,\r\n        timeEntriesByProject: teamTimeEntriesByProject,\r\n        fetchedTimeEntries: true,\r\n      };\r\n\r\n      this.setTeamList(\r\n        this.teamList.map((team) => {\r\n          if (team.id === id) {\r\n            return newTeam;\r\n          }\r\n\r\n          return team;\r\n        })\r\n      );\r\n\r\n      return newTeam;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import AuthStore from \"./authStore\";\r\nimport UserStore from \"./userStore\";\r\nimport ProjectStore from \"./projectStore\";\r\nimport TeamStore from \"./teamStore\";\r\n\r\nexport default class RootStore {\r\n  authStore = null;\r\n  userStore = null;\r\n  projectStore = null;\r\n  teamStore = null;\r\n\r\n  init() {\r\n    this.authStore = new AuthStore();\r\n    this.userStore = new UserStore();\r\n    this.projectStore = new ProjectStore();\r\n    this.teamStore = new TeamStore();\r\n  }\r\n}\r\n","import { createContext, useContext } from \"react\";\r\n\r\nconst RootStoreContext = createContext({});\r\n\r\nexport const RootStoreProvider = RootStoreContext.Provider;\r\n\r\nexport const useStore = () => useContext(RootStoreContext);\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst menuButtons = [\r\n  {\r\n    route: \"/\",\r\n    label: \"Projetos\",\r\n  },\r\n  {\r\n    route: \"/users\",\r\n    label: \"Colaboradores\",\r\n  },\r\n  {\r\n    route: \"/teams\",\r\n    label: \"Equipes\",\r\n  },\r\n];\r\n\r\nconst Menu = ({ vertical, drawer }) => {\r\n  const history = useHistory();\r\n\r\n  const handleClick = (route) => {\r\n    history.push(route);\r\n    if (drawer) drawer.close();\r\n  };\r\n\r\n  return (\r\n    <nav className={`menu ${vertical ? \"vertical\" : \"\"}`}>\r\n      <ul className=\"menu__list\">\r\n        {menuButtons.map((item) => (\r\n          <li className=\"menu__list__item\" key={item.route}>\r\n            <Button\r\n              className=\"menu__list__item__button\"\r\n              fullWidth={vertical}\r\n              color=\"primary\"\r\n              onClick={() => handleClick(item.route)}\r\n            >\r\n              {item.label}\r\n            </Button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { useState } from \"react\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport Menu from \"../Menu/Menu\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst Drawer = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const open = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const close = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"drawer\">\r\n      <Button onClick={open}>\r\n        <MenuIcon color=\"primary\" />\r\n      </Button>\r\n      <SwipeableDrawer\r\n        anchor={\"left\"}\r\n        open={isOpen}\r\n        onClose={close}\r\n        onOpen={open}\r\n      >\r\n        <div className=\"drawer__content\">\r\n          <Menu vertical drawer={{ close }} />\r\n        </div>\r\n      </SwipeableDrawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Drawer;\r\n","import React from \"react\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst Logo = () => {\r\n  return <div className=\"logo\">Clockify Teams</div>;\r\n};\r\n\r\nexport default Logo;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport Menu from \"../Menu/Menu\";\r\nimport Drawer from \"../Drawer/Drawer\";\r\nimport Logo from \"../Logo/Logo\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <Container maxWidth=\"xl\">\r\n        <div className=\"header__content\">\r\n          <Logo />\r\n          <div className=\"header__menu\">\r\n            <Menu />\r\n          </div>\r\n          <div className=\"header__drawer\">\r\n            <Drawer />\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default observer(Header);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Avatar, ListItem } from \"@material-ui/core\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst User = (props) => {\r\n  const { id, name = \"\", profilePicture = \"\", email = \"\", disabled } = props;\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <ListItem\r\n      button={!disabled}\r\n      onClick={() => (!disabled ? history.push(`/users/${id}`) : null)}\r\n      className=\"user\"\r\n    >\r\n      <Avatar alt={name} src={profilePicture} className=\"user__avatar\" />\r\n      <div className=\"user__data\">\r\n        <div className=\"user__name\">{name}</div>\r\n        <div className=\"user__email\">{email}</div>\r\n      </div>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default observer(User);\r\n","import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nconst HorizontalBarChart = (props) => {\r\n  const { data = {} } = props;\r\n\r\n  const options = {\r\n    responsive: true,\r\n    indexAxis: \"y\",\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n  };\r\n  return <Bar data={data} options={options} />;\r\n};\r\n\r\nexport default HorizontalBarChart;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Fab,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { Edit, Delete } from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\n\r\nimport User from \"../../components/User/User\";\r\nimport HorizontalBarChart from \"../../components/Chart/HorizontalBarChart\";\r\n\r\nimport \"./styles.scss\";\r\nimport { Avatar } from \"@material-ui/core\";\r\n\r\nconst TeamDetail = () => {\r\n  const store = useStore();\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const [team, setTeam] = useState(null);\r\n  const [showConfirmationModal, setShowConfirmationModal] = useState(false);\r\n  const foundTeam = store.teamStore.teamList.find(\r\n    (team) => team.id === Number(params.id)\r\n  );\r\n\r\n  const openConfirmationModal = () => {\r\n    setShowConfirmationModal(true);\r\n  };\r\n\r\n  const closeConfirmationModal = () => {\r\n    setShowConfirmationModal(false);\r\n  };\r\n\r\n  const removeTeam = () => {\r\n    store.teamStore.removeTeam(team);\r\n    closeConfirmationModal();\r\n    history.push(`/teams`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTeam(foundTeam);\r\n  }, [foundTeam]);\r\n\r\n  useEffect(() => {\r\n    store.teamStore.fetchTeamData(foundTeam);\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  if (!team) return null;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"screen team-detail\">\r\n        <Container maxWidth=\"xl\">\r\n          <header className=\"screen__header\">\r\n            <div className=\"screen__header__left\">\r\n              <Avatar\r\n                alt={team?.name}\r\n                src={team?.image}\r\n                className=\"team-detail__avatar\"\r\n              />\r\n              <h2>{team?.name}</h2>\r\n            </div>\r\n            <div className=\"screen__header__right\">\r\n              <Button onClick={openConfirmationModal}>\r\n                <Delete />\r\n              </Button>\r\n            </div>\r\n          </header>\r\n\r\n          <main>\r\n            {team?.fetchedTimeEntries ? (\r\n              <>\r\n                <div className=\"team-detail__chart\">\r\n                  <header className=\"section-header\">\r\n                    <h3>Horas por projeto</h3>\r\n                  </header>\r\n                  <HorizontalBarChart\r\n                    data={{\r\n                      labels: _.orderBy(\r\n                        team.timeEntriesByProject,\r\n                        \"hours\",\r\n                        \"desc\"\r\n                      ).map((project) => project.name),\r\n                      datasets: [\r\n                        {\r\n                          label: \"Horas\",\r\n                          data: _.orderBy(\r\n                            team.timeEntriesByProject,\r\n                            \"hours\",\r\n                            \"desc\"\r\n                          ).map((project) =>\r\n                            project?.hours ? project.hours.toFixed(2) : 0\r\n                          ),\r\n                          backgroundColor: _.orderBy(\r\n                            team.timeEntriesByProject,\r\n                            \"hours\",\r\n                            \"desc\"\r\n                          ).map((project) => `${project.color}85`),\r\n                          borderWidth: 0,\r\n                        },\r\n                      ],\r\n                    }}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"team-detail__chart\">\r\n                  <header className=\"section-header\">\r\n                    <h3>Horas por colaborador</h3>\r\n                  </header>\r\n                  <HorizontalBarChart\r\n                    data={{\r\n                      labels: _.orderBy(team.users, \"hours\", \"desc\").map(\r\n                        (user) => user.name\r\n                      ),\r\n                      datasets: [\r\n                        {\r\n                          label: \"Horas\",\r\n                          data: _.orderBy(team.users, \"hours\", \"desc\").map(\r\n                            (user) => (user?.hours ? user.hours.toFixed(2) : 0)\r\n                          ),\r\n                          backgroundColor: [\"rgba(255, 255, 255, 0.08)\"],\r\n                          borderWidth: 0,\r\n                        },\r\n                      ],\r\n                    }}\r\n                  />\r\n                </div>\r\n              </>\r\n            ) : null}\r\n\r\n            <div className=\"user-list\">\r\n              <header className=\"section-header\">\r\n                <h3>Colaboradores na equipe</h3>\r\n              </header>\r\n              {team?.users?.length\r\n                ? team.users.map((user) => (\r\n                    <User\r\n                      id={user.id}\r\n                      key={user.id}\r\n                      profilePicture={user?.profilePicture}\r\n                      name={user?.name}\r\n                      email={user?.email}\r\n                      hours={user?.hours}\r\n                      hourValue={user?.hourValue}\r\n                      payment={user?.payment}\r\n                    />\r\n                  ))\r\n                : null}\r\n            </div>\r\n          </main>\r\n        </Container>\r\n        <Fab\r\n          className=\"team-detail__edit-team\"\r\n          color=\"primary\"\r\n          aria-label=\"Editar equipe\"\r\n          onClick={() => {\r\n            history.push(`/teams/edit/${team.id}`);\r\n          }}\r\n        >\r\n          <Edit />\r\n        </Fab>\r\n      </div>\r\n      <Dialog\r\n        open={showConfirmationModal}\r\n        onClose={closeConfirmationModal}\r\n        aria-labelledby=\"draggable-dialog-title\"\r\n      >\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          {`Excluir equipe ${team.name}`}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {`Você tem certeza que deseja excluir a equipe ${team.name}?`}\r\n          </DialogContentText>\r\n          <DialogContentText>Esta ação é irreversível.</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={closeConfirmationModal} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          <Button onClick={removeTeam} color=\"primary\">\r\n            Confirmar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(TeamDetail);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Avatar, ListItem } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst Team = (props) => {\r\n  const {\r\n    id,\r\n    name = \"\",\r\n    image = \"\",\r\n    avatarSize = 50,\r\n    fontSize = 16,\r\n    disabled = false,\r\n  } = props;\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <ListItem\r\n      className=\"team\"\r\n      button={!disabled}\r\n      onClick={() => (!disabled ? history.push(`/teams/${id}`) : null)}\r\n    >\r\n      <Avatar\r\n        alt={name}\r\n        src={image}\r\n        className=\"team__avatar\"\r\n        style={{ width: avatarSize, height: avatarSize }}\r\n      />\r\n\r\n      <div className=\"team__data\">\r\n        <div className=\"team__name\" style={{ fontSize }}>\r\n          {name}\r\n        </div>\r\n      </div>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default observer(Team);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { TextField, Button, Container } from \"@material-ui/core\";\r\nimport { ArrowBack, ArrowForward } from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\n\r\nimport User from \"../../components/User/User\";\r\nimport Team from \"../../components/Team/Team\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst EditTeam = () => {\r\n  const store = useStore();\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const teamData = store.teamStore.teamList.find(\r\n    (team) => team.id === Number(params.id)\r\n  );\r\n  const [teamName, setTeamName] = useState(\"\");\r\n  const [teamImage, setTeamImage] = useState(\"\");\r\n  const [userList, setUserList] = useState([]);\r\n  const [newUserList, setNewUserList] = useState([]);\r\n\r\n  const addUser = (_user, _userList, _newUserList) => {\r\n    setUserList(\r\n      _.sortBy(\r\n        _userList.filter((user) => user.id !== _user.id),\r\n        \"name\"\r\n      )\r\n    );\r\n    setNewUserList(_.sortBy([..._newUserList, _user], \"name\"));\r\n  };\r\n\r\n  const removeUser = (_user, _userList, _newUserList) => {\r\n    setNewUserList(\r\n      _.sortBy(\r\n        _newUserList.filter((user) => user.id !== _user.id),\r\n        \"name\"\r\n      )\r\n    );\r\n    setUserList(_.sortBy([..._userList, _user], \"name\"));\r\n  };\r\n\r\n  const editTeam = async () => {\r\n    const newTeamId = await store.teamStore.editTeam(teamData.id, {\r\n      name: teamName,\r\n      image: teamImage,\r\n      users: newUserList,\r\n    });\r\n\r\n    history.push(`/teams/${newTeamId}`);\r\n\r\n    if (newTeamId) alert(`Suas alterações foram salvas.`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTeamName(teamData.name);\r\n    setTeamImage(teamData.image);\r\n    setNewUserList(teamData.users);\r\n\r\n    const _userList = [...store.userStore.userList];\r\n    teamData.users.forEach((_user) => {\r\n      _userList.forEach((user, index) => {\r\n        if (user.id === _user.id) _userList.splice(index, 1);\r\n      });\r\n    });\r\n    setUserList(_userList);\r\n  }, [teamData]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"screen create-team\">\r\n      <Container maxWidth=\"xl\">\r\n        <header className=\"screen__header\">\r\n          <h2>{`Editar equipe ${teamData.name}`}</h2>\r\n        </header>\r\n\r\n        <main>\r\n          <div className=\"create-team__form\">\r\n            <div className=\"create-team__form__content\">\r\n              <TextField\r\n                id=\"team-name\"\r\n                label=\"Nome\"\r\n                variant=\"filled\"\r\n                value={teamName}\r\n                onChange={(e) => {\r\n                  setTeamName(e.target.value);\r\n                }}\r\n              />\r\n              <TextField\r\n                id=\"team-image\"\r\n                label=\"Imagem\"\r\n                variant=\"filled\"\r\n                value={teamImage}\r\n                onChange={(e) => {\r\n                  setTeamImage(e.target.value);\r\n                }}\r\n              />\r\n              {teamName?.length || teamImage?.length ? (\r\n                <div className=\"screen__header__preview\">\r\n                  <Team\r\n                    name={teamName}\r\n                    image={teamImage}\r\n                    avatarSize={80}\r\n                    fontSize={22}\r\n                    disabled\r\n                  />\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <Button variant=\"outlined\" onClick={editTeam}>\r\n              Salvar Alterações\r\n            </Button>\r\n          </div>\r\n\r\n          <div className=\"create-team__user-lists\">\r\n            <div className=\"user-list\">\r\n              <header className=\"section-header\">\r\n                <h3>Todos os colaboradores</h3>\r\n              </header>\r\n              {userList.map((user) => (\r\n                <div className=\"user-list__item\" key={user.id}>\r\n                  <User\r\n                    key={user.id}\r\n                    id={user.id}\r\n                    profilePicture={user?.profilePicture}\r\n                    name={user?.name}\r\n                    email={user?.email}\r\n                    hours={user?.hours}\r\n                    hourValue={user?.hourValue}\r\n                    payment={user?.payment}\r\n                  />\r\n                  <Button\r\n                    className=\"user-list__item__bt-add\"\r\n                    onClick={() => addUser(user, userList, newUserList)}\r\n                  >\r\n                    <ArrowForward />\r\n                  </Button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"user-list\">\r\n              <header className=\"section-header\">\r\n                <h3>Colaboradores na equipe</h3>\r\n              </header>\r\n              {newUserList.map((user) => (\r\n                <div className=\"user-list__item\" key={user.id}>\r\n                  <Button\r\n                    className=\"user-list__item__bt-add\"\r\n                    onClick={() => removeUser(user, userList, newUserList)}\r\n                  >\r\n                    <ArrowBack />\r\n                  </Button>\r\n                  <User\r\n                    id={user.id}\r\n                    profilePicture={user?.profilePicture}\r\n                    name={user?.name}\r\n                    email={user?.email}\r\n                    hours={user?.hours}\r\n                    hourValue={user?.hourValue}\r\n                    payment={user?.payment}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(EditTeam);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { TextField, Button, Container } from \"@material-ui/core\";\r\nimport { ArrowBack, ArrowForward } from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\n\r\nimport User from \"../../components/User/User\";\r\nimport Team from \"../../components/Team/Team\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst CreateTeam = () => {\r\n  const store = useStore();\r\n  const history = useHistory();\r\n  const [teamName, setTeamName] = useState(\"\");\r\n  const [teamImage, setTeamImage] = useState(\"\");\r\n  const [userList, setUserList] = useState([]);\r\n  const [newUserList, setNewUserList] = useState([]);\r\n\r\n  const addUser = (_user) => {\r\n    setUserList(\r\n      _.sortBy(\r\n        userList.filter((user) => user.id !== _user.id),\r\n        \"name\"\r\n      )\r\n    );\r\n    setNewUserList(_.sortBy([...newUserList, _user], \"name\"));\r\n  };\r\n\r\n  const removeUser = (_user) => {\r\n    setNewUserList(\r\n      _.sortBy(\r\n        newUserList.filter((user) => user.id !== _user.id),\r\n        \"name\"\r\n      )\r\n    );\r\n    setUserList(_.sortBy([...userList, _user], \"name\"));\r\n  };\r\n\r\n  const createTeam = async () => {\r\n    const newTeamId = store.teamStore.createTeam({\r\n      name: teamName,\r\n      image: teamImage,\r\n      users: newUserList,\r\n    });\r\n\r\n    store.teamStore.fetchTeamList();\r\n\r\n    history.push(`/teams/${newTeamId}`);\r\n\r\n    if (newTeamId) alert(`A equipe ${teamName} foi criada.`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUserList(store.userStore.userList);\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"screen create-team\">\r\n      <Container maxWidth=\"xl\">\r\n        <header className=\"screen__header\">\r\n          <h2>Criar equipe</h2>\r\n        </header>\r\n\r\n        <main>\r\n          <div className=\"create-team__form\">\r\n            <div className=\"create-team__form__content\">\r\n              <TextField\r\n                id=\"team-name\"\r\n                label=\"Nome\"\r\n                variant=\"filled\"\r\n                value={teamName}\r\n                onChange={(e) => {\r\n                  setTeamName(e.target.value);\r\n                }}\r\n              />\r\n              <TextField\r\n                id=\"team-image\"\r\n                label=\"Imagem\"\r\n                variant=\"filled\"\r\n                value={teamImage}\r\n                onChange={(e) => {\r\n                  setTeamImage(e.target.value);\r\n                }}\r\n              />\r\n              {teamName?.length || teamImage?.length ? (\r\n                <div className=\"screen__header__preview\">\r\n                  <Team\r\n                    name={teamName}\r\n                    image={teamImage}\r\n                    avatarSize={80}\r\n                    fontSize={22}\r\n                    disabled\r\n                  />\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <Button variant=\"outlined\" onClick={createTeam}>\r\n              Criar\r\n            </Button>\r\n          </div>\r\n\r\n          <div className=\"create-team__user-lists\">\r\n            <div className=\"user-list\">\r\n              <header className=\"section-header\">\r\n                <h3>Todos os colaboradores</h3>\r\n              </header>\r\n              {userList.map((user) => (\r\n                <div className=\"user-list__item\" key={user.id}>\r\n                  <User\r\n                    key={user.id}\r\n                    id={user.id}\r\n                    profilePicture={user?.profilePicture}\r\n                    name={user?.name}\r\n                    email={user?.email}\r\n                    hours={user?.hours}\r\n                    hourValue={user?.hourValue}\r\n                    payment={user?.payment}\r\n                  />\r\n                  <Button\r\n                    className=\"user-list__item__bt-add\"\r\n                    onClick={() => addUser(user)}\r\n                  >\r\n                    <ArrowForward />\r\n                  </Button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"user-list\">\r\n              <header className=\"section-header\">\r\n                <h3>Colaboradores na equipe</h3>\r\n              </header>\r\n              {newUserList.map((user) => (\r\n                <div className=\"user-list__item\" key={user.id}>\r\n                  <Button\r\n                    className=\"user-list__item__bt-add\"\r\n                    onClick={() => removeUser(user)}\r\n                  >\r\n                    <ArrowBack />\r\n                  </Button>\r\n                  <User\r\n                    id={user.id}\r\n                    profilePicture={user?.profilePicture}\r\n                    name={user?.name}\r\n                    email={user?.email}\r\n                    hours={user?.hours}\r\n                    hourValue={user?.hourValue}\r\n                    payment={user?.payment}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(CreateTeam);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Container, TextField, Fab } from \"@material-ui/core\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\n\r\nimport Team from \"../../components/Team/Team\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst Teams = () => {\r\n  const store = useStore();\r\n  const history = useHistory();\r\n  const [filterTerm, setFilterTerm] = useState(\"\");\r\n  const [filteredList, setFilteredList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (filterTerm.length) {\r\n      setFilteredList(\r\n        store.teamStore.teamList.filter((item) =>\r\n          item.name.toLowerCase().includes(filterTerm.toLowerCase())\r\n        )\r\n      );\r\n      return;\r\n    }\r\n    setFilteredList(store.teamStore.teamList);\r\n  }, [filterTerm]);\r\n\r\n  useEffect(() => {\r\n    setFilteredList(store.teamStore.teamList);\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"screen teams\">\r\n      <Container maxWidth=\"xl\">\r\n        <header className=\"screen__header\">\r\n          <h2>Equipes</h2>\r\n\r\n          <div className=\"screen__header__right\">\r\n            {store?.teamStore?.teamList?.length ? (\r\n              <TextField\r\n                id=\"filter-term\"\r\n                label=\"Filtro\"\r\n                variant=\"filled\"\r\n                value={filterTerm}\r\n                onChange={(e) => {\r\n                  setFilterTerm(e.target.value);\r\n                }}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </header>\r\n\r\n        <main>\r\n          {!filteredList?.length ? (\r\n            <div>Nenhuma equipe encontrada.</div>\r\n          ) : (\r\n            filteredList.map((team) => (\r\n              <Team\r\n                key={team.id}\r\n                id={team.id}\r\n                name={team?.name}\r\n                image={team?.image}\r\n              />\r\n            ))\r\n          )}\r\n        </main>\r\n      </Container>\r\n      <Fab\r\n        className=\"teams__create-team\"\r\n        color=\"primary\"\r\n        aria-label=\"Criar equipe\"\r\n        onClick={() => {\r\n          history.push(\"/teams/create\");\r\n        }}\r\n      >\r\n        <Add />\r\n      </Fab>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Teams);\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst LineChart = (props) => {\r\n  const { data = {} } = props;\r\n\r\n  const options = {\r\n    responsive: true,\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  return <Line data={data} options={options} />;\r\n};\r\n\r\nexport default LineChart;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { ListItem } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst TimeEntry = (props) => {\r\n  const { project = {}, time = \"\", description = \"\", disabled = false } = props;\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <ListItem\r\n      button={!disabled}\r\n      className=\"time-entry\"\r\n      onClick={() =>\r\n        project.id ? history.push(`/projects/${project.id}`) : null\r\n      }\r\n      style={{\r\n        borderColor: project.color,\r\n      }}\r\n    >\r\n      <div className=\"time-entry__top\">\r\n        <div className=\"time-entry__project-name\">{project.name}</div>\r\n      </div>\r\n      <div className=\"time-entry__bottom\">\r\n        <div\r\n          className=\"time-entry__time\"\r\n          style={{\r\n            borderColor: project.color,\r\n          }}\r\n        >\r\n          {time.replace(\"PT\", \"\").replace(\"H\", \"hr \").replace(\"M\", \"min\")}\r\n        </div>\r\n        -<div className=\"time-entry__description\">{description}</div>\r\n      </div>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default observer(TimeEntry);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Avatar, Container } from \"@material-ui/core\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\n\r\nimport LineChart from \"../../components/Chart/LineChart\";\r\nimport TimeEntry from \"../../components/TimeEntry/TimeEntry\";\r\nimport Team from \"../../components/Team/Team\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst UserDetail = () => {\r\n  const store = useStore();\r\n  const params = useParams();\r\n  const [user, setUser] = useState(null);\r\n  const foundUser = store.userStore.userList.find(\r\n    (project) => project.id === params.id\r\n  );\r\n\r\n  useEffect(() => {\r\n    setUser(foundUser);\r\n  }, [foundUser]);\r\n\r\n  useEffect(() => {\r\n    store.userStore.fetchUserData(foundUser);\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  if (!user) return null;\r\n\r\n  return (\r\n    <div className=\"screen user-detail\">\r\n      <Container maxWidth=\"xl\">\r\n        <header className=\"screen__header\">\r\n          <div className=\"screen__header__left\">\r\n            <Avatar\r\n              alt={user?.name}\r\n              src={user?.profilePicture}\r\n              className=\"user-detail__avatar\"\r\n            />\r\n            <h2>{user?.name}</h2>\r\n          </div>\r\n        </header>\r\n        <main>\r\n          {user?.teams.length ? (\r\n            <div className=\"user-detail__teams\">\r\n              <header className=\"section-header\">\r\n                <h3>Equipes do colaborador</h3>\r\n              </header>\r\n              {user.teams.map((team) => (\r\n                <Team\r\n                  key={team.id}\r\n                  id={team.id}\r\n                  name={team?.name}\r\n                  image={team?.image}\r\n                />\r\n              ))}\r\n            </div>\r\n          ) : null}\r\n\r\n          {user?.timeEntries.length ? (\r\n            <>\r\n              <div className=\"user-detail__chart\">\r\n                <header className=\"section-header\">\r\n                  <h3>Horas por dia</h3>\r\n                </header>\r\n                <LineChart\r\n                  data={{\r\n                    labels: user.timeEntriesByDay\r\n                      .map((entry) => entry.date)\r\n                      .reverse(),\r\n                    datasets: [\r\n                      {\r\n                        label: \"Horas\",\r\n                        data: user.timeEntriesByDay\r\n                          .map((entry) => entry.hours)\r\n                          .reverse(),\r\n                        backgroundColor: [\"rgba(255, 255, 255, 0.1)\"],\r\n                        borderColor: [\"rgba(255, 255, 255, 0.1)\"],\r\n                        borderWidth: 1,\r\n                      },\r\n                    ],\r\n                  }}\r\n                />\r\n              </div>\r\n            </>\r\n          ) : null}\r\n\r\n          {user?.timeEntries?.length ? (\r\n            <div className=\"time-entries\">\r\n              {user.timeEntriesByDay.map((day) => (\r\n                <div className=\"time-entries__day\" key={day.date}>\r\n                  <header className=\"section-header\">\r\n                    <h3>{day.date}</h3>\r\n                  </header>\r\n                  <div className=\"description\">\r\n                    {day.timeEntries.map((entry) => (\r\n                      <TimeEntry\r\n                        key={entry.id}\r\n                        disabled={!entry?.project?.id}\r\n                        project={entry.project}\r\n                        time={entry.timeInterval.duration}\r\n                        description={entry.description}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : null}\r\n\r\n          {!user?.timeEntries.length ? (\r\n            <div>\r\n              Nenhuma entrada encontrada para este usuário no período\r\n              selecionado.\r\n            </div>\r\n          ) : null}\r\n        </main>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(UserDetail);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Container, TextField } from \"@material-ui/core\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\n\r\nimport User from \"../../components/User/User\";\r\n\r\nconst Users = () => {\r\n  const store = useStore();\r\n  const [filterTerm, setFilterTerm] = useState(\"\");\r\n  const [filteredList, setFilteredList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (filterTerm.length) {\r\n      setFilteredList(\r\n        store.userStore.userList.filter((item) =>\r\n          item.name.toLowerCase().includes(filterTerm.toLowerCase())\r\n        )\r\n      );\r\n      return;\r\n    }\r\n    setFilteredList(store.userStore.userList);\r\n  }, [filterTerm]);\r\n\r\n  useEffect(() => {\r\n    setFilteredList(store.userStore.userList);\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"screen users\">\r\n      <Container maxWidth=\"xl\">\r\n        <header className=\"screen__header\">\r\n          <h2>Colaboradoes</h2>\r\n\r\n          {store?.userStore?.userList?.length ? (\r\n            <TextField\r\n              id=\"filter-term\"\r\n              label=\"Filtro\"\r\n              variant=\"filled\"\r\n              value={filterTerm}\r\n              onChange={(e) => {\r\n                setFilterTerm(e.target.value);\r\n              }}\r\n            />\r\n          ) : null}\r\n        </header>\r\n\r\n        <main>\r\n          {!filteredList?.length ? (\r\n            <div>Nenhum colaborador encontrado.</div>\r\n          ) : (\r\n            filteredList.map((user) => (\r\n              <User\r\n                id={user.id}\r\n                key={user.id}\r\n                profilePicture={user?.profilePicture}\r\n                name={user?.name}\r\n                email={user?.email}\r\n                hours={user?.hours}\r\n                hourValue={user?.hourValue}\r\n                payment={user?.payment}\r\n              />\r\n            ))\r\n          )}\r\n        </main>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Users);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { ListItem } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst Project = (props) => {\r\n  const { id, index, name = \"\", color = \"\", disabled = false } = props;\r\n  const [showColor, setShowColor] = useState(false);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const colorEffect = setTimeout(() => {\r\n      setShowColor(true);\r\n    }, index * 50 + 100);\r\n\r\n    return () => {\r\n      clearTimeout(colorEffect);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <ListItem\r\n      button={!disabled}\r\n      onClick={() => (!disabled ? history.push(`/projects/${id}`) : null)}\r\n      className=\"project\"\r\n      style={{\r\n        borderColor: showColor ? color : \"transparent\",\r\n      }}\r\n    >\r\n      <div className=\"project__name\">{name}</div>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default observer(Project);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Container, TextField } from \"@material-ui/core\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\n\r\nimport Project from \"../../components/Project/Project\";\r\n\r\nconst Projects = () => {\r\n  const store = useStore();\r\n  const [filterTerm, setFilterTerm] = useState(\"\");\r\n  const [filteredList, setFilteredList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (filterTerm.length) {\r\n      setFilteredList(\r\n        store.projectStore.projectList.filter((item) =>\r\n          item.name.toLowerCase().includes(filterTerm.toLowerCase())\r\n        )\r\n      );\r\n      return;\r\n    }\r\n    setFilteredList(store.projectStore.projectList);\r\n  }, [filterTerm]);\r\n\r\n  useEffect(() => {\r\n    setFilteredList(store.projectStore.projectList);\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"screen projects\">\r\n      <Container maxWidth=\"xl\">\r\n        <header className=\"screen__header\">\r\n          <h2>Projetos</h2>\r\n\r\n          {store?.projectStore?.projectList?.length ? (\r\n            <TextField\r\n              id=\"filter-term\"\r\n              label=\"Filtro\"\r\n              variant=\"filled\"\r\n              value={filterTerm}\r\n              onChange={(e) => {\r\n                setFilterTerm(e.target.value);\r\n              }}\r\n            />\r\n          ) : null}\r\n        </header>\r\n\r\n        <main>\r\n          {!filteredList?.length ? (\r\n            <div>Nenhum projeto encontrado.</div>\r\n          ) : (\r\n            filteredList.map((project, index) => (\r\n              <Project\r\n                key={project.id}\r\n                id={project.id}\r\n                color={project?.color}\r\n                name={project?.name}\r\n                index={index}\r\n              />\r\n            ))\r\n          )}\r\n        </main>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Projects);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport _ from \"lodash\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\nimport getDuration from \"../../utils/getDuration\";\r\n\r\nimport User from \"../../components/User/User\";\r\nimport HorizontalBarChart from \"../../components/Chart/HorizontalBarChart\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst ProjectDetail = () => {\r\n  const store = useStore();\r\n  const params = useParams();\r\n  const [project, setProject] = useState(null);\r\n  const foundProject = store.projectStore.projectList.find(\r\n    (project) => project.id === params.id\r\n  );\r\n\r\n  useEffect(() => {\r\n    setProject(foundProject);\r\n  }, [foundProject]);\r\n\r\n  useEffect(() => {\r\n    store.projectStore.fetchProjectData(foundProject);\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  if (!project) return null;\r\n\r\n  return (\r\n    <div className=\"screen project-detail\">\r\n      <Container maxWidth=\"xl\">\r\n        <header className=\"screen__header\">\r\n          <div className=\"screen__header__left\">\r\n            <h2>{project?.name}</h2>\r\n          </div>\r\n          <div className=\"screen__header__right\">\r\n            {\r\n              <div className=\"project-detail__estimate\">\r\n                <div>\r\n                  {`Estimativa: ${getDuration(\r\n                    project?.estimate.estimate\r\n                  )} horas`}\r\n                </div>\r\n                <div>\r\n                  {`Total: ${getDuration(project?.duration).toFixed(2)} horas`}\r\n                </div>\r\n\r\n                {getDuration(project?.estimate.estimate) &&\r\n                getDuration(project?.duration) ? (\r\n                  <div>\r\n                    {`Esforço: ${(\r\n                      (getDuration(project?.duration) /\r\n                        getDuration(project?.estimate.estimate)) *\r\n                      100\r\n                    ).toFixed(2)}%`}\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            }\r\n          </div>\r\n        </header>\r\n        <main>\r\n          {project?.fetchedTimeEntries && project?.timeEntriesByUser.length ? (\r\n            <>\r\n              <div className=\"project-detail__chart\">\r\n                <header className=\"section-header\">\r\n                  <h3>Horas por colaborador</h3>\r\n                </header>\r\n                <HorizontalBarChart\r\n                  data={{\r\n                    labels: _.orderBy(\r\n                      project.timeEntriesByUser,\r\n                      \"hours\",\r\n                      \"desc\"\r\n                    ).map((user) => user.name),\r\n                    datasets: [\r\n                      {\r\n                        label: \"Horas\",\r\n                        data: _.orderBy(\r\n                          project.timeEntriesByUser,\r\n                          \"hours\",\r\n                          \"desc\"\r\n                        ).map((user) =>\r\n                          user?.hours ? user.hours.toFixed(2) : 0\r\n                        ),\r\n                        backgroundColor: [`${project.color}85`],\r\n                        borderWidth: 0,\r\n                      },\r\n                    ],\r\n                  }}\r\n                />\r\n              </div>\r\n            </>\r\n          ) : null}\r\n\r\n          {project?.timeEntriesByUser?.length ? (\r\n            <div className=\"user-list\">\r\n              <header className=\"section-header\">\r\n                <h3>Colaboradores no projeto</h3>\r\n              </header>\r\n              {project.timeEntriesByUser.map((user) => (\r\n                <User\r\n                  id={user.id}\r\n                  key={user.id}\r\n                  profilePicture={user?.profilePicture}\r\n                  name={user?.name}\r\n                  email={user?.email}\r\n                  hours={user?.hours}\r\n                  hourValue={user?.hourValue}\r\n                  payment={user?.payment}\r\n                />\r\n              ))}\r\n            </div>\r\n          ) : null}\r\n\r\n          {project?.fetchedTimeEntries &&\r\n          !project?.timeEntriesByUser.length &&\r\n          !project?.timeEntriesByUser?.length ? (\r\n            <div>\r\n              Nenhuma entrada encontrada para este projeto no período\r\n              selecionado.\r\n            </div>\r\n          ) : null}\r\n        </main>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(ProjectDetail);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { flowResult } from \"mobx\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport {\r\n  TextField,\r\n  Container,\r\n  Button,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\n\r\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\r\nimport { useStore } from \"../../hooks\";\r\n\r\nimport User from \"../../components/User/User\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst date = new Date();\r\n\r\nconst Login = () => {\r\n  const store = useStore();\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [fetching, setFetching] = useState(false);\r\n  const [apiKey] = useLocalStorage(\"clockify-api-key\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date(date.getFullYear(), date.getMonth(), 1)\r\n  );\r\n  const [endDate, setEndDate] = useState(\r\n    new Date(date.getFullYear(), date.getMonth() + 1, 0)\r\n  );\r\n\r\n  const authenticate = async () => {\r\n    setFetching(true);\r\n    await flowResult(store.authStore.authenticate(inputValue));\r\n    setFetching(false);\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    store.userStore.setQueryDate(startDate, endDate);\r\n    setFetching(true);\r\n    await flowResult(store.projectStore.fetchProjectList());\r\n    await flowResult(store.userStore.fetchUserList());\r\n    await flowResult(store.userStore.fetchAllUsersTimeEntries());\r\n    store.teamStore.fetchTeamList();\r\n    setFetching(false);\r\n    store.authStore.confirmIdentity();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const dataLogContainer = document.querySelector(\".login .fetch-data-log\");\r\n    if (dataLogContainer) {\r\n      dataLogContainer.scrollTop = dataLogContainer.scrollHeight;\r\n    }\r\n  }, [store.authStore.fetchDataLog.length]);\r\n\r\n  useEffect(() => {\r\n    if (apiKey?.length) setInputValue(apiKey);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"screen login\">\r\n      <Container maxWidth=\"xl\" className=\"login__container\">\r\n        <h1>Clockify Teams</h1>\r\n        <div className=\"login__box\">\r\n          {!store.authStore.isConfirmingIdentity ? (\r\n            <>\r\n              {!store.authStore.autoLogin ? (\r\n                <TextField\r\n                  id=\"api-key\"\r\n                  label=\"Clockify API Key\"\r\n                  variant=\"filled\"\r\n                  value={inputValue}\r\n                  onChange={(e) => {\r\n                    setInputValue(e.target.value);\r\n                  }}\r\n                />\r\n              ) : null}\r\n              {fetching || store.authStore.autoLogin ? (\r\n                <LinearProgress />\r\n              ) : (\r\n                <Button variant=\"outlined\" onClick={authenticate}>\r\n                  Autenticar\r\n                </Button>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <User\r\n                disabled\r\n                name={store?.authStore?.user?.name}\r\n                profilePicture={store?.authStore?.user?.profilePicture}\r\n                email={store?.authStore?.user?.email}\r\n              />\r\n              <div className=\"query-date\">\r\n                <KeyboardDatePicker\r\n                  margin=\"normal\"\r\n                  id=\"start-date\"\r\n                  label=\"Data inicial\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  value={startDate}\r\n                  onChange={setStartDate}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"Selecione a data inicial\",\r\n                  }}\r\n                />\r\n                <KeyboardDatePicker\r\n                  margin=\"normal\"\r\n                  id=\"end-date\"\r\n                  label=\"Data final\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  value={endDate}\r\n                  onChange={setEndDate}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"Selecione a data final\",\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"fetch-data-log\">\r\n                {store.authStore.fetchDataLog.map(({ text, color }) => (\r\n                  <div style={{ color }} key={text}>\r\n                    {text}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              {fetching || store.authStore.autoLogin ? (\r\n                <LinearProgress />\r\n              ) : (\r\n                <Button variant=\"outlined\" onClick={fetchData}>\r\n                  Entrar\r\n                </Button>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Login);\r\n","import React from \"react\";\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\n\r\nimport Header from \"../Header/Header\";\r\n\r\nimport TeamDetail from \"../../screens/TeamDetail/TeamDetail\";\r\nimport EditTeam from \"../../screens/EditTeam/EditTeam\";\r\nimport CreateTeam from \"../../screens/CreateTeam/CreateTeam\";\r\nimport Teams from \"../../screens/Teams/Teams\";\r\nimport UserDetail from \"../../screens/UserDetail/UserDetail\";\r\nimport Users from \"../../screens/Users/Users\";\r\nimport Projects from \"../../screens/Projects/Projects\";\r\nimport ProjectDetail from \"../../screens/ProjectDetail/ProjectDetail\";\r\nimport Login from \"../../screens/Login/Login\";\r\n\r\nconst Router = () => {\r\n  const store = useStore();\r\n\r\n  return (\r\n    <HashRouter>\r\n      {store?.authStore?.isAuthenticated ? (\r\n        <>\r\n          <Header />\r\n          <Switch>\r\n            <Route path=\"/teams/edit/:id\">\r\n              <EditTeam />\r\n            </Route>\r\n            <Route path=\"/teams/create\">\r\n              <CreateTeam />\r\n            </Route>\r\n            <Route path=\"/teams/:id\">\r\n              <TeamDetail />\r\n            </Route>\r\n            <Route path=\"/teams\">\r\n              <Teams />\r\n            </Route>\r\n            <Route path=\"/users/:id\">\r\n              <UserDetail />\r\n            </Route>\r\n            <Route path=\"/users\">\r\n              <Users />\r\n            </Route>\r\n            <Route path=\"/projects/:id\">\r\n              <ProjectDetail />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Projects />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      ) : (\r\n        <Switch>\r\n          <Route path=\"/\">\r\n            <Login />\r\n          </Route>\r\n        </Switch>\r\n      )}\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default observer(Router);\r\n","const theme = {\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      main: \"#ecf0f1\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default theme;\r\n","import { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport theme from \"../../constants/theme\";\r\n\r\nconst Theme = ({ children }) => {\r\n  const customTheme = createMuiTheme(theme);\r\n  return (\r\n    <ThemeProvider theme={customTheme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Theme;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport { wrapRoot } from \"mobx-easy\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nimport baseAPI from \"./services/baseAPI\";\nimport RootStore from \"./stores/containers/rootStore\";\n\nimport { RootStoreProvider } from \"./hooks\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\n\nimport Router from \"./components/Router/Router\";\nimport Theme from \"./components/Theme/Theme\";\nimport { flowResult } from \"mobx\";\n\nconst App = () => {\n  const [rootStore, setRootStore] = useState(null);\n  const [apiKey] = useLocalStorage(\"clockify-api-key\");\n\n  const init = async () => {\n    const newRootStore = wrapRoot({ RootStore, env: baseAPI });\n    setRootStore(newRootStore);\n\n    if (apiKey?.length) {\n      newRootStore.authStore.setAutoLogin(true);\n      await flowResult(newRootStore.authStore.authenticate(apiKey));\n      newRootStore.authStore.setAutoLogin(false);\n    }\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  if (!rootStore) return null;\n\n  return (\n    <div className=\"app\">\n      <RootStoreProvider value={rootStore}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <Theme>\n            <Router />\n          </Theme>\n        </MuiPickersUtilsProvider>\n      </RootStoreProvider>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/index.scss\";\nimport App from \"./App\";\nimport \"@fontsource/roboto/300.css\";\nimport \"@fontsource/roboto/400.css\";\nimport \"@fontsource/roboto/500.css\";\nimport \"@fontsource/roboto/700.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}