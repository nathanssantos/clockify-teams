{"version":3,"sources":["services/baseAPI.js","hooks/useLocalStorage.js","stores/models/User.js","stores/containers/authStore.js","utils/getDuration.js","utils/getDate.js","stores/containers/userStore.js","stores/models/Project.js","stores/containers/projectStore.js","stores/models/Team.js","stores/containers/teamStore.js","stores/containers/rootStore.js","hooks/useStore.js","components/Menu/Menu.js","components/Drawer/Drawer.js","components/Logo/Logo.js","components/Header/Header.js","components/User/User.js","components/Chart/HorizontalBarChart.js","screens/TeamDetail/TeamDetail.js","components/Team/Team.js","screens/EditTeam/EditTeam.js","screens/CreateTeam/CreateTeam.js","screens/Teams/Teams.js","components/Chart/LineChart.js","components/TimeEntry/TimeEntry.js","screens/UserDetail/UserDetail.js","screens/Users/Users.js","components/Project/Project.js","screens/Projects/Projects.js","screens/ProjectDetail/ProjectDetail.js","screens/Login/Login.js","components/Router/Router.js","constants/theme.js","components/Theme/Theme.js","components/Loader/Loader.js","components/QueryDateSelector/QueryDateSeletor.js","App.js","index.js"],"names":["baseAPI","axios","create","baseURL","timeout","useLocalStorage","key","state","JSON","parse","localStorage","getItem","setState","newState","setItem","stringify","User","newUser","id","name","email","defaultWorkspace","profilePicture","timeEntries","timeEntriesByDay","teams","hours","warnings","makeObservable","this","observable","Error","AuthStore","user","authStatus","autoLogin","fetchDataLog","isAuthenticated","computed","isConfirmingIdentity","isUnauthenticated","setUser","action","bound","confirmIdentity","unauthenticate","setAutoLogin","feedFetchDataLog","setStatusConfirmingIdentity","clearDataLog","authenticate","flow","fromApi","payload","text","status","color","length","push","getEnv","defaults","headers","common","apiKey","setApiKey","get","response","alert","data","console","log","getHours","_time","time","split","minutes","Number","replace","error","getDate","_dateTime","dateTime","date","WARNING_TYPES","NO_PROJECT","NO_DESCRIPTION","TIME_LIMIT","UserStore","userList","queryStartDate","queryEndDate","setUserList","formatUserData","getUsersTeams","fetchUserList","fetchUserTimeEntries","map","start","end","pageSize","getRoot","authStore","params","Object","keys","forEach","newTimeEntries","entry","timeInterval","duration","newTimeEntry","projectId","description","getDuration","timeEntry","project","projectStore","projectList","find","dateFound","newUsers","teamStore","teamList","team","users","userTimeEntries","Project","newProject","workspaceId","estimate","timeEntriesByUser","ProjectStore","setProjectList","formatProjectData","formatProjectList","fetchProjectList","projectTimeEntriesByUser","userStore","projectTimeEntriesFound","filter","userFound","userId","newProjects","archived","Team","newTeam","image","timeEntriesByProject","TeamStore","setTeamList","createTeam","editTeam","fetchTeamList","formatTeamData","_teamList","newTeamList","includes","usersWithTimeEntries","teamTimeEntriesByProject","_user","projectFound","index","_project","RootStore","RootStoreContext","createContext","RootStoreProvider","Provider","useStore","useContext","menuButtons","route","label","Menu","vertical","drawer","history","useHistory","className","item","Button","fullWidth","onClick","close","Drawer","useState","isOpen","setIsOpen","open","SwipeableDrawer","anchor","onClose","onOpen","Logo","observer","Container","maxWidth","UserMeta","props","Tooltip","arrow","placement","title","style","toFixed","AccessTime","entries","interactive","value","Warning","Check","showMeta","disabled","ListItem","Avatar","alt","src","HorizontalBarChart","options","responsive","indexAxis","scales","y","beginAtZero","plugins","legend","display","store","useParams","showConfirmationModal","setShowConfirmationModal","closeConfirmationModal","useEffect","window","scrollTo","Delete","labels","_","orderBy","datasets","backgroundColor","borderWidth","hourValue","payment","Fab","aria-label","Edit","Dialog","aria-labelledby","DialogTitle","cursor","DialogContent","DialogContentText","DialogActions","autoFocus","removeTeam","avatarSize","fontSize","card","button","width","height","teamData","teamName","setTeamName","teamImage","setTeamImage","newUserList","setNewUserList","a","newTeamId","_userList","splice","TextField","variant","onChange","e","target","_newUserList","sortBy","ArrowForward","ArrowBack","filterTerm","setFilterTerm","filteredList","setFilteredList","toLowerCase","Add","LineChart","borderColor","warning","filteredTimeEntries","setFilteredTimeEntries","filterWarnings","setFilterWarnings","day","reverse","FormControlLabel","control","Switch","checked","showColor","setShowColor","colorEffect","setTimeout","clearTimeout","inputValue","setInputValue","fetching","setFetching","flowResult","dataLogContainer","document","querySelector","scrollTop","scrollHeight","LinearProgress","path","theme","palette","type","primary","main","secondary","Theme","children","customTheme","createMuiTheme","ThemeProvider","CssBaseline","Loader","active","Date","getFullYear","getMonth","startDate","setStartDate","endDate","setEndDate","fetchData","setQueryDate","inputVariant","format","KeyboardButtonProps","Search","App","rootStore","setRootStore","init","newRootStore","wrapRoot","env","utils","DateFnsUtils","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0e1958b7.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseURL = \"https://api.clockify.me/api/v1\";\r\n\r\nconst baseAPI = axios.create({\r\n  baseURL,\r\n  timeout: 10000,\r\n});\r\n\r\nexport default baseAPI;\r\n","const useLocalStorage = (key = \"\") => {\r\n  const state = JSON.parse(localStorage.getItem(`clockify-teams@${key}`)) || {};\r\n\r\n  const setState = (newState) => {\r\n    localStorage.setItem(`clockify-teams@${key}`, JSON.stringify(newState));\r\n  };\r\n\r\n  return [state, setState];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import { makeObservable, observable } from \"mobx\";\r\n\r\nexport default class User {\r\n  id = null;\r\n  name = null;\r\n  email = null;\r\n  defaultWorkspace = null;\r\n  profilePicture = null;\r\n  timeEntries = [];\r\n  timeEntriesByDay = [];\r\n  teams = [];\r\n  hours = null;\r\n  warnings = {};\r\n\r\n  constructor(newUser) {\r\n    makeObservable(this, {\r\n      id: observable,\r\n      name: observable,\r\n      email: observable,\r\n      defaultWorkspace: observable,\r\n      profilePicture: observable,\r\n      timeEntries: observable,\r\n      timeEntriesByDay: observable,\r\n      teams: observable,\r\n      hours: observable,\r\n      warnings: observable,\r\n    });\r\n\r\n    if (newUser == null || newUser.id == null) {\r\n      throw new Error(\"Invalid user constructor\");\r\n    }\r\n\r\n    const {\r\n      id,\r\n      name,\r\n      email,\r\n      defaultWorkspace,\r\n      profilePicture,\r\n      timeEntries,\r\n      timeEntriesByDay,\r\n      teams,\r\n      hours,\r\n      warnings,\r\n    } = newUser;\r\n\r\n    this.id = id;\r\n    this.name = name || \"\";\r\n    this.email = email || \"\";\r\n    this.defaultWorkspace = defaultWorkspace || \"\";\r\n    this.profilePicture = profilePicture || \"\";\r\n    this.timeEntries = timeEntries || [];\r\n    this.timeEntriesByDay = timeEntriesByDay || [];\r\n    this.teams = teams || [];\r\n    this.hours = hours || 0;\r\n    this.warnings = warnings || {};\r\n  }\r\n\r\n  static fromApi({\r\n    id,\r\n    name,\r\n    email,\r\n    defaultWorkspace,\r\n    profilePicture,\r\n    timeEntries,\r\n    timeEntriesByDay,\r\n    teams,\r\n    hours,\r\n    warnings,\r\n  } = {}) {\r\n    return new User({\r\n      id,\r\n      name,\r\n      email,\r\n      defaultWorkspace,\r\n      profilePicture,\r\n      timeEntries,\r\n      timeEntriesByDay,\r\n      teams,\r\n      hours,\r\n      warnings,\r\n    });\r\n  }\r\n}\r\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport { action, flow, computed, makeObservable, observable } from \"mobx\";\nimport { getEnv } from \"mobx-easy\";\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\n\nimport User from \"../models/User\";\n\nexport default class AuthStore {\n  user = null;\n  authStatus = \"unauthenticated\";\n  autoLogin = false;\n  fetchDataLog = [];\n\n  constructor() {\n    makeObservable(this, {\n      user: observable,\n      authStatus: observable,\n      autoLogin: observable,\n      fetchDataLog: observable,\n\n      isAuthenticated: computed,\n      isConfirmingIdentity: computed,\n      isUnauthenticated: computed,\n\n      setUser: action.bound,\n      confirmIdentity: action.bound,\n      unauthenticate: action.bound,\n      setAutoLogin: action.bound,\n      feedFetchDataLog: action.bound,\n      setStatusConfirmingIdentity: action.bound,\n      clearDataLog: action.bound,\n\n      authenticate: flow,\n    });\n  }\n\n  get isAuthenticated() {\n    return this.authStatus === \"authenticated\";\n  }\n\n  get isConfirmingIdentity() {\n    return this.authStatus === \"confirming-identity\";\n  }\n\n  get isUnauthenticated() {\n    return this.authStatus === \"unauthenticated\";\n  }\n\n  setUser(user) {\n    this.user = User.fromApi(user);\n  }\n\n  confirmIdentity() {\n    this.authStatus = \"authenticated\";\n  }\n\n  setAutoLogin(payload) {\n    this.autoLogin = payload;\n  }\n\n  feedFetchDataLog(text, status) {\n    let color = \"\";\n    switch (status) {\n      case \"success\": {\n        color = \"#27ae60\";\n        break;\n      }\n\n      case \"error\": {\n        color = \"#c0392b\";\n        break;\n      }\n\n      default: {\n        color = \"#ffffff\";\n        break;\n      }\n    }\n    if (typeof text === \"string\" && text.length)\n      this.fetchDataLog.push({ text, color });\n  }\n\n  clearDataLog() {\n    this.fetchDataLog = [];\n  }\n\n  setStatusConfirmingIdentity() {\n    this.authStatus = \"confirming-identity\";\n  }\n\n  unauthenticate() {\n    this.authStatus = \"unauthenticated\";\n    this.user = null;\n    getEnv().defaults.headers.common[\"X-Api-Key\"] = null;\n  }\n\n  *authenticate(apiKey) {\n    try {\n      const [, setApiKey] = useLocalStorage(\"clockify-api-key\");\n      getEnv().defaults.headers.common[\"X-Api-Key\"] = apiKey;\n      setApiKey(apiKey);\n\n      const response = yield getEnv().get(`/user`);\n\n      if (response?.status !== 200) {\n        alert(\"Invalid Clockify API Key\");\n        return false;\n      }\n\n      if (response?.data) {\n        this.setUser(response.data);\n        this.authStatus = \"confirming-identity\";\n        return true;\n      }\n\n      this.unauthenticate();\n      return false;\n    } catch (error) {\n      console.log(error);\n      this.unauthenticate();\n      alert(\"Invalid Clockify API Key\");\n      return false;\n    }\n  }\n}\n","const getHours = (_time) => {\r\n  try {\r\n    const time = _time?.split(\"H\");\r\n    let hours = 0;\r\n    let minutes = 0;\r\n\r\n    if (time?.length) {\r\n      if (time?.length === 2) {\r\n        hours = Number(time[0].split(\"PT\")[1]) || 0;\r\n        minutes = Number(time[1].split(\"M\")[0]) || 0;\r\n      } else {\r\n        if (time[0] !== \"PT0S\") {\r\n          minutes = Number(time[0].replace(\"PT\", \"\").replace(\"M\", \"\"));\r\n        }\r\n      }\r\n\r\n      return Number(hours + minutes / 60);\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default getHours;\r\n","const getDate = (_dateTime) => {\r\n  try {\r\n    const dateTime = _dateTime?.split(\"T\");\r\n\r\n    if (dateTime?.length) {\r\n      const date = dateTime[0].split(\"-\");\r\n\r\n      return `${date[2]}/${date[1]}/${date[0]}`;\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default getDate;\r\n","import { action, flow, makeObservable, observable } from \"mobx\";\r\nimport { getEnv, getRoot } from \"mobx-easy\";\r\n\r\nimport getDuration from \"../../utils/getDuration\";\r\nimport getDate from \"../../utils/getDate\";\r\n\r\nimport User from \"../models/User\";\r\n\r\nexport const WARNING_TYPES = {\r\n  NO_PROJECT: \"Entrada sem projeto\",\r\n  NO_DESCRIPTION: \"Entrada sem descrição\",\r\n  TIME_LIMIT: \"Entrada maior que 6 horas\",\r\n};\r\nexport default class UserStore {\r\n  userList = [];\r\n  queryStartDate = null;\r\n  queryEndDate = null;\r\n\r\n  constructor() {\r\n    makeObservable(this, {\r\n      userList: observable,\r\n      queryStartDate: observable,\r\n      queryEndDate: observable,\r\n\r\n      setUserList: action.bound,\r\n      formatUserData: action.bound,\r\n      getUsersTeams: action.bound,\r\n\r\n      fetchUserList: flow,\r\n      fetchUserTimeEntries: flow,\r\n    });\r\n  }\r\n\r\n  setUserList(payload = []) {\r\n    this.userList = payload.map((user) => User.fromApi(user));\r\n  }\r\n\r\n  setQueryDate(start, end) {\r\n    this.queryStartDate = start;\r\n    this.queryEndDate = end;\r\n  }\r\n\r\n  *fetchUserTimeEntries(payload = {}) {\r\n    const { id, name, pageSize = 1000 } = payload;\r\n    const { NO_DESCRIPTION, NO_PROJECT, TIME_LIMIT } = WARNING_TYPES;\r\n\r\n    try {\r\n      getRoot().authStore.feedFetchDataLog(\r\n        `fetching user ${name} time entries...`\r\n      );\r\n\r\n      const { defaultWorkspace } = getRoot().authStore.user;\r\n\r\n      const response = yield getEnv().get(\r\n        `/workspaces/${defaultWorkspace}/user/${id}/time-entries`,\r\n        {\r\n          params: {\r\n            start: this.queryStartDate,\r\n            end: this.queryEndDate,\r\n            \"page-size\": pageSize,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.status !== 200) {\r\n        getRoot().authStore.feedFetchDataLog(\r\n          `fetch user ${name} time entries error`,\r\n          \"error\"\r\n        );\r\n        return false;\r\n      }\r\n\r\n      if (response?.data) {\r\n        let hours = 0;\r\n        const warnings = {};\r\n        Object.keys(WARNING_TYPES).forEach((key) => {\r\n          warnings[key] = 0;\r\n        });\r\n\r\n        const newTimeEntries = response.data.map((entry) => {\r\n          const time = entry?.timeInterval?.duration;\r\n          const newTimeEntry = { ...entry, warnings: [] };\r\n\r\n          if (!entry?.projectId?.length) {\r\n            newTimeEntry.warnings.push(NO_PROJECT);\r\n            warnings.NO_PROJECT++;\r\n          }\r\n\r\n          if (!entry?.description?.length) {\r\n            newTimeEntry.warnings.push(NO_DESCRIPTION);\r\n            warnings.NO_DESCRIPTION++;\r\n          }\r\n\r\n          if (time?.length) {\r\n            const duration = getDuration(time);\r\n            if (duration) {\r\n              hours += duration;\r\n\r\n              if (duration >= 6) {\r\n                newTimeEntry.warnings.push(TIME_LIMIT);\r\n                warnings.TIME_LIMIT++;\r\n              }\r\n            }\r\n          }\r\n\r\n          return newTimeEntry;\r\n        });\r\n\r\n        getRoot().authStore.feedFetchDataLog(\r\n          `fetch user ${name} time entries success`,\r\n          \"success\"\r\n        );\r\n\r\n        return {\r\n          timeEntries: newTimeEntries,\r\n          hours,\r\n          warnings,\r\n        };\r\n      }\r\n\r\n      getRoot().authStore.feedFetchDataLog(\r\n        `fetch user ${name} time entries error`,\r\n        \"error\"\r\n      );\r\n\r\n      return false;\r\n    } catch (error) {\r\n      console.log(error);\r\n      getRoot().authStore.feedFetchDataLog(\r\n        `fetch user ${name} time entries error`,\r\n        \"error\"\r\n      );\r\n      return false;\r\n    }\r\n  }\r\n\r\n  formatUserData(user) {\r\n    try {\r\n      let timeEntriesByDay = [];\r\n\r\n      for (const timeEntry of user.timeEntries) {\r\n        const time = timeEntry?.timeInterval?.duration;\r\n        const date = timeEntry?.timeInterval?.start;\r\n        const project = getRoot().projectStore.projectList.find(\r\n          ({ id }) => id === timeEntry?.projectId\r\n        );\r\n\r\n        const dateFound = timeEntriesByDay.find(\r\n          (entry) => entry.date === getDate(date)\r\n        );\r\n\r\n        if (time?.length && date?.length) {\r\n          if (dateFound) {\r\n            timeEntriesByDay = timeEntriesByDay.map((entry) => {\r\n              if (entry.date === getDate(date)) {\r\n                return {\r\n                  date: entry.date,\r\n                  timeEntries: [\r\n                    ...entry.timeEntries,\r\n                    {\r\n                      ...timeEntry,\r\n                      project: project\r\n                        ? project\r\n                        : { name: \"Sem projeto\", color: \"#ffffff\" },\r\n                    },\r\n                  ],\r\n                  hours: entry.hours + getDuration(time),\r\n                };\r\n              }\r\n\r\n              return entry;\r\n            });\r\n          } else {\r\n            timeEntriesByDay.push({\r\n              date: getDate(date),\r\n              timeEntries: [\r\n                {\r\n                  ...timeEntry,\r\n                  project: project\r\n                    ? project\r\n                    : { name: \"Sem projeto\", color: \"#ffffff\" },\r\n                },\r\n              ],\r\n              hours: getDuration(time),\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...user,\r\n        timeEntriesByDay,\r\n      };\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getUsersTeams() {\r\n    const newUsers = [];\r\n\r\n    for (const user of this.userList) {\r\n      const teams = [];\r\n\r\n      for (const team of getRoot().teamStore.teamList) {\r\n        for (const _user of team.users)\r\n          if (_user.id === user.id) teams.push(team);\r\n      }\r\n\r\n      newUsers.push({ ...user, teams });\r\n    }\r\n\r\n    this.setUserList(newUsers);\r\n  }\r\n\r\n  *fetchUserList(payload = {}) {\r\n    try {\r\n      getRoot().authStore.feedFetchDataLog(\"fetching user list...\");\r\n\r\n      const { pageSize = 1000 } = payload;\r\n      const { defaultWorkspace } = getRoot().authStore.user;\r\n\r\n      const response = yield getEnv().get(\r\n        `/workspaces/${defaultWorkspace}/users`,\r\n        {\r\n          params: {\r\n            \"page-size\": pageSize,\r\n            status: \"ACTIVE\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.status !== 200) {\r\n        getRoot().authStore.feedFetchDataLog(\"fetch user list error\", \"error\");\r\n        return false;\r\n      }\r\n\r\n      if (response?.data?.length) {\r\n        getRoot().authStore.feedFetchDataLog(\r\n          \"fetch user list success\",\r\n          \"success\"\r\n        );\r\n\r\n        let newUsers = [];\r\n\r\n        for (const user of response.data) {\r\n          const userTimeEntries = yield this.fetchUserTimeEntries(user);\r\n\r\n          if (userTimeEntries) {\r\n            const newUser = this.formatUserData({\r\n              ...user,\r\n              ...userTimeEntries,\r\n            });\r\n\r\n            newUsers.push(newUser);\r\n          }\r\n        }\r\n\r\n        if (newUsers.length) {\r\n          this.setUserList(newUsers);\r\n          getRoot().authStore.feedFetchDataLog(\r\n            \"fetch all users time entries success\",\r\n            \"success\"\r\n          );\r\n          return true;\r\n        }\r\n      }\r\n\r\n      getRoot().authStore.feedFetchDataLog(\"fetch user list error\", \"error\");\r\n      return false;\r\n    } catch (error) {\r\n      console.log(error);\r\n      getRoot().authStore.feedFetchDataLog(\"fetch user list error\", \"error\");\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { makeObservable, observable } from \"mobx\";\r\n\r\nexport default class Project {\r\n  id = null;\r\n  name = null;\r\n  email = null;\r\n  workspaceId = null;\r\n  color = null;\r\n  duration = null;\r\n  estimate = null;\r\n  users = [];\r\n  timeEntriesByUser = [];\r\n\r\n  constructor(newProject) {\r\n    makeObservable(this, {\r\n      id: observable,\r\n      name: observable,\r\n      email: observable,\r\n      workspaceId: observable,\r\n      color: observable,\r\n      duration: observable,\r\n      estimate: observable,\r\n      users: observable,\r\n      timeEntriesByUser: observable,\r\n    });\r\n\r\n    if (newProject == null || newProject.id == null) {\r\n      throw new Error(\"Invalid Project constructor\");\r\n    }\r\n\r\n    const {\r\n      id,\r\n      name,\r\n      email,\r\n      workspaceId,\r\n      color,\r\n      duration,\r\n      estimate,\r\n      users,\r\n      timeEntriesByUser,\r\n    } = newProject;\r\n\r\n    this.id = id;\r\n    this.name = name || \"\";\r\n    this.email = email || \"\";\r\n    this.workspaceId = workspaceId || \"\";\r\n    this.color = color || \"\";\r\n    this.duration = duration || \"\";\r\n    this.estimate = estimate || \"\";\r\n    this.users = users || [];\r\n    this.timeEntriesByUser = timeEntriesByUser || [];\r\n  }\r\n\r\n  static fromApi({\r\n    id,\r\n    name,\r\n    email,\r\n    workspaceId,\r\n    color,\r\n    duration,\r\n    estimate,\r\n    users,\r\n    timeEntriesByUser,\r\n  } = {}) {\r\n    return new Project({\r\n      id,\r\n      name,\r\n      email,\r\n      workspaceId,\r\n      color,\r\n      duration,\r\n      estimate,\r\n      users,\r\n      timeEntriesByUser,\r\n    });\r\n  }\r\n}\r\n","/* eslint-disable no-loop-func */\r\nimport { action, flow, makeObservable, observable } from \"mobx\";\r\nimport { getEnv, getRoot } from \"mobx-easy\";\r\n\r\nimport Project from \"../models/Project\";\r\n\r\nimport getDuration from \"../../utils/getDuration\";\r\nexport default class ProjectStore {\r\n  projectList = [];\r\n\r\n  constructor() {\r\n    makeObservable(this, {\r\n      projectList: observable,\r\n      setProjectList: action.bound,\r\n      formatProjectData: action.bound,\r\n      formatProjectList: action.bound,\r\n      fetchProjectList: flow,\r\n    });\r\n  }\r\n\r\n  setProjectList(payload = []) {\r\n    this.projectList = payload.map((project) => Project.fromApi(project));\r\n  }\r\n\r\n  formatProjectData(payload = {}) {\r\n    try {\r\n      const { id } = payload;\r\n\r\n      let projectTimeEntriesByUser = [];\r\n      for (const user of getRoot().userStore.userList) {\r\n        const projectTimeEntriesFound = user.timeEntries.filter(\r\n          (entry) => entry.projectId === id\r\n        );\r\n\r\n        for (const timeEntry of projectTimeEntriesFound) {\r\n          const userFound = projectTimeEntriesByUser.find(\r\n            (user) => user.id === timeEntry.userId\r\n          );\r\n\r\n          let hours = 0;\r\n\r\n          const time = timeEntry?.timeInterval?.duration;\r\n\r\n          if (time?.length) {\r\n            hours += getDuration(time);\r\n          }\r\n\r\n          if (userFound) {\r\n            projectTimeEntriesByUser = projectTimeEntriesByUser.map((user) => {\r\n              if (user.id === timeEntry.userId) {\r\n                return {\r\n                  ...user,\r\n                  timeEntries: [...user.timeEntries, timeEntry],\r\n                  hours: user.hours + hours,\r\n                };\r\n              }\r\n\r\n              return user;\r\n            });\r\n          } else {\r\n            projectTimeEntriesByUser.push({\r\n              ...user,\r\n              timeEntries: [timeEntry],\r\n              hours,\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...payload,\r\n        timeEntriesByUser: projectTimeEntriesByUser,\r\n      };\r\n    } catch (error) {\r\n      console.log(error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  formatProjectList() {\r\n    const newProjects = [];\r\n\r\n    for (const project of this.projectList) {\r\n      const newProject = this.formatProjectData(project);\r\n      newProjects.push(newProject);\r\n    }\r\n\r\n    this.setProjectList(newProjects);\r\n  }\r\n\r\n  *fetchProjectList(payload = {}) {\r\n    try {\r\n      getRoot().authStore.feedFetchDataLog(\"fetching project list...\");\r\n\r\n      const { pageSize = 1000 } = payload;\r\n      const { defaultWorkspace } = getRoot().authStore.user;\r\n\r\n      const response = yield getEnv().get(\r\n        `/workspaces/${defaultWorkspace}/projects`,\r\n        {\r\n          params: {\r\n            archived: false,\r\n            \"page-size\": pageSize,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.status !== 200) {\r\n        getRoot().authStore.feedFetchDataLog(\r\n          \"fetch project list error\",\r\n          \"error\"\r\n        );\r\n        return false;\r\n      }\r\n\r\n      if (response?.data?.length) {\r\n        this.setProjectList(response.data);\r\n        getRoot().authStore.feedFetchDataLog(\r\n          \"fetch project list success\",\r\n          \"success\"\r\n        );\r\n\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    } catch (error) {\r\n      console.log(error);\r\n      getRoot().authStore.feedFetchDataLog(\"fetch project list error\", \"error\");\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { makeObservable, observable } from \"mobx\";\r\n\r\nexport default class Team {\r\n  id = null;\r\n  name = null;\r\n  image = null;\r\n  users = [];\r\n  timeEntriesByProject = [];\r\n\r\n  constructor(newTeam) {\r\n    makeObservable(this, {\r\n      id: observable,\r\n      name: observable,\r\n      image: observable,\r\n      users: observable,\r\n      timeEntriesByProject: observable,\r\n    });\r\n\r\n    if (newTeam == null || newTeam.id == null) {\r\n      throw new Error(\"Invalid Team constructor\");\r\n    }\r\n\r\n    const { id, name, image, users, timeEntriesByProject } = newTeam;\r\n\r\n    this.id = id;\r\n    this.name = name || \"\";\r\n    this.image = image || \"\";\r\n    this.users = users || [];\r\n    this.timeEntriesByProject = timeEntriesByProject || [];\r\n  }\r\n\r\n  static fromApi({ id, name, image, users, timeEntriesByProject } = {}) {\r\n    return new Team({\r\n      id,\r\n      name,\r\n      image,\r\n      users,\r\n      timeEntriesByProject,\r\n    });\r\n  }\r\n}\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport { action, makeObservable, observable } from \"mobx\";\r\nimport { getRoot } from \"mobx-easy\";\r\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\r\nimport getDuration from \"../../utils/getDuration\";\r\n\r\nimport Team from \"../models/Team\";\r\n\r\nexport default class TeamStore {\r\n  teamList = [];\r\n\r\n  constructor() {\r\n    makeObservable(this, {\r\n      teamList: observable,\r\n\r\n      setTeamList: action.bound,\r\n      createTeam: action.bound,\r\n      editTeam: action.bound,\r\n      fetchTeamList: action.bound,\r\n      formatTeamData: action.bound,\r\n    });\r\n  }\r\n\r\n  createTeam(team = {}) {\r\n    try {\r\n      const { users } = team;\r\n      const [_teamList, setTeamList] = useLocalStorage(\"team-list\");\r\n\r\n      const teamList = _teamList || [];\r\n\r\n      let id = 1;\r\n\r\n      if (teamList.length) {\r\n        id = teamList.length + 1;\r\n        setTeamList([\r\n          ...teamList,\r\n          {\r\n            ...team,\r\n            id,\r\n            users: users.map((user) => user.id),\r\n          },\r\n        ]);\r\n      } else {\r\n        setTeamList([\r\n          {\r\n            ...team,\r\n            id: 1,\r\n            users: users.map((user) => user.id),\r\n          },\r\n        ]);\r\n      }\r\n\r\n      return id;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return false;\r\n    } finally {\r\n      this.fetchTeamList();\r\n    }\r\n  }\r\n\r\n  editTeam(id, team = {}) {\r\n    try {\r\n      const [teamList, setTeamList] = useLocalStorage(\"team-list\");\r\n      const { users } = team;\r\n\r\n      setTeamList(\r\n        teamList.map((team) => {\r\n          if (team.id === id) {\r\n            return {\r\n              ...team,\r\n              ...team,\r\n              users: users.map((user) => user.id),\r\n            };\r\n          }\r\n          return team;\r\n        })\r\n      );\r\n\r\n      return id;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return false;\r\n    } finally {\r\n      this.fetchTeamList();\r\n    }\r\n  }\r\n\r\n  removeTeam(payload = {}) {\r\n    try {\r\n      const [teamList, setTeamList] = useLocalStorage(\"team-list\");\r\n\r\n      const newTeamList = teamList.filter((team) => team.id !== payload.id);\r\n\r\n      setTeamList(newTeamList);\r\n\r\n      this.setTeamList(\r\n        newTeamList.map((team) => ({\r\n          ...team,\r\n          users: getRoot().userStore.userList.filter((user) =>\r\n            team.users.includes(user.id)\r\n          ),\r\n        }))\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  setTeamList(payload = []) {\r\n    this.teamList = payload.map((team) => Team.fromApi(team));\r\n  }\r\n\r\n  fetchTeamList() {\r\n    try {\r\n      getRoot().authStore.feedFetchDataLog(\"fetching team list...\");\r\n\r\n      const [teamList] = useLocalStorage(\"team-list\");\r\n\r\n      if (teamList.length) {\r\n        const newTeamList = [];\r\n\r\n        for (const team of teamList) {\r\n          const newTeam = this.formatTeamData(team);\r\n\r\n          newTeamList.push({\r\n            ...newTeam,\r\n            users: getRoot().userStore.userList.filter((user) =>\r\n              team.users.includes(user.id)\r\n            ),\r\n          });\r\n        }\r\n\r\n        this.setTeamList(newTeamList);\r\n\r\n        getRoot().authStore.feedFetchDataLog(\r\n          \"fetch team list success\",\r\n          \"success\"\r\n        );\r\n      }\r\n\r\n      return false;\r\n    } catch (error) {\r\n      console.log(error);\r\n      getRoot().authStore.feedFetchDataLog(\"fetch team list error\", \"error\");\r\n      return false;\r\n    }\r\n  }\r\n\r\n  formatTeamData(team = {}) {\r\n    try {\r\n      let usersWithTimeEntries = [];\r\n      let teamTimeEntriesByProject = [];\r\n\r\n      for (const user of team.users) {\r\n        const userFound = getRoot().userStore.userList.find(\r\n          (_user) => _user.id === user\r\n        );\r\n\r\n        if (userFound) {\r\n          const { timeEntries, hours } = userFound;\r\n\r\n          for (const timeEntry of timeEntries) {\r\n            const projectFound = teamTimeEntriesByProject.find(\r\n              (project) => project.id === timeEntry.projectId\r\n            );\r\n\r\n            let hours = 0;\r\n            const time = timeEntry?.timeInterval?.duration;\r\n\r\n            if (time?.length) {\r\n              hours += getDuration(time);\r\n            }\r\n\r\n            if (projectFound) {\r\n              teamTimeEntriesByProject = teamTimeEntriesByProject.map(\r\n                (project) => {\r\n                  if (project.id === timeEntry.projectId) {\r\n                    return {\r\n                      ...project,\r\n                      id: timeEntry.projectId,\r\n                      timeEntries: [...project.timeEntries, timeEntry],\r\n                      hours: project.hours + hours,\r\n                    };\r\n                  }\r\n\r\n                  return project;\r\n                }\r\n              );\r\n            } else {\r\n              teamTimeEntriesByProject.push({\r\n                id: timeEntry.projectId,\r\n                timeEntries: [timeEntry],\r\n                hours,\r\n              });\r\n            }\r\n          }\r\n\r\n          const newUser = getRoot().userStore.userList.find(\r\n            (_user) => _user.id === user.id\r\n          );\r\n\r\n          usersWithTimeEntries.push({\r\n            ...newUser,\r\n            timeEntries,\r\n            hours,\r\n          });\r\n        }\r\n      }\r\n\r\n      let index = 0;\r\n\r\n      for (const project of teamTimeEntriesByProject) {\r\n        if (project.id) {\r\n          const projectFound = getRoot().projectStore.projectList.find(\r\n            (_project) => _project.id === project.id\r\n          );\r\n\r\n          if (projectFound) {\r\n            teamTimeEntriesByProject[index] = {\r\n              ...teamTimeEntriesByProject[index],\r\n              name: projectFound.name,\r\n              color: projectFound.color,\r\n            };\r\n          }\r\n        } else {\r\n          teamTimeEntriesByProject[index] = {\r\n            ...teamTimeEntriesByProject[index],\r\n            name: \"Sem projeto\",\r\n            color: \"#ffffff\",\r\n          };\r\n        }\r\n\r\n        index++;\r\n      }\r\n\r\n      return {\r\n        ...team,\r\n        users: usersWithTimeEntries,\r\n        timeEntriesByProject: teamTimeEntriesByProject,\r\n      };\r\n    } catch (error) {\r\n      console.log(error);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import AuthStore from \"./authStore\";\r\nimport UserStore from \"./userStore\";\r\nimport ProjectStore from \"./projectStore\";\r\nimport TeamStore from \"./teamStore\";\r\n\r\nexport default class RootStore {\r\n  authStore = null;\r\n  userStore = null;\r\n  projectStore = null;\r\n  teamStore = null;\r\n\r\n  init() {\r\n    this.authStore = new AuthStore();\r\n    this.userStore = new UserStore();\r\n    this.projectStore = new ProjectStore();\r\n    this.teamStore = new TeamStore();\r\n  }\r\n}\r\n","import { createContext, useContext } from \"react\";\r\n\r\nconst RootStoreContext = createContext({});\r\n\r\nexport const RootStoreProvider = RootStoreContext.Provider;\r\n\r\nexport const useStore = () => useContext(RootStoreContext);\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst menuButtons = [\r\n  {\r\n    route: \"/\",\r\n    label: \"Colaboradores\",\r\n  },\r\n  {\r\n    route: \"/teams\",\r\n    label: \"Equipes\",\r\n  },\r\n  {\r\n    route: \"/projects\",\r\n    label: \"Projetos\",\r\n  },\r\n];\r\n\r\nconst Menu = ({ vertical, drawer }) => {\r\n  const history = useHistory();\r\n\r\n  const handleClick = (route) => {\r\n    history.push(route);\r\n    if (drawer) drawer.close();\r\n  };\r\n\r\n  return (\r\n    <nav className={`menu ${vertical ? \"vertical\" : \"\"}`}>\r\n      <ul className=\"menu__list\">\r\n        {menuButtons.map((item) => (\r\n          <li className=\"menu__list__item\" key={item.route}>\r\n            <Button\r\n              className=\"menu__list__item__button\"\r\n              fullWidth={vertical}\r\n              color=\"primary\"\r\n              onClick={() => handleClick(item.route)}\r\n            >\r\n              {item.label}\r\n            </Button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { useState } from \"react\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport Menu from \"../Menu/Menu\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst Drawer = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const open = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const close = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"drawer\">\r\n      <Button onClick={open}>\r\n        <MenuIcon color=\"primary\" />\r\n      </Button>\r\n      <SwipeableDrawer\r\n        anchor={\"left\"}\r\n        open={isOpen}\r\n        onClose={close}\r\n        onOpen={open}\r\n      >\r\n        <div className=\"drawer__content\">\r\n          <Menu vertical drawer={{ close }} />\r\n        </div>\r\n      </SwipeableDrawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Drawer;\r\n","import React from \"react\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst Logo = () => {\r\n  return <div className=\"logo\">Clockify Teams</div>;\r\n};\r\n\r\nexport default Logo;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport Menu from \"../Menu/Menu\";\r\nimport Drawer from \"../Drawer/Drawer\";\r\nimport Logo from \"../Logo/Logo\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <Container maxWidth=\"lg\">\r\n        <div className=\"header__content\">\r\n          <Logo />\r\n          <div className=\"header__menu\">\r\n            <Menu />\r\n          </div>\r\n          <div className=\"header__drawer\">\r\n            <Drawer />\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default observer(Header);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Avatar, /* IconButton, */ ListItem, Tooltip } from \"@material-ui/core\";\r\nimport {\r\n  Warning,\r\n  Check,\r\n  /*   Email,\r\n  PictureAsPdf, */\r\n  AccessTime,\r\n} from \"@material-ui/icons\";\r\n\r\nimport { WARNING_TYPES } from \"../../stores/containers/userStore\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst UserMeta = (props) => {\r\n  const { hours, warnings } = props;\r\n\r\n  return (\r\n    <div className=\"user__meta\">\r\n      <Tooltip\r\n        arrow\r\n        placement=\"left\"\r\n        title=\"Horas trabalhadas no período selecionado\"\r\n      >\r\n        <div\r\n          className=\"user__meta__item\"\r\n          style={{ color: hours >= 200 ? \"#f44336\" : \"#ffffff\" }}\r\n        >\r\n          {hours.toFixed(2)}\r\n          <AccessTime color={hours >= 200 ? \"error\" : \"\"} />\r\n        </div>\r\n      </Tooltip>\r\n\r\n      {Object.entries(warnings).filter(([key, value]) => value > 0)?.length ? (\r\n        <Tooltip\r\n          arrow\r\n          interactive\r\n          placement=\"left\"\r\n          title={\r\n            <ul className=\"warning-list\">\r\n              {Object.entries(warnings)\r\n                .filter(([key, value]) => value > 0)\r\n                .map(([key, value]) => (\r\n                  <li className=\"warning-list__item\">{`${value}x ${WARNING_TYPES[key]}`}</li>\r\n                ))}\r\n            </ul>\r\n          }\r\n        >\r\n          <div className=\"user__meta__item\">\r\n            <Warning color=\"error\" />\r\n          </div>\r\n        </Tooltip>\r\n      ) : (\r\n        <div className=\"user__meta__item\">\r\n          <Check color=\"secondary\" />\r\n        </div>\r\n      )}\r\n      {/* <Tooltip arrow placement=\"left\" title=\"Visualizar relatório\">\r\n        <IconButton>\r\n          <PictureAsPdf />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Tooltip arrow placement=\"left\" title=\"Enviar relatório ao colaborador\">\r\n        <IconButton onClick={() => {}}>\r\n          <Email />\r\n        </IconButton>\r\n      </Tooltip> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst User = (props) => {\r\n  const {\r\n    id,\r\n    name = \"\",\r\n    profilePicture = \"\",\r\n    email = \"\",\r\n    showMeta = false,\r\n    disabled = false,\r\n    hours = 0,\r\n    warnings = {},\r\n  } = props;\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <ListItem className=\"user\">\r\n      <div\r\n        className=\"user__pressable\"\r\n        onClick={() => (!disabled ? history.push(`/users/${id}`) : null)}\r\n      >\r\n        <Avatar alt={name} src={profilePicture} className=\"user__avatar\" />\r\n        <div className=\"user__profile\">\r\n          <div className=\"user__name\">{name}</div>\r\n          <div className=\"user__email\">{email}</div>\r\n        </div>\r\n      </div>\r\n      {showMeta ? <UserMeta hours={hours} warnings={warnings} /> : null}\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default observer(User);\r\n","import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nconst HorizontalBarChart = (props) => {\r\n  const { data = {} } = props;\r\n\r\n  const options = {\r\n    responsive: true,\r\n    indexAxis: \"y\",\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n  };\r\n  return <Bar data={data} options={options} />;\r\n};\r\n\r\nexport default HorizontalBarChart;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Fab,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { Edit, Delete } from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\n\r\nimport User from \"../../components/User/User\";\r\nimport HorizontalBarChart from \"../../components/Chart/HorizontalBarChart\";\r\n\r\nimport \"./styles.scss\";\r\nimport { Avatar } from \"@material-ui/core\";\r\n\r\nconst TeamDetail = () => {\r\n  const store = useStore();\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const [showConfirmationModal, setShowConfirmationModal] = useState(false);\r\n  const team = store.teamStore.teamList.find(\r\n    (team) => team.id === Number(params.id)\r\n  );\r\n\r\n  const openConfirmationModal = () => {\r\n    setShowConfirmationModal(true);\r\n  };\r\n\r\n  const closeConfirmationModal = () => {\r\n    setShowConfirmationModal(false);\r\n  };\r\n\r\n  const removeTeam = () => {\r\n    store.teamStore.removeTeam(team);\r\n    closeConfirmationModal();\r\n    history.push(`/teams`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  if (!team) return null;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"screen team-detail\">\r\n        <Container maxWidth=\"lg\">\r\n          <header className=\"screen__header\">\r\n            <div className=\"screen__header__left\">\r\n              <Avatar\r\n                alt={team?.name}\r\n                src={team?.image}\r\n                className=\"team-detail__avatar\"\r\n              />\r\n              <h2>{team?.name}</h2>\r\n            </div>\r\n            <div className=\"screen__header__right\">\r\n              <Button onClick={openConfirmationModal}>\r\n                <Delete />\r\n              </Button>\r\n            </div>\r\n          </header>\r\n\r\n          <main>\r\n            {team.timeEntriesByProject?.length ? (\r\n              <>\r\n                <div className=\"team-detail__chart\">\r\n                  <header className=\"section-header\">\r\n                    <h3>Horas por projeto</h3>\r\n                  </header>\r\n                  <HorizontalBarChart\r\n                    data={{\r\n                      labels: _.orderBy(\r\n                        team.timeEntriesByProject,\r\n                        \"hours\",\r\n                        \"desc\"\r\n                      ).map((project) => project.name),\r\n                      datasets: [\r\n                        {\r\n                          label: \"Horas\",\r\n                          data: _.orderBy(\r\n                            team.timeEntriesByProject,\r\n                            \"hours\",\r\n                            \"desc\"\r\n                          ).map((project) =>\r\n                            project?.hours ? project.hours.toFixed(2) : 0\r\n                          ),\r\n                          backgroundColor: _.orderBy(\r\n                            team.timeEntriesByProject,\r\n                            \"hours\",\r\n                            \"desc\"\r\n                          ).map((project) => `${project.color}85`),\r\n                          borderWidth: 0,\r\n                        },\r\n                      ],\r\n                    }}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"team-detail__chart\">\r\n                  <header className=\"section-header\">\r\n                    <h3>Horas por colaborador</h3>\r\n                  </header>\r\n                  <HorizontalBarChart\r\n                    data={{\r\n                      labels: _.orderBy(team.users, \"hours\", \"desc\").map(\r\n                        (user) => user.name\r\n                      ),\r\n                      datasets: [\r\n                        {\r\n                          label: \"Horas\",\r\n                          data: _.orderBy(team.users, \"hours\", \"desc\").map(\r\n                            (user) => (user?.hours ? user.hours.toFixed(2) : 0)\r\n                          ),\r\n                          backgroundColor: [\"rgba(255, 255, 255, 0.08)\"],\r\n                          borderWidth: 0,\r\n                        },\r\n                      ],\r\n                    }}\r\n                  />\r\n                </div>\r\n              </>\r\n            ) : null}\r\n\r\n            <div className=\"user-list\">\r\n              <header className=\"section-header\">\r\n                <h3>Colaboradores na equipe</h3>\r\n              </header>\r\n              {team?.users?.length\r\n                ? team.users.map((user) => (\r\n                    <User\r\n                      id={user.id}\r\n                      key={user.id}\r\n                      profilePicture={user?.profilePicture}\r\n                      name={user?.name}\r\n                      email={user?.email}\r\n                      hours={user?.hours}\r\n                      hourValue={user?.hourValue}\r\n                      payment={user?.payment}\r\n                      warnings={user?.warnings}\r\n                      showMeta\r\n                    />\r\n                  ))\r\n                : null}\r\n            </div>\r\n          </main>\r\n        </Container>\r\n        <Fab\r\n          className=\"team-detail__edit-team\"\r\n          color=\"primary\"\r\n          aria-label=\"Editar equipe\"\r\n          onClick={() => {\r\n            history.push(`/teams/edit/${team.id}`);\r\n          }}\r\n        >\r\n          <Edit />\r\n        </Fab>\r\n      </div>\r\n      <Dialog\r\n        open={showConfirmationModal}\r\n        onClose={closeConfirmationModal}\r\n        aria-labelledby=\"draggable-dialog-title\"\r\n      >\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          {`Excluir equipe ${team.name}`}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {`Você tem certeza que deseja excluir a equipe ${team.name}?`}\r\n          </DialogContentText>\r\n          <DialogContentText>Esta ação é irreversível.</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={closeConfirmationModal} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          <Button onClick={removeTeam} color=\"primary\">\r\n            Confirmar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(TeamDetail);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Avatar, ListItem } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst Team = (props) => {\r\n  const {\r\n    id,\r\n    name = \"\",\r\n    image = \"\",\r\n    avatarSize = 50,\r\n    fontSize = 16,\r\n    disabled = false,\r\n    card = false,\r\n  } = props;\r\n  const history = useHistory();\r\n\r\n  if (card) {\r\n    return (\r\n      <ListItem\r\n        className=\"team card\"\r\n        button={!disabled}\r\n        onClick={() => (!disabled ? history.push(`/teams/${id}`) : null)}\r\n      >\r\n        {image.length ? (\r\n          <img className=\"team__image\" src={image} alt={name} />\r\n        ) : null}\r\n\r\n        <div className=\"team__data\">\r\n          <div className=\"team__name\" style={{ fontSize }}>\r\n            {name}\r\n          </div>\r\n        </div>\r\n      </ListItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ListItem\r\n      className=\"team\"\r\n      button={!disabled}\r\n      onClick={() => (!disabled ? history.push(`/teams/${id}`) : null)}\r\n    >\r\n      <Avatar\r\n        alt={name}\r\n        src={image}\r\n        className=\"team__avatar\"\r\n        style={{ width: avatarSize, height: avatarSize }}\r\n      />\r\n\r\n      <div className=\"team__data\">\r\n        <div className=\"team__name\" style={{ fontSize }}>\r\n          {name}\r\n        </div>\r\n      </div>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default observer(Team);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { TextField, Button, Container } from \"@material-ui/core\";\r\nimport { ArrowBack, ArrowForward } from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\n\r\nimport User from \"../../components/User/User\";\r\nimport Team from \"../../components/Team/Team\";\r\n\r\nconst EditTeam = () => {\r\n  const store = useStore();\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const teamData = store.teamStore.teamList.find(\r\n    (team) => team.id === Number(params.id)\r\n  );\r\n  const [teamName, setTeamName] = useState(\"\");\r\n  const [teamImage, setTeamImage] = useState(\"\");\r\n  const [userList, setUserList] = useState([]);\r\n  const [newUserList, setNewUserList] = useState([]);\r\n\r\n  const addUser = (_user, _userList, _newUserList) => {\r\n    setUserList(\r\n      _.sortBy(\r\n        _userList.filter((user) => user.id !== _user.id),\r\n        \"name\"\r\n      )\r\n    );\r\n    setNewUserList(_.sortBy([..._newUserList, _user], \"name\"));\r\n  };\r\n\r\n  const removeUser = (_user, _userList, _newUserList) => {\r\n    setNewUserList(\r\n      _.sortBy(\r\n        _newUserList.filter((user) => user.id !== _user.id),\r\n        \"name\"\r\n      )\r\n    );\r\n    setUserList(_.sortBy([..._userList, _user], \"name\"));\r\n  };\r\n\r\n  const editTeam = async () => {\r\n    const newTeamId = await store.teamStore.editTeam(teamData.id, {\r\n      name: teamName,\r\n      image: teamImage,\r\n      users: newUserList,\r\n    });\r\n\r\n    history.push(`/teams/${newTeamId}`);\r\n\r\n    if (newTeamId) alert(`Suas alterações foram salvas.`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTeamName(teamData.name);\r\n    setTeamImage(teamData.image);\r\n    setNewUserList(teamData.users);\r\n\r\n    const _userList = [...store.userStore.userList];\r\n    teamData.users.forEach((_user) => {\r\n      _userList.forEach((user, index) => {\r\n        if (user.id === _user.id) _userList.splice(index, 1);\r\n      });\r\n    });\r\n    setUserList(_userList);\r\n  }, [teamData]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"screen create-team\">\r\n      <Container maxWidth=\"lg\">\r\n        <header className=\"screen__header\">\r\n          <h2>{`Editar equipe ${teamData.name}`}</h2>\r\n        </header>\r\n\r\n        <main>\r\n          <div className=\"create-team__form\">\r\n            <div className=\"create-team__form__content\">\r\n              <TextField\r\n                id=\"team-name\"\r\n                label=\"Nome\"\r\n                variant=\"filled\"\r\n                value={teamName}\r\n                onChange={(e) => {\r\n                  setTeamName(e.target.value);\r\n                }}\r\n              />\r\n              <TextField\r\n                id=\"team-image\"\r\n                label=\"Imagem\"\r\n                variant=\"filled\"\r\n                value={teamImage}\r\n                onChange={(e) => {\r\n                  setTeamImage(e.target.value);\r\n                }}\r\n              />\r\n              {teamName?.length || teamImage?.length ? (\r\n                <div className=\"screen__header__preview\">\r\n                  <Team\r\n                    name={teamName}\r\n                    image={teamImage}\r\n                    avatarSize={80}\r\n                    fontSize={22}\r\n                    disabled\r\n                  />\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <Button variant=\"outlined\" onClick={editTeam}>\r\n              Salvar\r\n            </Button>\r\n          </div>\r\n\r\n          <div className=\"create-team__user-lists\">\r\n            <div className=\"user-list\">\r\n              <header className=\"section-header\">\r\n                <h3>Todos os colaboradores</h3>\r\n              </header>\r\n              {userList.map((user) => (\r\n                <div className=\"user-list__item\" key={user.id}>\r\n                  <User\r\n                    key={user.id}\r\n                    id={user.id}\r\n                    profilePicture={user?.profilePicture}\r\n                    name={user?.name}\r\n                    email={user?.email}\r\n                    hours={user?.hours}\r\n                    hourValue={user?.hourValue}\r\n                    payment={user?.payment}\r\n                  />\r\n                  <Button\r\n                    className=\"user-list__item__bt-add\"\r\n                    onClick={() => addUser(user, userList, newUserList)}\r\n                  >\r\n                    <ArrowForward />\r\n                  </Button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"user-list\">\r\n              <header className=\"section-header\">\r\n                <h3>Colaboradores na equipe</h3>\r\n              </header>\r\n              {newUserList.map((user) => (\r\n                <div className=\"user-list__item\" key={user.id}>\r\n                  <Button\r\n                    className=\"user-list__item__bt-add\"\r\n                    onClick={() => removeUser(user, userList, newUserList)}\r\n                  >\r\n                    <ArrowBack />\r\n                  </Button>\r\n                  <User\r\n                    id={user.id}\r\n                    profilePicture={user?.profilePicture}\r\n                    name={user?.name}\r\n                    email={user?.email}\r\n                    hours={user?.hours}\r\n                    hourValue={user?.hourValue}\r\n                    payment={user?.payment}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(EditTeam);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { TextField, Button, Container } from \"@material-ui/core\";\r\nimport { ArrowBack, ArrowForward } from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\n\r\nimport User from \"../../components/User/User\";\r\nimport Team from \"../../components/Team/Team\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst CreateTeam = () => {\r\n  const store = useStore();\r\n  const history = useHistory();\r\n  const [teamName, setTeamName] = useState(\"\");\r\n  const [teamImage, setTeamImage] = useState(\"\");\r\n  const [userList, setUserList] = useState([]);\r\n  const [newUserList, setNewUserList] = useState([]);\r\n\r\n  const addUser = (_user) => {\r\n    setUserList(\r\n      _.sortBy(\r\n        userList.filter((user) => user.id !== _user.id),\r\n        \"name\"\r\n      )\r\n    );\r\n    setNewUserList(_.sortBy([...newUserList, _user], \"name\"));\r\n  };\r\n\r\n  const removeUser = (_user) => {\r\n    setNewUserList(\r\n      _.sortBy(\r\n        newUserList.filter((user) => user.id !== _user.id),\r\n        \"name\"\r\n      )\r\n    );\r\n    setUserList(_.sortBy([...userList, _user], \"name\"));\r\n  };\r\n\r\n  const createTeam = async () => {\r\n    const newTeamId = store.teamStore.createTeam({\r\n      name: teamName,\r\n      image: teamImage,\r\n      users: newUserList,\r\n    });\r\n\r\n    store.teamStore.fetchTeamList();\r\n\r\n    history.push(`/teams/${newTeamId}`);\r\n\r\n    if (newTeamId) alert(`A equipe ${teamName} foi criada.`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUserList(store.userStore.userList);\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"screen create-team\">\r\n      <Container maxWidth=\"lg\">\r\n        <header className=\"screen__header\">\r\n          <h2>Criar equipe</h2>\r\n        </header>\r\n\r\n        <main>\r\n          <div className=\"create-team__form\">\r\n            <div className=\"create-team__form__content\">\r\n              <TextField\r\n                id=\"team-name\"\r\n                label=\"Nome\"\r\n                variant=\"filled\"\r\n                value={teamName}\r\n                onChange={(e) => {\r\n                  setTeamName(e.target.value);\r\n                }}\r\n              />\r\n              <TextField\r\n                id=\"team-image\"\r\n                label=\"Imagem\"\r\n                variant=\"filled\"\r\n                value={teamImage}\r\n                onChange={(e) => {\r\n                  setTeamImage(e.target.value);\r\n                }}\r\n              />\r\n              {teamName?.length || teamImage?.length ? (\r\n                <div className=\"screen__header__preview\">\r\n                  <Team\r\n                    name={teamName}\r\n                    image={teamImage}\r\n                    avatarSize={80}\r\n                    fontSize={22}\r\n                    disabled\r\n                  />\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <Button variant=\"outlined\" onClick={createTeam}>\r\n              Criar\r\n            </Button>\r\n          </div>\r\n\r\n          <div className=\"create-team__user-lists\">\r\n            <div className=\"user-list\">\r\n              <header className=\"section-header\">\r\n                <h3>Todos os colaboradores</h3>\r\n              </header>\r\n              {userList.map((user) => (\r\n                <div className=\"user-list__item\" key={user.id}>\r\n                  <User\r\n                    key={user.id}\r\n                    id={user.id}\r\n                    profilePicture={user?.profilePicture}\r\n                    name={user?.name}\r\n                    email={user?.email}\r\n                    hours={user?.hours}\r\n                    hourValue={user?.hourValue}\r\n                    payment={user?.payment}\r\n                  />\r\n                  <Button\r\n                    className=\"user-list__item__bt-add\"\r\n                    onClick={() => addUser(user)}\r\n                  >\r\n                    <ArrowForward />\r\n                  </Button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"user-list\">\r\n              <header className=\"section-header\">\r\n                <h3>Colaboradores na equipe</h3>\r\n              </header>\r\n              {newUserList.map((user) => (\r\n                <div className=\"user-list__item\" key={user.id}>\r\n                  <Button\r\n                    className=\"user-list__item__bt-add\"\r\n                    onClick={() => removeUser(user)}\r\n                  >\r\n                    <ArrowBack />\r\n                  </Button>\r\n                  <User\r\n                    id={user.id}\r\n                    profilePicture={user?.profilePicture}\r\n                    name={user?.name}\r\n                    email={user?.email}\r\n                    hours={user?.hours}\r\n                    hourValue={user?.hourValue}\r\n                    payment={user?.payment}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(CreateTeam);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Container, TextField, Fab } from \"@material-ui/core\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\n\r\nimport Team from \"../../components/Team/Team\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst Teams = () => {\r\n  const store = useStore();\r\n  const history = useHistory();\r\n  const [filterTerm, setFilterTerm] = useState(\"\");\r\n  const [filteredList, setFilteredList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (filterTerm.length) {\r\n      setFilteredList(\r\n        store.teamStore.teamList.filter((item) =>\r\n          item.name.toLowerCase().includes(filterTerm.toLowerCase())\r\n        )\r\n      );\r\n      return;\r\n    }\r\n    setFilteredList(store.teamStore.teamList);\r\n  }, [filterTerm]);\r\n\r\n  useEffect(() => {\r\n    setFilteredList(store.teamStore.teamList);\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"screen teams\">\r\n      <Container maxWidth=\"lg\">\r\n        <header className=\"screen__header\">\r\n          <h2>Equipes</h2>\r\n\r\n          <div className=\"screen__header__right\">\r\n            {store?.teamStore?.teamList?.length ? (\r\n              <TextField\r\n                id=\"filter-term\"\r\n                label=\"Filtro\"\r\n                variant=\"filled\"\r\n                value={filterTerm}\r\n                onChange={(e) => {\r\n                  setFilterTerm(e.target.value);\r\n                }}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </header>\r\n\r\n        <main>\r\n          {!filteredList?.length ? (\r\n            <div>Nenhuma equipe encontrada.</div>\r\n          ) : (\r\n            filteredList.map((team) => (\r\n              <Team\r\n                // card\r\n                key={team.id}\r\n                id={team.id}\r\n                name={team?.name}\r\n                image={team?.image}\r\n              />\r\n            ))\r\n          )}\r\n        </main>\r\n      </Container>\r\n      <Fab\r\n        className=\"teams__create-team\"\r\n        color=\"primary\"\r\n        aria-label=\"Criar equipe\"\r\n        onClick={() => {\r\n          history.push(\"/teams/create\");\r\n        }}\r\n      >\r\n        <Add />\r\n      </Fab>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Teams);\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst LineChart = (props) => {\r\n  const { data = {} } = props;\r\n\r\n  const options = {\r\n    responsive: true,\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  return <Line data={data} options={options} />;\r\n};\r\n\r\nexport default LineChart;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { ListItem, Tooltip } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Warning } from \"@material-ui/icons\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst TimeEntry = (props) => {\r\n  const {\r\n    project = {},\r\n    time = \"\",\r\n    description = \"\",\r\n    disabled = false,\r\n    showMeta = false,\r\n    warnings = [],\r\n  } = props;\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <ListItem\r\n      button={!disabled}\r\n      className=\"time-entry\"\r\n      style={{\r\n        borderColor: project.color,\r\n      }}\r\n    >\r\n      <div\r\n        className=\"time-entry__pressable\"\r\n        onClick={() =>\r\n          project.id ? history.push(`/projects/${project.id}`) : null\r\n        }\r\n      >\r\n        <div className=\"time-entry__top\">\r\n          <div className=\"time-entry__project-name\">{project.name}</div>\r\n        </div>\r\n        <div className=\"time-entry__bottom\">\r\n          <div\r\n            className=\"time-entry__time\"\r\n            style={{\r\n              borderColor: project.color,\r\n            }}\r\n          >\r\n            {time.replace(\"PT\", \"\").replace(\"H\", \"hr \").replace(\"M\", \"min\")}\r\n          </div>\r\n          -<div className=\"time-entry__description\">{description}</div>\r\n        </div>\r\n      </div>\r\n      {showMeta && warnings?.length ? (\r\n        <div className=\"time-entry__meta\">\r\n          <Tooltip\r\n            arrow\r\n            interactive\r\n            placement=\"left\"\r\n            title={\r\n              <ul className=\"warning-list\">\r\n                {warnings.map((warning) => (\r\n                  <li className=\"warning-list__item\">{warning}</li>\r\n                ))}\r\n              </ul>\r\n            }\r\n          >\r\n            <div className=\"time-entry__meta__item\">\r\n              <Warning color=\"error\" />\r\n            </div>\r\n          </Tooltip>\r\n        </div>\r\n      ) : null}\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default observer(TimeEntry);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Avatar, Container, FormControlLabel, Switch } from \"@material-ui/core\";\r\nimport { AccessTime } from \"@material-ui/icons\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\n\r\nimport LineChart from \"../../components/Chart/LineChart\";\r\nimport TimeEntry from \"../../components/TimeEntry/TimeEntry\";\r\nimport Team from \"../../components/Team/Team\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst UserDetail = () => {\r\n  const store = useStore();\r\n  const params = useParams();\r\n  const user = store.userStore.userList.find((user) => user.id === params.id);\r\n  const [filteredTimeEntries, setFilteredTimeEntries] = useState([]);\r\n  const [filterWarnings, setFilterWarnings] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (filterWarnings) {\r\n      setFilteredTimeEntries(\r\n        user.timeEntriesByDay\r\n          .filter((day) =>\r\n            day.timeEntries.find((entry) => entry?.warnings?.length)\r\n          )\r\n          .map((day) => ({\r\n            ...day,\r\n            timeEntries: day.timeEntries.filter(\r\n              (entry) => entry?.warnings?.length\r\n            ),\r\n          }))\r\n      );\r\n      return;\r\n    }\r\n    setFilteredTimeEntries(user.timeEntriesByDay);\r\n  }, [filterWarnings]);\r\n\r\n  useEffect(() => {\r\n    setFilteredTimeEntries(user.timeEntriesByDay);\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  if (!user) return null;\r\n\r\n  return (\r\n    <div className=\"screen user-detail\">\r\n      <Container maxWidth=\"lg\">\r\n        <header className=\"screen__header\">\r\n          <div className=\"screen__header__left\">\r\n            <Avatar\r\n              alt={user?.name}\r\n              src={user?.profilePicture}\r\n              className=\"user-detail__avatar\"\r\n            />\r\n            <h2>{user?.name}</h2>\r\n          </div>\r\n          <div\r\n            className=\"screen__header__right\"\r\n            style={{ color: user.hours >= 200 ? \"#f44336\" : \"#ffffff\" }}\r\n          >\r\n            {user.hours.toFixed(2)}\r\n            <AccessTime color={user.hours >= 200 ? \"error\" : \"\"} />\r\n          </div>\r\n        </header>\r\n        <main>\r\n          {user?.teams.length ? (\r\n            <div className=\"user-detail__teams\">\r\n              <header className=\"section-header\">\r\n                <h3>Equipes do colaborador</h3>\r\n              </header>\r\n              {user.teams.map((team) => (\r\n                <Team\r\n                  // card\r\n                  key={team.id}\r\n                  id={team.id}\r\n                  name={team?.name}\r\n                  image={team?.image}\r\n                />\r\n              ))}\r\n            </div>\r\n          ) : null}\r\n\r\n          {user?.timeEntries.length ? (\r\n            <>\r\n              <div className=\"user-detail__chart\">\r\n                <header className=\"section-header\">\r\n                  <h3>Horas por dia</h3>\r\n                </header>\r\n                <LineChart\r\n                  data={{\r\n                    labels: user.timeEntriesByDay\r\n                      .map((entry) => entry.date)\r\n                      .reverse(),\r\n                    datasets: [\r\n                      {\r\n                        label: \"Horas\",\r\n                        data: user.timeEntriesByDay\r\n                          .map((entry) => entry.hours)\r\n                          .reverse(),\r\n                        backgroundColor: [\"rgba(255, 255, 255, 0.1)\"],\r\n                        borderColor: [\"rgba(255, 255, 255, 0.1)\"],\r\n                        borderWidth: 1,\r\n                      },\r\n                    ],\r\n                  }}\r\n                />\r\n              </div>\r\n            </>\r\n          ) : null}\r\n\r\n          {user?.timeEntries?.length ? (\r\n            <div className=\"time-entries\">\r\n              <header className=\"section-header\">\r\n                <h3>Entradas de tempo</h3>\r\n                <div className=\"time-entries__filter\">\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        checked={filterWarnings}\r\n                        onChange={() => setFilterWarnings(!filterWarnings)}\r\n                        name=\"filterWarnings\"\r\n                        color=\"primary\"\r\n                      />\r\n                    }\r\n                    label=\"Filtrar warnings\"\r\n                  />\r\n                </div>\r\n              </header>\r\n\r\n              {filteredTimeEntries?.length\r\n                ? filteredTimeEntries.map((day) => (\r\n                    <div className=\"time-entries__day\" key={day.date}>\r\n                      <header className=\"section-header\">\r\n                        <h3>{day.date}</h3>\r\n                      </header>\r\n                      <div className=\"description\">\r\n                        {day.timeEntries.map((entry) => (\r\n                          <TimeEntry\r\n                            key={entry.id}\r\n                            disabled={!entry?.project?.id}\r\n                            project={entry.project}\r\n                            time={entry.timeInterval.duration}\r\n                            description={entry.description}\r\n                            warnings={entry.warnings}\r\n                            showMeta\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                : \"Nenhuma entrada de tempo.\"}\r\n            </div>\r\n          ) : null}\r\n\r\n          {!user?.timeEntries.length ? (\r\n            <div>\r\n              Nenhuma entrada encontrada para este usuário no período\r\n              selecionado.\r\n            </div>\r\n          ) : null}\r\n        </main>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(UserDetail);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Container, TextField } from \"@material-ui/core\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\n\r\nimport User from \"../../components/User/User\";\r\n\r\nconst Users = () => {\r\n  const store = useStore();\r\n  const [filterTerm, setFilterTerm] = useState(\"\");\r\n  const [filteredList, setFilteredList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (filterTerm.length) {\r\n      setFilteredList(\r\n        store.userStore.userList.filter((item) =>\r\n          item.name.toLowerCase().includes(filterTerm.toLowerCase())\r\n        )\r\n      );\r\n      return;\r\n    }\r\n    setFilteredList(store.userStore.userList);\r\n  }, [filterTerm]);\r\n\r\n  useEffect(() => {\r\n    setFilteredList(store.userStore.userList);\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"screen users\">\r\n      <Container maxWidth=\"lg\">\r\n        <header className=\"screen__header\">\r\n          <h2>Colaboradoes</h2>\r\n\r\n          {store?.userStore?.userList?.length ? (\r\n            <TextField\r\n              id=\"filter-term\"\r\n              label=\"Filtro\"\r\n              variant=\"filled\"\r\n              value={filterTerm}\r\n              onChange={(e) => {\r\n                setFilterTerm(e.target.value);\r\n              }}\r\n            />\r\n          ) : null}\r\n        </header>\r\n\r\n        <main>\r\n          {!filteredList?.length ? (\r\n            <div>Nenhum colaborador encontrado.</div>\r\n          ) : (\r\n            filteredList.map((user) => (\r\n              <User\r\n                id={user.id}\r\n                key={user.id}\r\n                profilePicture={user?.profilePicture}\r\n                name={user?.name}\r\n                email={user?.email}\r\n                hours={user?.hours}\r\n                hourValue={user?.hourValue}\r\n                payment={user?.payment}\r\n                warnings={user?.warnings}\r\n                showMeta\r\n              />\r\n            ))\r\n          )}\r\n        </main>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Users);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { ListItem } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst Project = (props) => {\r\n  const { id, index, name = \"\", color = \"\", disabled = false } = props;\r\n  const [showColor, setShowColor] = useState(false);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const colorEffect = setTimeout(() => {\r\n      setShowColor(true);\r\n    }, index * 50 + 100);\r\n\r\n    return () => {\r\n      clearTimeout(colorEffect);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <ListItem\r\n      button={!disabled}\r\n      onClick={() => (!disabled ? history.push(`/projects/${id}`) : null)}\r\n      className=\"project\"\r\n      style={{\r\n        borderColor: showColor ? color : \"transparent\",\r\n      }}\r\n    >\r\n      <div className=\"project__name\">{name}</div>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default observer(Project);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Container, TextField } from \"@material-ui/core\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\n\r\nimport Project from \"../../components/Project/Project\";\r\n\r\nconst Projects = () => {\r\n  const store = useStore();\r\n  const [filterTerm, setFilterTerm] = useState(\"\");\r\n  const [filteredList, setFilteredList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (filterTerm.length) {\r\n      setFilteredList(\r\n        store.projectStore.projectList.filter((item) =>\r\n          item.name.toLowerCase().includes(filterTerm.toLowerCase())\r\n        )\r\n      );\r\n      return;\r\n    }\r\n    setFilteredList(store.projectStore.projectList);\r\n  }, [filterTerm]);\r\n\r\n  useEffect(() => {\r\n    setFilteredList(store.projectStore.projectList);\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"screen projects\">\r\n      <Container maxWidth=\"lg\">\r\n        <header className=\"screen__header\">\r\n          <h2>Projetos</h2>\r\n\r\n          {store?.projectStore?.projectList?.length ? (\r\n            <TextField\r\n              id=\"filter-term\"\r\n              label=\"Filtro\"\r\n              variant=\"filled\"\r\n              value={filterTerm}\r\n              onChange={(e) => {\r\n                setFilterTerm(e.target.value);\r\n              }}\r\n            />\r\n          ) : null}\r\n        </header>\r\n\r\n        <main>\r\n          {!filteredList?.length ? (\r\n            <div>Nenhum projeto encontrado.</div>\r\n          ) : (\r\n            filteredList.map((project, index) => (\r\n              <Project\r\n                key={project.id}\r\n                id={project.id}\r\n                color={project?.color}\r\n                name={project?.name}\r\n                index={index}\r\n              />\r\n            ))\r\n          )}\r\n        </main>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Projects);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport _ from \"lodash\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\nimport getDuration from \"../../utils/getDuration\";\r\n\r\nimport User from \"../../components/User/User\";\r\nimport HorizontalBarChart from \"../../components/Chart/HorizontalBarChart\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst ProjectDetail = () => {\r\n  const store = useStore();\r\n  const params = useParams();\r\n  const project = store.projectStore.projectList.find(\r\n    (project) => project.id === params.id\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  if (!project) return null;\r\n\r\n  return (\r\n    <div className=\"screen project-detail\">\r\n      <Container maxWidth=\"lg\">\r\n        <header className=\"screen__header\">\r\n          <div className=\"screen__header__left\">\r\n            <h2>{project?.name}</h2>\r\n          </div>\r\n          <div className=\"screen__header__right\">\r\n            {\r\n              <div className=\"project-detail__estimate\">\r\n                <div>\r\n                  {`Estimativa: ${getDuration(\r\n                    project?.estimate.estimate\r\n                  )} horas`}\r\n                </div>\r\n                <div>\r\n                  {`Total: ${getDuration(project?.duration).toFixed(2)} horas`}\r\n                </div>\r\n\r\n                {getDuration(project?.estimate.estimate) &&\r\n                getDuration(project?.duration) ? (\r\n                  <div>\r\n                    {`Esforço: ${(\r\n                      (getDuration(project?.duration) /\r\n                        getDuration(project?.estimate.estimate)) *\r\n                      100\r\n                    ).toFixed(2)}%`}\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            }\r\n          </div>\r\n        </header>\r\n        <main>\r\n          {project?.timeEntriesByUser.length ? (\r\n            <>\r\n              <div className=\"project-detail__chart\">\r\n                <header className=\"section-header\">\r\n                  <h3>Horas por colaborador</h3>\r\n                </header>\r\n                <HorizontalBarChart\r\n                  data={{\r\n                    labels: _.orderBy(\r\n                      project.timeEntriesByUser,\r\n                      \"hours\",\r\n                      \"desc\"\r\n                    ).map((user) => user.name),\r\n                    datasets: [\r\n                      {\r\n                        label: \"Horas\",\r\n                        data: _.orderBy(\r\n                          project.timeEntriesByUser,\r\n                          \"hours\",\r\n                          \"desc\"\r\n                        ).map((user) =>\r\n                          user?.hours ? user.hours.toFixed(2) : 0\r\n                        ),\r\n                        backgroundColor: [`${project.color}85`],\r\n                        borderWidth: 0,\r\n                      },\r\n                    ],\r\n                  }}\r\n                />\r\n              </div>\r\n            </>\r\n          ) : null}\r\n\r\n          {project?.timeEntriesByUser?.length ? (\r\n            <div className=\"user-list\">\r\n              <header className=\"section-header\">\r\n                <h3>Colaboradores no projeto</h3>\r\n              </header>\r\n              {project.timeEntriesByUser.map((user) => (\r\n                <User\r\n                  id={user.id}\r\n                  key={user.id}\r\n                  profilePicture={user?.profilePicture}\r\n                  name={user?.name}\r\n                  email={user?.email}\r\n                  hours={user?.hours}\r\n                  hourValue={user?.hourValue}\r\n                  payment={user?.payment}\r\n                  warnings={user?.warnings}\r\n                  showMeta\r\n                />\r\n              ))}\r\n            </div>\r\n          ) : null}\r\n\r\n          {!project?.timeEntriesByUser?.length ? (\r\n            <div>\r\n              Nenhuma entrada encontrada para este projeto no período\r\n              selecionado.\r\n            </div>\r\n          ) : null}\r\n        </main>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(ProjectDetail);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { flowResult } from \"mobx\";\r\nimport {\r\n  TextField,\r\n  Container,\r\n  Button,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\n\r\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\r\nimport { useStore } from \"../../hooks\";\r\n\r\nimport User from \"../../components/User/User\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst Login = () => {\r\n  const store = useStore();\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [fetching, setFetching] = useState(false);\r\n  const [apiKey] = useLocalStorage(\"clockify-api-key\");\r\n\r\n  const authenticate = async () => {\r\n    setFetching(true);\r\n    await flowResult(store.authStore.authenticate(inputValue));\r\n    setFetching(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const dataLogContainer = document.querySelector(\".login .fetch-data-log\");\r\n    if (dataLogContainer) {\r\n      dataLogContainer.scrollTop = dataLogContainer.scrollHeight;\r\n    }\r\n  }, [store.authStore.fetchDataLog.length]);\r\n\r\n  useEffect(() => {\r\n    if (apiKey?.length) setInputValue(apiKey);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"screen login\">\r\n      <Container maxWidth=\"lg\" className=\"login__container\">\r\n        <h1>Clockify Teams</h1>\r\n        <div className=\"login__box\">\r\n          {!store.authStore.isConfirmingIdentity ? (\r\n            <>\r\n              {!store.authStore.autoLogin ? (\r\n                <TextField\r\n                  id=\"api-key\"\r\n                  label=\"Clockify API Key\"\r\n                  variant=\"filled\"\r\n                  value={inputValue}\r\n                  onChange={(e) => {\r\n                    setInputValue(e.target.value);\r\n                  }}\r\n                />\r\n              ) : null}\r\n              {fetching || store.authStore.autoLogin ? (\r\n                <LinearProgress />\r\n              ) : (\r\n                <Button variant=\"outlined\" onClick={authenticate}>\r\n                  Autenticar\r\n                </Button>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <User\r\n                disabled\r\n                name={store?.authStore?.user?.name}\r\n                profilePicture={store?.authStore?.user?.profilePicture}\r\n                email={store?.authStore?.user?.email}\r\n              />\r\n\r\n              <div className=\"fetch-data-log\">\r\n                {store.authStore.fetchDataLog.map(({ text, color }) => (\r\n                  <div style={{ color }} key={text}>\r\n                    {text}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Login);\r\n","import React from \"react\";\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\n\r\nimport Header from \"../Header/Header\";\r\n\r\nimport TeamDetail from \"../../screens/TeamDetail/TeamDetail\";\r\nimport EditTeam from \"../../screens/EditTeam/EditTeam\";\r\nimport CreateTeam from \"../../screens/CreateTeam/CreateTeam\";\r\nimport Teams from \"../../screens/Teams/Teams\";\r\nimport UserDetail from \"../../screens/UserDetail/UserDetail\";\r\nimport Users from \"../../screens/Users/Users\";\r\nimport Projects from \"../../screens/Projects/Projects\";\r\nimport ProjectDetail from \"../../screens/ProjectDetail/ProjectDetail\";\r\nimport Login from \"../../screens/Login/Login\";\r\n\r\nconst Router = () => {\r\n  const store = useStore();\r\n\r\n  return (\r\n    <HashRouter>\r\n      {store?.authStore?.isAuthenticated ? (\r\n        <>\r\n          <Header />\r\n          <Switch>\r\n            <Route path=\"/users/:id\">\r\n              <UserDetail />\r\n            </Route>\r\n            <Route path=\"/projects/:id\">\r\n              <ProjectDetail />\r\n            </Route>\r\n            <Route path=\"/projects\">\r\n              <Projects />\r\n            </Route>\r\n            <Route path=\"/teams/edit/:id\">\r\n              <EditTeam />\r\n            </Route>\r\n            <Route path=\"/teams/create\">\r\n              <CreateTeam />\r\n            </Route>\r\n            <Route path=\"/teams/:id\">\r\n              <TeamDetail />\r\n            </Route>\r\n            <Route path=\"/teams\">\r\n              <Teams />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Users />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      ) : (\r\n        <Switch>\r\n          <Route path=\"/\">\r\n            <Login />\r\n          </Route>\r\n        </Switch>\r\n      )}\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default observer(Router);\r\n","const theme = {\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      main: \"#ecf0f1\",\r\n    },\r\n    secondary: {\r\n      main: \"#2ecc71\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default theme;\r\n","import { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport theme from \"../../constants/theme\";\r\n\r\nconst Theme = ({ children }) => {\r\n  const customTheme = createMuiTheme(theme);\r\n  return (\r\n    <ThemeProvider theme={customTheme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Theme;\r\n","import React from \"react\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst Loader = ({ active }) => {\r\n  if (active) {\r\n    return (\r\n      <div className=\"loader\">\r\n        <LinearProgress />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState } from \"react\";\r\nimport { flowResult } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { Search } from \"@material-ui/icons\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst date = new Date();\r\n\r\nconst QueryDateSeletor = () => {\r\n  const store = useStore();\r\n  const [fetching, setFetching] = useState(false);\r\n  const [startDate, setStartDate] = useState(\r\n    new Date(date.getFullYear(), date.getMonth(), 1)\r\n  );\r\n  const [endDate, setEndDate] = useState(\r\n    new Date(date.getFullYear(), date.getMonth() + 1, 0)\r\n  );\r\n\r\n  const fetchData = async () => {\r\n    store.authStore.clearDataLog();\r\n    store.authStore.setStatusConfirmingIdentity();\r\n    store.userStore.setQueryDate(startDate, endDate);\r\n    setFetching(true);\r\n    await flowResult(store.projectStore.fetchProjectList());\r\n    await flowResult(store.userStore.fetchUserList());\r\n    store.projectStore.formatProjectList();\r\n    store.teamStore.fetchTeamList();\r\n    store.userStore.getUsersTeams();\r\n    setFetching(false);\r\n    store.authStore.confirmIdentity();\r\n  };\r\n\r\n  if (store.authStore.isUnauthenticated) return null;\r\n\r\n  return (\r\n    <div className=\"query-date-selector\">\r\n      <Loader active={fetching} />\r\n\r\n      <div className=\"query-date-selector__content\">\r\n        <KeyboardDatePicker\r\n          inputVariant=\"filled\"\r\n          id=\"start-date\"\r\n          label=\"Data inicial\"\r\n          format=\"dd/MM/yyyy\"\r\n          value={startDate}\r\n          onChange={setStartDate}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"Selecione a data inicial\",\r\n          }}\r\n          disabled={fetching}\r\n        />\r\n        <KeyboardDatePicker\r\n          inputVariant=\"filled\"\r\n          id=\"end-date\"\r\n          label=\"Data final\"\r\n          format=\"dd/MM/yyyy\"\r\n          value={endDate}\r\n          onChange={setEndDate}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"Selecione a data final\",\r\n          }}\r\n          disabled={fetching}\r\n        />\r\n        <Button\r\n          variant=\"outlined\"\r\n          disabled={fetching}\r\n          onClick={fetchData}\r\n          className=\"query-date-selector__bt-search\"\r\n        >\r\n          <Search />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(QueryDateSeletor);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport { flowResult } from \"mobx\";\nimport { wrapRoot } from \"mobx-easy\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nimport baseAPI from \"./services/baseAPI\";\nimport RootStore from \"./stores/containers/rootStore\";\n\nimport { RootStoreProvider } from \"./hooks\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\n\nimport Router from \"./components/Router/Router\";\nimport Theme from \"./components/Theme/Theme\";\nimport QueryDateSeletor from \"./components/QueryDateSelector/QueryDateSeletor\";\n\nconst App = () => {\n  const [rootStore, setRootStore] = useState(null);\n  const [apiKey] = useLocalStorage(\"clockify-api-key\");\n\n  const init = async () => {\n    const newRootStore = wrapRoot({ RootStore, env: baseAPI });\n    setRootStore(newRootStore);\n\n    if (apiKey?.length) {\n      newRootStore.authStore.setAutoLogin(true);\n      await flowResult(newRootStore.authStore.authenticate(apiKey));\n      newRootStore.authStore.setAutoLogin(false);\n    }\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  if (!rootStore) return null;\n\n  return (\n    <div className=\"app\">\n      <RootStoreProvider value={rootStore}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <Theme>\n            <Router />\n            <QueryDateSeletor />\n          </Theme>\n        </MuiPickersUtilsProvider>\n      </RootStoreProvider>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/index.scss\";\nimport App from \"./App\";\nimport \"@fontsource/roboto/300.css\";\nimport \"@fontsource/roboto/400.css\";\nimport \"@fontsource/roboto/500.css\";\nimport \"@fontsource/roboto/700.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}