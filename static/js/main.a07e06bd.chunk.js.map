{"version":3,"sources":["services/baseAPI.js","hooks/useLocalStorage.js","stores/models/user.js","stores/containers/authStore.js","utils/getDuration.js","utils/getDate.js","stores/containers/userStore.js","stores/models/project.js","stores/containers/projectStore.js","stores/models/team.js","stores/containers/teamStore.js","stores/containers/rootStore.js","hooks/useStore.js","components/Menu/Menu.js","components/Drawer/Drawer.js","components/Logo/Logo.js","components/Header/Header.js","components/User/User.js","components/Chart/HorizontalBarChart.js","screens/TeamDetail/TeamDetail.js","components/Team/Team.js","screens/EditTeam/EditTeam.js","screens/CreateTeam/CreateTeam.js","screens/Teams/Teams.js","components/Chart/LineChart.js","components/TimeEntry/TimeEntry.js","screens/UserDetail/UserDetail.js","screens/Users/Users.js","components/Project/Project.js","screens/Projects/Projects.js","screens/ProjectDetail/ProjectDetail.js","screens/Login/Login.js","components/Router/Router.js","constants/theme.js","components/Theme/Theme.js","components/Loader/Loader.js","components/QueryDateSelector/QueryDateSeletor.js","App.js","index.js"],"names":["baseAPI","axios","create","baseURL","timeout","useLocalStorage","key","state","JSON","parse","localStorage","getItem","setState","newState","setItem","stringify","User","newUser","id","name","email","defaultWorkspace","profilePicture","timeEntries","timeEntriesByDay","teams","hours","makeObservable","this","observable","Error","AuthStore","user","authStatus","autoLogin","fetchDataLog","isAuthenticated","computed","isConfirmingIdentity","isUnauthenticated","setUser","action","bound","confirmIdentity","unauthenticate","setAutoLogin","feedFetchDataLog","setStatusConfirmingIdentity","clearDataLog","authenticate","flow","fromApi","payload","text","status","color","length","push","getEnv","defaults","headers","common","apiKey","setApiKey","get","response","alert","data","console","log","getHours","_time","time","split","minutes","Number","replace","error","getDate","_dateTime","dateTime","date","UserStore","userList","queryStartDate","queryEndDate","setUserList","fetchUserData","fetchUserList","fetchUserTimeEntries","map","start","end","userFound","find","timeEntry","timeInterval","duration","project","getRoot","projectStore","projectList","projectId","dateFound","entry","getDuration","teamStore","teamList","team","users","authStore","pageSize","params","newUsers","item","Project","newProject","workspaceId","estimate","fetchedTimeEntries","timeEntriesByUser","ProjectStore","setProjectList","fetchProjectData","fetchProjectList","archived","projectTimeEntriesByUser","userStore","projectTimeEntriesFound","filter","userId","Team","newTeam","image","timeEntriesByProject","TeamStore","setTeamList","createTeam","editTeam","fetchTeamList","fetchTeamData","_teamList","newTeamList","includes","usersWithTimeEntries","teamTimeEntriesByProject","_user","projectFound","index","_project","RootStore","RootStoreContext","createContext","RootStoreProvider","Provider","useStore","useContext","menuButtons","route","label","Menu","vertical","drawer","history","useHistory","className","Button","fullWidth","onClick","close","Drawer","useState","isOpen","setIsOpen","open","SwipeableDrawer","anchor","onClose","onOpen","Logo","observer","Container","maxWidth","UserMeta","props","warnings","Tooltip","arrow","placement","title","style","toFixed","AccessTime","showMeta","disabled","ListItem","Avatar","alt","src","HorizontalBarChart","options","responsive","indexAxis","scales","y","beginAtZero","plugins","legend","display","store","useParams","setTeam","showConfirmationModal","setShowConfirmationModal","foundTeam","closeConfirmationModal","useEffect","window","scrollTo","Delete","labels","_","orderBy","datasets","backgroundColor","borderWidth","hourValue","payment","Fab","aria-label","Edit","Dialog","aria-labelledby","DialogTitle","cursor","DialogContent","DialogContentText","DialogActions","autoFocus","removeTeam","avatarSize","fontSize","card","button","width","height","teamData","teamName","setTeamName","teamImage","setTeamImage","newUserList","setNewUserList","a","newTeamId","_userList","forEach","splice","TextField","variant","value","onChange","e","target","_newUserList","sortBy","ArrowForward","ArrowBack","filterTerm","setFilterTerm","filteredList","setFilteredList","toLowerCase","Add","LineChart","description","borderColor","foundUser","reverse","day","showColor","setShowColor","colorEffect","setTimeout","clearTimeout","setProject","foundProject","inputValue","setInputValue","fetching","setFetching","flowResult","dataLogContainer","document","querySelector","scrollTop","scrollHeight","LinearProgress","path","theme","palette","type","primary","main","Theme","children","customTheme","createMuiTheme","ThemeProvider","CssBaseline","Loader","active","Date","getFullYear","getMonth","startDate","setStartDate","endDate","setEndDate","fetchData","setQueryDate","inputVariant","format","KeyboardButtonProps","Search","App","rootStore","setRootStore","init","newRootStore","wrapRoot","env","utils","DateFnsUtils","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a07e06bd.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseURL = \"https://api.clockify.me/api/v1\";\r\n\r\nconst baseAPI = axios.create({\r\n  baseURL,\r\n  timeout: 10000,\r\n});\r\n\r\nexport default baseAPI;\r\n","const useLocalStorage = (key = \"\") => {\r\n  const state = JSON.parse(localStorage.getItem(`clockify-teams@${key}`)) || {};\r\n\r\n  const setState = (newState) => {\r\n    localStorage.setItem(`clockify-teams@${key}`, JSON.stringify(newState));\r\n  };\r\n\r\n  return [state, setState];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import { makeObservable, observable } from \"mobx\";\r\n\r\nexport default class User {\r\n  id = null;\r\n  name = null;\r\n  email = null;\r\n  defaultWorkspace = null;\r\n  profilePicture = null;\r\n  timeEntries = [];\r\n  timeEntriesByDay = [];\r\n  teams = [];\r\n  hours = null;\r\n\r\n  constructor(newUser) {\r\n    makeObservable(this, {\r\n      id: observable,\r\n      name: observable,\r\n      email: observable,\r\n      defaultWorkspace: observable,\r\n      profilePicture: observable,\r\n      timeEntries: observable,\r\n      timeEntriesByDay: observable,\r\n      teams: observable,\r\n      hours: observable,\r\n    });\r\n\r\n    if (newUser == null || newUser.id == null) {\r\n      throw new Error(\"Invalid user constructor\");\r\n    }\r\n\r\n    const {\r\n      id,\r\n      name,\r\n      email,\r\n      defaultWorkspace,\r\n      profilePicture,\r\n      timeEntries,\r\n      timeEntriesByDay,\r\n      teams,\r\n      hours,\r\n    } = newUser;\r\n\r\n    this.id = id;\r\n    this.name = name || \"\";\r\n    this.email = email || \"\";\r\n    this.defaultWorkspace = defaultWorkspace || \"\";\r\n    this.profilePicture = profilePicture || \"\";\r\n    this.timeEntries = timeEntries || [];\r\n    this.timeEntriesByDay = timeEntriesByDay || [];\r\n    this.teams = teams || [];\r\n    this.hours = hours || 0;\r\n  }\r\n\r\n  static fromApi({\r\n    id,\r\n    name,\r\n    email,\r\n    defaultWorkspace,\r\n    profilePicture,\r\n    timeEntries,\r\n    timeEntriesByDay,\r\n    teams,\r\n    hours,\r\n  } = {}) {\r\n    return new User({\r\n      id,\r\n      name,\r\n      email,\r\n      defaultWorkspace,\r\n      profilePicture,\r\n      timeEntries,\r\n      timeEntriesByDay,\r\n      teams,\r\n      hours,\r\n    });\r\n  }\r\n}\r\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport { action, flow, computed, makeObservable, observable } from \"mobx\";\nimport { getEnv } from \"mobx-easy\";\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\n\nimport User from \"../models/user\";\n\nexport default class AuthStore {\n  user = null;\n  authStatus = \"unauthenticated\";\n  autoLogin = false;\n  fetchDataLog = [];\n\n  constructor() {\n    makeObservable(this, {\n      user: observable,\n      authStatus: observable,\n      autoLogin: observable,\n      fetchDataLog: observable,\n\n      isAuthenticated: computed,\n      isConfirmingIdentity: computed,\n      isUnauthenticated: computed,\n\n      setUser: action.bound,\n      confirmIdentity: action.bound,\n      unauthenticate: action.bound,\n      setAutoLogin: action.bound,\n      feedFetchDataLog: action.bound,\n      setStatusConfirmingIdentity: action.bound,\n      clearDataLog: action.bound,\n\n      authenticate: flow,\n    });\n  }\n\n  get isAuthenticated() {\n    return this.authStatus === \"authenticated\";\n  }\n\n  get isConfirmingIdentity() {\n    return this.authStatus === \"confirming-identity\";\n  }\n\n  get isUnauthenticated() {\n    return this.authStatus === \"unauthenticated\";\n  }\n\n  setUser(user) {\n    this.user = User.fromApi(user);\n  }\n\n  confirmIdentity() {\n    this.authStatus = \"authenticated\";\n  }\n\n  setAutoLogin(payload) {\n    this.autoLogin = payload;\n  }\n\n  feedFetchDataLog(text, status) {\n    let color = \"\";\n    switch (status) {\n      case \"success\": {\n        color = \"#27ae60\";\n        break;\n      }\n\n      case \"error\": {\n        color = \"#c0392b\";\n        break;\n      }\n\n      default: {\n        color = \"#ffffff\";\n        break;\n      }\n    }\n    if (typeof text === \"string\" && text.length)\n      this.fetchDataLog.push({ text, color });\n  }\n\n  clearDataLog() {\n    this.fetchDataLog = [];\n  }\n\n  setStatusConfirmingIdentity() {\n    this.authStatus = \"confirming-identity\";\n  }\n\n  unauthenticate() {\n    this.authStatus = \"unauthenticated\";\n    this.user = null;\n    getEnv().defaults.headers.common[\"X-Api-Key\"] = null;\n  }\n\n  *authenticate(apiKey) {\n    try {\n      const [, setApiKey] = useLocalStorage(\"clockify-api-key\");\n      getEnv().defaults.headers.common[\"X-Api-Key\"] = apiKey;\n      setApiKey(apiKey);\n\n      const response = yield getEnv().get(`/user`);\n\n      if (response?.status !== 200) {\n        alert(\"Invalid Clockify API Key\");\n        return false;\n      }\n\n      if (response?.data) {\n        this.setUser(response.data);\n        this.authStatus = \"confirming-identity\";\n        return true;\n      }\n\n      this.unauthenticate();\n      return false;\n    } catch (error) {\n      console.log(error);\n      this.unauthenticate();\n      alert(\"Invalid Clockify API Key\");\n      return false;\n    }\n  }\n}\n","const getHours = (_time) => {\r\n  try {\r\n    const time = _time?.split(\"H\");\r\n    let hours = 0;\r\n    let minutes = 0;\r\n\r\n    if (time?.length) {\r\n      if (time?.length === 2) {\r\n        hours = Number(time[0].split(\"PT\")[1]) || 0;\r\n        minutes = Number(time[1].split(\"M\")[0]) || 0;\r\n      } else {\r\n        if (time[0] !== \"PT0S\") {\r\n          minutes = Number(time[0].replace(\"PT\", \"\").replace(\"M\", \"\"));\r\n        }\r\n      }\r\n\r\n      return Number(hours + minutes / 60);\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default getHours;\r\n","const getDate = (_dateTime) => {\r\n  try {\r\n    const dateTime = _dateTime?.split(\"T\");\r\n\r\n    if (dateTime?.length) {\r\n      const date = dateTime[0].split(\"-\");\r\n\r\n      return `${date[2]}/${date[1]}/${date[0]}`;\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default getDate;\r\n","import { action, flow, makeObservable, observable } from \"mobx\";\r\nimport { getEnv, getRoot } from \"mobx-easy\";\r\n\r\nimport getDuration from \"../../utils/getDuration\";\r\nimport getDate from \"../../utils/getDate\";\r\n\r\nimport User from \"../models/user\";\r\n\r\nexport default class UserStore {\r\n  userList = [];\r\n  queryStartDate = null;\r\n  queryEndDate = null;\r\n\r\n  constructor() {\r\n    makeObservable(this, {\r\n      userList: observable,\r\n      queryStartDate: observable,\r\n      queryEndDate: observable,\r\n\r\n      setUserList: action.bound,\r\n      fetchUserData: action.bound,\r\n\r\n      fetchUserList: flow,\r\n      fetchUserTimeEntries: flow,\r\n    });\r\n  }\r\n\r\n  setUserList(payload = []) {\r\n    this.userList = payload.map((user) => User.fromApi(user));\r\n  }\r\n\r\n  setQueryDate(start, end) {\r\n    this.queryStartDate = start;\r\n    this.queryEndDate = end;\r\n  }\r\n\r\n  fetchUserData(payload = {}) {\r\n    try {\r\n      const { id } = payload;\r\n      const userFound = this.userList.find((user) => user.id === id);\r\n\r\n      let timeEntriesByDay = [];\r\n      let teams = [];\r\n\r\n      for (const timeEntry of userFound.timeEntries) {\r\n        const time = timeEntry?.timeInterval?.duration;\r\n        const date = timeEntry?.timeInterval?.start;\r\n        const project = getRoot().projectStore.projectList.find(\r\n          ({ id }) => id === timeEntry?.projectId\r\n        );\r\n\r\n        const dateFound = timeEntriesByDay.find(\r\n          (entry) => entry.date === getDate(date)\r\n        );\r\n\r\n        if (time?.length && date?.length) {\r\n          if (dateFound) {\r\n            timeEntriesByDay = timeEntriesByDay.map((entry) => {\r\n              if (entry.date === getDate(date)) {\r\n                return {\r\n                  date: entry.date,\r\n                  timeEntries: [\r\n                    ...entry.timeEntries,\r\n                    {\r\n                      ...timeEntry,\r\n                      project: project\r\n                        ? project\r\n                        : { name: \"Sem projeto\", color: \"#ffffff\" },\r\n                    },\r\n                  ],\r\n                  hours: entry.hours + getDuration(time),\r\n                };\r\n              }\r\n\r\n              return entry;\r\n            });\r\n          } else {\r\n            timeEntriesByDay.push({\r\n              date: getDate(date),\r\n              timeEntries: [\r\n                {\r\n                  ...timeEntry,\r\n                  project: project\r\n                    ? project\r\n                    : { name: \"Sem projeto\", color: \"#ffffff\" },\r\n                },\r\n              ],\r\n              hours: getDuration(time),\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n      for (const team of getRoot().teamStore.teamList) {\r\n        for (const user of team.users) if (user.id === id) teams.push(team);\r\n      }\r\n\r\n      this.setUserList(\r\n        this.userList.map((user) => {\r\n          if (user.id === id) {\r\n            return {\r\n              ...payload,\r\n              timeEntriesByDay,\r\n              teams,\r\n            };\r\n          }\r\n\r\n          return user;\r\n        })\r\n      );\r\n\r\n      return false;\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n      return false;\r\n    }\r\n  }\r\n\r\n  *fetchUserList(payload = {}) {\r\n    try {\r\n      getRoot().authStore.feedFetchDataLog(\"fetching user list...\");\r\n\r\n      const { pageSize = 1000 } = payload;\r\n      const { defaultWorkspace } = getRoot().authStore.user;\r\n\r\n      const response = yield getEnv().get(\r\n        `/workspaces/${defaultWorkspace}/users`,\r\n        {\r\n          params: {\r\n            \"page-size\": pageSize,\r\n            status: \"ACTIVE\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.status !== 200) {\r\n        getRoot().authStore.feedFetchDataLog(\"fetch user list error\", \"error\");\r\n        return false;\r\n      }\r\n\r\n      if (response?.data?.length) {\r\n        getRoot().authStore.feedFetchDataLog(\r\n          \"fetch user list success\",\r\n          \"success\"\r\n        );\r\n\r\n        let newUsers = [];\r\n\r\n        for (const user of response.data) {\r\n          const data = yield this.fetchUserTimeEntries(user);\r\n\r\n          if (data) {\r\n            const { timeEntries, hours } = data;\r\n\r\n            newUsers.push({\r\n              ...user,\r\n              timeEntries,\r\n              hours,\r\n            });\r\n          }\r\n        }\r\n\r\n        if (newUsers.length) {\r\n          this.setUserList(newUsers);\r\n          getRoot().authStore.feedFetchDataLog(\r\n            \"fetch all users time entries success\",\r\n            \"success\"\r\n          );\r\n          return true;\r\n        }\r\n      }\r\n\r\n      getRoot().authStore.feedFetchDataLog(\"fetch user list error\", \"error\");\r\n      return false;\r\n    } catch (error) {\r\n      console.log(error);\r\n      getRoot().authStore.feedFetchDataLog(\"fetch user list error\", \"error\");\r\n      return false;\r\n    }\r\n  }\r\n\r\n  *fetchUserTimeEntries(payload = {}) {\r\n    const { id, name, pageSize = 1000 } = payload;\r\n\r\n    try {\r\n      getRoot().authStore.feedFetchDataLog(\r\n        `fetching user ${name} time entries...`\r\n      );\r\n\r\n      const { defaultWorkspace } = getRoot().authStore.user;\r\n\r\n      const response = yield getEnv().get(\r\n        `/workspaces/${defaultWorkspace}/user/${id}/time-entries`,\r\n        {\r\n          params: {\r\n            start: this.queryStartDate,\r\n            end: this.queryEndDate,\r\n            \"page-size\": pageSize,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.status !== 200) {\r\n        getRoot().authStore.feedFetchDataLog(\r\n          `fetch user ${name} time entries error`,\r\n          \"error\"\r\n        );\r\n        return false;\r\n      }\r\n\r\n      if (response?.data) {\r\n        let hours = 0;\r\n\r\n        for (const item of response.data) {\r\n          const time = item?.timeInterval?.duration;\r\n\r\n          if (time?.length) {\r\n            hours += getDuration(time);\r\n          }\r\n        }\r\n\r\n        getRoot().authStore.feedFetchDataLog(\r\n          `fetch user ${name} time entries success`,\r\n          \"success\"\r\n        );\r\n\r\n        return {\r\n          timeEntries: response.data,\r\n          hours,\r\n        };\r\n      }\r\n\r\n      getRoot().authStore.feedFetchDataLog(\r\n        `fetch user ${name} time entries error`,\r\n        \"error\"\r\n      );\r\n\r\n      return false;\r\n    } catch (error) {\r\n      console.log(error);\r\n      getRoot().authStore.feedFetchDataLog(\r\n        `fetch user ${name} time entries error`,\r\n        \"error\"\r\n      );\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { makeObservable, observable } from \"mobx\";\r\n\r\nexport default class Project {\r\n  id = null;\r\n  name = null;\r\n  email = null;\r\n  workspaceId = null;\r\n  color = null;\r\n  duration = null;\r\n  estimate = null;\r\n  users = [];\r\n  fetchedTimeEntries = false;\r\n  timeEntriesByUser = [];\r\n\r\n  constructor(newProject) {\r\n    makeObservable(this, {\r\n      id: observable,\r\n      name: observable,\r\n      email: observable,\r\n      workspaceId: observable,\r\n      color: observable,\r\n      duration: observable,\r\n      estimate: observable,\r\n      users: observable,\r\n      fetchedTimeEntries: observable,\r\n      timeEntriesByUser: observable,\r\n    });\r\n\r\n    if (newProject == null || newProject.id == null) {\r\n      throw new Error(\"Invalid Project constructor\");\r\n    }\r\n\r\n    const {\r\n      id,\r\n      name,\r\n      email,\r\n      workspaceId,\r\n      color,\r\n      duration,\r\n      estimate,\r\n      users,\r\n      fetchedTimeEntries,\r\n      timeEntriesByUser,\r\n    } = newProject;\r\n\r\n    this.id = id;\r\n    this.name = name || \"\";\r\n    this.email = email || \"\";\r\n    this.workspaceId = workspaceId || \"\";\r\n    this.color = color || \"\";\r\n    this.duration = duration || \"\";\r\n    this.estimate = estimate || \"\";\r\n    this.users = users || [];\r\n    this.fetchedTimeEntries = fetchedTimeEntries || false;\r\n    this.timeEntriesByUser = timeEntriesByUser || [];\r\n  }\r\n\r\n  static fromApi({\r\n    id,\r\n    name,\r\n    email,\r\n    workspaceId,\r\n    color,\r\n    duration,\r\n    estimate,\r\n    users,\r\n    fetchedTimeEntries,\r\n    timeEntriesByUser,\r\n  } = {}) {\r\n    return new Project({\r\n      id,\r\n      name,\r\n      email,\r\n      workspaceId,\r\n      color,\r\n      duration,\r\n      estimate,\r\n      users,\r\n      fetchedTimeEntries,\r\n      timeEntriesByUser,\r\n    });\r\n  }\r\n}\r\n","/* eslint-disable no-loop-func */\r\nimport { action, flow, makeObservable, observable } from \"mobx\";\r\nimport { getEnv, getRoot } from \"mobx-easy\";\r\n\r\nimport Project from \"../models/project\";\r\n\r\nimport getDuration from \"../../utils/getDuration\";\r\nexport default class ProjectStore {\r\n  projectList = [];\r\n\r\n  constructor() {\r\n    makeObservable(this, {\r\n      projectList: observable,\r\n      setProjectList: action.bound,\r\n      fetchProjectData: action.bound,\r\n      fetchProjectList: flow,\r\n    });\r\n  }\r\n\r\n  setProjectList(payload = []) {\r\n    this.projectList = payload.map((project) => Project.fromApi(project));\r\n  }\r\n\r\n  *fetchProjectList(payload = {}) {\r\n    try {\r\n      getRoot().authStore.feedFetchDataLog(\"fetching project list...\");\r\n\r\n      const { pageSize = 1000 } = payload;\r\n      const { defaultWorkspace } = getRoot().authStore.user;\r\n\r\n      const response = yield getEnv().get(\r\n        `/workspaces/${defaultWorkspace}/projects`,\r\n        {\r\n          params: {\r\n            archived: false,\r\n            \"page-size\": pageSize,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.status !== 200) {\r\n        getRoot().authStore.feedFetchDataLog(\r\n          \"fetch project list error\",\r\n          \"error\"\r\n        );\r\n        return false;\r\n      }\r\n\r\n      if (response?.data?.length) {\r\n        this.setProjectList(response.data);\r\n        getRoot().authStore.feedFetchDataLog(\r\n          \"fetch project list success\",\r\n          \"success\"\r\n        );\r\n\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    } catch (error) {\r\n      console.log(error);\r\n      getRoot().authStore.feedFetchDataLog(\"fetch project list error\", \"error\");\r\n      return false;\r\n    }\r\n  }\r\n\r\n  fetchProjectData(payload = {}) {\r\n    try {\r\n      const { id } = payload;\r\n\r\n      let projectTimeEntriesByUser = [];\r\n      for (const user of getRoot().userStore.userList) {\r\n        const projectTimeEntriesFound = user.timeEntries.filter(\r\n          (entry) => entry.projectId === id\r\n        );\r\n\r\n        for (const timeEntry of projectTimeEntriesFound) {\r\n          const userFound = projectTimeEntriesByUser.find(\r\n            (user) => user.id === timeEntry.userId\r\n          );\r\n\r\n          let hours = 0;\r\n\r\n          const time = timeEntry?.timeInterval?.duration;\r\n\r\n          if (time?.length) {\r\n            hours += getDuration(time);\r\n          }\r\n\r\n          if (userFound) {\r\n            projectTimeEntriesByUser = projectTimeEntriesByUser.map((user) => {\r\n              if (user.id === timeEntry.userId) {\r\n                return {\r\n                  ...user,\r\n                  timeEntries: [...user.timeEntries, timeEntry],\r\n                  hours: user.hours + hours,\r\n                };\r\n              }\r\n\r\n              return user;\r\n            });\r\n          } else {\r\n            projectTimeEntriesByUser.push({\r\n              ...user,\r\n              timeEntries: [timeEntry],\r\n              hours,\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n      this.setProjectList(\r\n        this.projectList.map((project) => {\r\n          if (project.id === id) {\r\n            return {\r\n              ...payload,\r\n              timeEntriesByUser: projectTimeEntriesByUser,\r\n              fetchedTimeEntries: true,\r\n            };\r\n          }\r\n\r\n          return project;\r\n        })\r\n      );\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { makeObservable, observable } from \"mobx\";\r\n\r\nexport default class Team {\r\n  id = null;\r\n  name = null;\r\n  image = null;\r\n  users = [];\r\n  fetchedTimeEntries = false;\r\n  timeEntriesByProject = [];\r\n\r\n  constructor(newTeam) {\r\n    makeObservable(this, {\r\n      id: observable,\r\n      name: observable,\r\n      image: observable,\r\n      users: observable,\r\n      fetchedTimeEntries: observable,\r\n      timeEntriesByProject: observable,\r\n    });\r\n\r\n    if (newTeam == null || newTeam.id == null) {\r\n      throw new Error(\"Invalid Team constructor\");\r\n    }\r\n\r\n    const { id, name, image, users, fetchedTimeEntries, timeEntriesByProject } =\r\n      newTeam;\r\n\r\n    this.id = id;\r\n    this.name = name || \"\";\r\n    this.image = image || \"\";\r\n    this.users = users || [];\r\n    this.fetchedTimeEntries = fetchedTimeEntries || false;\r\n    this.timeEntriesByProject = timeEntriesByProject || [];\r\n  }\r\n\r\n  static fromApi({\r\n    id,\r\n    name,\r\n    image,\r\n    users,\r\n    fetchedTimeEntries,\r\n    timeEntriesByProject,\r\n  } = {}) {\r\n    return new Team({\r\n      id,\r\n      name,\r\n      image,\r\n      users,\r\n      fetchedTimeEntries,\r\n      timeEntriesByProject,\r\n    });\r\n  }\r\n}\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport { action, makeObservable, observable } from \"mobx\";\r\nimport { getRoot } from \"mobx-easy\";\r\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\r\nimport getDuration from \"../../utils/getDuration\";\r\n\r\nimport Team from \"../models/team\";\r\n\r\nexport default class TeamStore {\r\n  teamList = [];\r\n\r\n  constructor() {\r\n    makeObservable(this, {\r\n      teamList: observable,\r\n\r\n      setTeamList: action.bound,\r\n      createTeam: action.bound,\r\n      editTeam: action.bound,\r\n      fetchTeamList: action.bound,\r\n      fetchTeamData: action.bound,\r\n    });\r\n  }\r\n\r\n  createTeam(payload = {}) {\r\n    try {\r\n      const { users } = payload;\r\n      const [_teamList, setTeamList] = useLocalStorage(\"team-list\");\r\n\r\n      const teamList = _teamList || [];\r\n\r\n      let id = 1;\r\n\r\n      if (teamList.length) {\r\n        id = teamList.length + 1;\r\n        setTeamList([\r\n          ...teamList,\r\n          {\r\n            ...payload,\r\n            id,\r\n            users: users.map((user) => user.id),\r\n          },\r\n        ]);\r\n      } else {\r\n        setTeamList([\r\n          {\r\n            ...payload,\r\n            id: 1,\r\n            users: users.map((user) => user.id),\r\n          },\r\n        ]);\r\n      }\r\n\r\n      return id;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return false;\r\n    } finally {\r\n      this.fetchTeamList();\r\n    }\r\n  }\r\n\r\n  editTeam(id, payload = {}) {\r\n    try {\r\n      const [teamList, setTeamList] = useLocalStorage(\"team-list\");\r\n      const { users } = payload;\r\n\r\n      setTeamList(\r\n        teamList.map((team) => {\r\n          if (team.id === id) {\r\n            return {\r\n              ...team,\r\n              ...payload,\r\n              users: users.map((user) => user.id),\r\n            };\r\n          }\r\n          return team;\r\n        })\r\n      );\r\n\r\n      return id;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return false;\r\n    } finally {\r\n      this.fetchTeamList();\r\n    }\r\n  }\r\n\r\n  removeTeam(payload = {}) {\r\n    try {\r\n      const [teamList, setTeamList] = useLocalStorage(\"team-list\");\r\n\r\n      const newTeamList = teamList.filter((team) => team.id !== payload.id);\r\n\r\n      setTeamList(newTeamList);\r\n\r\n      this.setTeamList(\r\n        newTeamList.map((team) => ({\r\n          ...team,\r\n          users: getRoot().userStore.userList.filter((user) =>\r\n            team.users.includes(user.id)\r\n          ),\r\n        }))\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  setTeamList(payload = []) {\r\n    this.teamList = payload.map((team) => Team.fromApi(team));\r\n  }\r\n\r\n  fetchTeamList() {\r\n    try {\r\n      getRoot().authStore.feedFetchDataLog(\"fetching team list...\");\r\n\r\n      const [teamList] = useLocalStorage(\"team-list\");\r\n\r\n      if (teamList.length) {\r\n        this.setTeamList(\r\n          teamList.map((team) => ({\r\n            ...team,\r\n            users: getRoot().userStore.userList.filter((user) =>\r\n              team.users.includes(user.id)\r\n            ),\r\n          }))\r\n        );\r\n\r\n        getRoot().authStore.feedFetchDataLog(\r\n          \"fetch team list success\",\r\n          \"success\"\r\n        );\r\n      }\r\n\r\n      return false;\r\n    } catch (error) {\r\n      console.log(error);\r\n      getRoot().authStore.feedFetchDataLog(\"fetch team list error\", \"error\");\r\n      return false;\r\n    }\r\n  }\r\n\r\n  fetchTeamData(payload = {}) {\r\n    try {\r\n      const { id, users = [] } = payload;\r\n\r\n      let usersWithTimeEntries = [];\r\n      let teamTimeEntriesByProject = [];\r\n\r\n      for (const user of users) {\r\n        const userFound = getRoot().userStore.userList.find(\r\n          (_user) => _user.id === user.id\r\n        );\r\n\r\n        if (userFound) {\r\n          const { timeEntries, hours } = userFound;\r\n\r\n          for (const timeEntry of timeEntries) {\r\n            const projectFound = teamTimeEntriesByProject.find(\r\n              (project) => project.id === timeEntry.projectId\r\n            );\r\n\r\n            let hours = 0;\r\n            const time = timeEntry?.timeInterval?.duration;\r\n\r\n            if (time?.length) {\r\n              hours += getDuration(time);\r\n            }\r\n\r\n            if (projectFound) {\r\n              teamTimeEntriesByProject = teamTimeEntriesByProject.map(\r\n                (project) => {\r\n                  if (project.id === timeEntry.projectId) {\r\n                    return {\r\n                      ...project,\r\n                      id: timeEntry.projectId,\r\n                      timeEntries: [...project.timeEntries, timeEntry],\r\n                      hours: project.hours + hours,\r\n                    };\r\n                  }\r\n\r\n                  return project;\r\n                }\r\n              );\r\n            } else {\r\n              teamTimeEntriesByProject.push({\r\n                id: timeEntry.projectId,\r\n                timeEntries: [timeEntry],\r\n                hours,\r\n              });\r\n            }\r\n          }\r\n\r\n          const newUser = getRoot().userStore.userList.find(\r\n            (_user) => _user.id === user.id\r\n          );\r\n\r\n          usersWithTimeEntries.push({\r\n            ...newUser,\r\n            timeEntries,\r\n            hours,\r\n          });\r\n        }\r\n      }\r\n\r\n      let index = 0;\r\n\r\n      for (const project of teamTimeEntriesByProject) {\r\n        if (project.id) {\r\n          const projectFound = getRoot().projectStore.projectList.find(\r\n            (_project) => _project.id === project.id\r\n          );\r\n\r\n          if (projectFound) {\r\n            teamTimeEntriesByProject[index] = {\r\n              ...teamTimeEntriesByProject[index],\r\n              name: projectFound.name,\r\n              color: projectFound.color,\r\n            };\r\n          }\r\n        } else {\r\n          teamTimeEntriesByProject[index] = {\r\n            ...teamTimeEntriesByProject[index],\r\n            name: \"Sem projeto\",\r\n            color: \"#ffffff\",\r\n          };\r\n        }\r\n\r\n        index++;\r\n      }\r\n\r\n      const newTeam = {\r\n        ...payload,\r\n        users: usersWithTimeEntries,\r\n        timeEntriesByProject: teamTimeEntriesByProject,\r\n        fetchedTimeEntries: true,\r\n      };\r\n\r\n      this.setTeamList(\r\n        this.teamList.map((team) => {\r\n          if (team.id === id) {\r\n            return newTeam;\r\n          }\r\n\r\n          return team;\r\n        })\r\n      );\r\n\r\n      return newTeam;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import AuthStore from \"./authStore\";\r\nimport UserStore from \"./userStore\";\r\nimport ProjectStore from \"./projectStore\";\r\nimport TeamStore from \"./teamStore\";\r\n\r\nexport default class RootStore {\r\n  authStore = null;\r\n  userStore = null;\r\n  projectStore = null;\r\n  teamStore = null;\r\n\r\n  init() {\r\n    this.authStore = new AuthStore();\r\n    this.userStore = new UserStore();\r\n    this.projectStore = new ProjectStore();\r\n    this.teamStore = new TeamStore();\r\n  }\r\n}\r\n","import { createContext, useContext } from \"react\";\r\n\r\nconst RootStoreContext = createContext({});\r\n\r\nexport const RootStoreProvider = RootStoreContext.Provider;\r\n\r\nexport const useStore = () => useContext(RootStoreContext);\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst menuButtons = [\r\n  {\r\n    route: \"/\",\r\n    label: \"Equipes\",\r\n  },\r\n  {\r\n    route: \"/projects\",\r\n    label: \"Projetos\",\r\n  },\r\n  {\r\n    route: \"/users\",\r\n    label: \"Colaboradores\",\r\n  },\r\n];\r\n\r\nconst Menu = ({ vertical, drawer }) => {\r\n  const history = useHistory();\r\n\r\n  const handleClick = (route) => {\r\n    history.push(route);\r\n    if (drawer) drawer.close();\r\n  };\r\n\r\n  return (\r\n    <nav className={`menu ${vertical ? \"vertical\" : \"\"}`}>\r\n      <ul className=\"menu__list\">\r\n        {menuButtons.map((item) => (\r\n          <li className=\"menu__list__item\" key={item.route}>\r\n            <Button\r\n              className=\"menu__list__item__button\"\r\n              fullWidth={vertical}\r\n              color=\"primary\"\r\n              onClick={() => handleClick(item.route)}\r\n            >\r\n              {item.label}\r\n            </Button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { useState } from \"react\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport Menu from \"../Menu/Menu\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst Drawer = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const open = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const close = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"drawer\">\r\n      <Button onClick={open}>\r\n        <MenuIcon color=\"primary\" />\r\n      </Button>\r\n      <SwipeableDrawer\r\n        anchor={\"left\"}\r\n        open={isOpen}\r\n        onClose={close}\r\n        onOpen={open}\r\n      >\r\n        <div className=\"drawer__content\">\r\n          <Menu vertical drawer={{ close }} />\r\n        </div>\r\n      </SwipeableDrawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Drawer;\r\n","import React from \"react\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst Logo = () => {\r\n  return <div className=\"logo\">Clockify Teams</div>;\r\n};\r\n\r\nexport default Logo;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport Menu from \"../Menu/Menu\";\r\nimport Drawer from \"../Drawer/Drawer\";\r\nimport Logo from \"../Logo/Logo\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <Container maxWidth=\"lg\">\r\n        <div className=\"header__content\">\r\n          <Logo />\r\n          <div className=\"header__menu\">\r\n            <Menu />\r\n          </div>\r\n          <div className=\"header__drawer\">\r\n            <Drawer />\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default observer(Header);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Avatar, IconButton, ListItem, Tooltip } from \"@material-ui/core\";\r\nimport { Warning, Email, PictureAsPdf, AccessTime } from \"@material-ui/icons\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst UserMeta = (props) => {\r\n  const { hours, warnings } = props;\r\n\r\n  return (\r\n    <div className=\"user__meta\">\r\n      <Tooltip\r\n        arrow\r\n        placement=\"left\"\r\n        title=\"Horas trabalhadas no período selecionado\"\r\n      >\r\n        <div\r\n          className=\"user__meta__item\"\r\n          style={{ color: hours >= 200 ? \"#f44336\" : \"#ffffff\" }}\r\n        >\r\n          {hours.toFixed(2)}\r\n          <AccessTime color={hours >= 200 ? \"error\" : \"\"} />\r\n        </div>\r\n      </Tooltip>\r\n      {/* <Tooltip\r\n        arrow\r\n        interactive\r\n        placement=\"left\"\r\n        title={\r\n          <ul className=\"warning-list\">\r\n            {warnings.map((warning) => (\r\n              <li className=\"warning-list__item\">{warning.toString()}</li>\r\n            ))}\r\n          </ul>\r\n        }\r\n      >\r\n        <div className=\"user__meta__item\">\r\n          <Warning color=\"error\" />\r\n        </div>\r\n      </Tooltip>\r\n      <Tooltip arrow placement=\"left\" title=\"Visualizar relatório\">\r\n        <IconButton>\r\n          <PictureAsPdf />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Tooltip arrow placement=\"left\" title=\"Enviar relatório ao colaborador\">\r\n        <IconButton onClick={() => {}}>\r\n          <Email />\r\n        </IconButton>\r\n      </Tooltip> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst User = (props) => {\r\n  const {\r\n    id,\r\n    name = \"\",\r\n    profilePicture = \"\",\r\n    email = \"\",\r\n    showMeta = false,\r\n    disabled = false,\r\n    hours = 0,\r\n  } = props;\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <ListItem className=\"user\">\r\n      <div\r\n        className=\"user__pressable\"\r\n        onClick={() => (!disabled ? history.push(`/users/${id}`) : null)}\r\n      >\r\n        <Avatar alt={name} src={profilePicture} className=\"user__avatar\" />\r\n        <div className=\"user__profile\">\r\n          <div className=\"user__name\">{name}</div>\r\n          <div className=\"user__email\">{email}</div>\r\n        </div>\r\n      </div>\r\n      {showMeta ? (\r\n        <UserMeta\r\n          hours={hours}\r\n          warnings={[\r\n            \"2x Entrada maior que 4 horas\",\r\n            \"4x Entrada sem projeto\",\r\n            \"1x Entrada sem descrição\",\r\n          ]}\r\n        />\r\n      ) : null}\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default observer(User);\r\n","import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nconst HorizontalBarChart = (props) => {\r\n  const { data = {} } = props;\r\n\r\n  const options = {\r\n    responsive: true,\r\n    indexAxis: \"y\",\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n  };\r\n  return <Bar data={data} options={options} />;\r\n};\r\n\r\nexport default HorizontalBarChart;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Fab,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { Edit, Delete } from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\n\r\nimport User from \"../../components/User/User\";\r\nimport HorizontalBarChart from \"../../components/Chart/HorizontalBarChart\";\r\n\r\nimport \"./styles.scss\";\r\nimport { Avatar } from \"@material-ui/core\";\r\n\r\nconst TeamDetail = () => {\r\n  const store = useStore();\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const [team, setTeam] = useState(null);\r\n  const [showConfirmationModal, setShowConfirmationModal] = useState(false);\r\n  const foundTeam = store.teamStore.teamList.find(\r\n    (team) => team.id === Number(params.id)\r\n  );\r\n\r\n  const openConfirmationModal = () => {\r\n    setShowConfirmationModal(true);\r\n  };\r\n\r\n  const closeConfirmationModal = () => {\r\n    setShowConfirmationModal(false);\r\n  };\r\n\r\n  const removeTeam = () => {\r\n    store.teamStore.removeTeam(team);\r\n    closeConfirmationModal();\r\n    history.push(`/teams`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTeam(foundTeam);\r\n  }, [foundTeam]);\r\n\r\n  useEffect(() => {\r\n    store.teamStore.fetchTeamData(foundTeam);\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  if (!team) return null;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"screen team-detail\">\r\n        <Container maxWidth=\"lg\">\r\n          <header className=\"screen__header\">\r\n            <div className=\"screen__header__left\">\r\n              <Avatar\r\n                alt={team?.name}\r\n                src={team?.image}\r\n                className=\"team-detail__avatar\"\r\n              />\r\n              <h2>{team?.name}</h2>\r\n            </div>\r\n            <div className=\"screen__header__right\">\r\n              <Button onClick={openConfirmationModal}>\r\n                <Delete />\r\n              </Button>\r\n            </div>\r\n          </header>\r\n\r\n          <main>\r\n            {team?.fetchedTimeEntries ? (\r\n              <>\r\n                <div className=\"team-detail__chart\">\r\n                  <header className=\"section-header\">\r\n                    <h3>Horas por projeto</h3>\r\n                  </header>\r\n                  <HorizontalBarChart\r\n                    data={{\r\n                      labels: _.orderBy(\r\n                        team.timeEntriesByProject,\r\n                        \"hours\",\r\n                        \"desc\"\r\n                      ).map((project) => project.name),\r\n                      datasets: [\r\n                        {\r\n                          label: \"Horas\",\r\n                          data: _.orderBy(\r\n                            team.timeEntriesByProject,\r\n                            \"hours\",\r\n                            \"desc\"\r\n                          ).map((project) =>\r\n                            project?.hours ? project.hours.toFixed(2) : 0\r\n                          ),\r\n                          backgroundColor: _.orderBy(\r\n                            team.timeEntriesByProject,\r\n                            \"hours\",\r\n                            \"desc\"\r\n                          ).map((project) => `${project.color}85`),\r\n                          borderWidth: 0,\r\n                        },\r\n                      ],\r\n                    }}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"team-detail__chart\">\r\n                  <header className=\"section-header\">\r\n                    <h3>Horas por colaborador</h3>\r\n                  </header>\r\n                  <HorizontalBarChart\r\n                    data={{\r\n                      labels: _.orderBy(team.users, \"hours\", \"desc\").map(\r\n                        (user) => user.name\r\n                      ),\r\n                      datasets: [\r\n                        {\r\n                          label: \"Horas\",\r\n                          data: _.orderBy(team.users, \"hours\", \"desc\").map(\r\n                            (user) => (user?.hours ? user.hours.toFixed(2) : 0)\r\n                          ),\r\n                          backgroundColor: [\"rgba(255, 255, 255, 0.08)\"],\r\n                          borderWidth: 0,\r\n                        },\r\n                      ],\r\n                    }}\r\n                  />\r\n                </div>\r\n              </>\r\n            ) : null}\r\n\r\n            <div className=\"user-list\">\r\n              <header className=\"section-header\">\r\n                <h3>Colaboradores na equipe</h3>\r\n              </header>\r\n              {team?.users?.length\r\n                ? team.users.map((user) => (\r\n                    <User\r\n                      id={user.id}\r\n                      key={user.id}\r\n                      profilePicture={user?.profilePicture}\r\n                      name={user?.name}\r\n                      email={user?.email}\r\n                      hours={user?.hours}\r\n                      hourValue={user?.hourValue}\r\n                      payment={user?.payment}\r\n                      showMeta\r\n                    />\r\n                  ))\r\n                : null}\r\n            </div>\r\n          </main>\r\n        </Container>\r\n        <Fab\r\n          className=\"team-detail__edit-team\"\r\n          color=\"primary\"\r\n          aria-label=\"Editar equipe\"\r\n          onClick={() => {\r\n            history.push(`/teams/edit/${team.id}`);\r\n          }}\r\n        >\r\n          <Edit />\r\n        </Fab>\r\n      </div>\r\n      <Dialog\r\n        open={showConfirmationModal}\r\n        onClose={closeConfirmationModal}\r\n        aria-labelledby=\"draggable-dialog-title\"\r\n      >\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          {`Excluir equipe ${team.name}`}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {`Você tem certeza que deseja excluir a equipe ${team.name}?`}\r\n          </DialogContentText>\r\n          <DialogContentText>Esta ação é irreversível.</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={closeConfirmationModal} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          <Button onClick={removeTeam} color=\"primary\">\r\n            Confirmar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(TeamDetail);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Avatar, ListItem } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst Team = (props) => {\r\n  const {\r\n    id,\r\n    name = \"\",\r\n    image = \"\",\r\n    avatarSize = 50,\r\n    fontSize = 16,\r\n    disabled = false,\r\n    card = false,\r\n  } = props;\r\n  const history = useHistory();\r\n\r\n  if (card) {\r\n    return (\r\n      <ListItem\r\n        className=\"team card\"\r\n        button={!disabled}\r\n        onClick={() => (!disabled ? history.push(`/teams/${id}`) : null)}\r\n      >\r\n        {image.length ? (\r\n          <img className=\"team__image\" src={image} alt={name} />\r\n        ) : null}\r\n\r\n        <div className=\"team__data\">\r\n          <div className=\"team__name\" style={{ fontSize }}>\r\n            {name}\r\n          </div>\r\n        </div>\r\n      </ListItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ListItem\r\n      className=\"team\"\r\n      button={!disabled}\r\n      onClick={() => (!disabled ? history.push(`/teams/${id}`) : null)}\r\n    >\r\n      <Avatar\r\n        alt={name}\r\n        src={image}\r\n        className=\"team__avatar\"\r\n        style={{ width: avatarSize, height: avatarSize }}\r\n      />\r\n\r\n      <div className=\"team__data\">\r\n        <div className=\"team__name\" style={{ fontSize }}>\r\n          {name}\r\n        </div>\r\n      </div>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default observer(Team);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { TextField, Button, Container } from \"@material-ui/core\";\r\nimport { ArrowBack, ArrowForward } from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\n\r\nimport User from \"../../components/User/User\";\r\nimport Team from \"../../components/Team/Team\";\r\n\r\nconst EditTeam = () => {\r\n  const store = useStore();\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const teamData = store.teamStore.teamList.find(\r\n    (team) => team.id === Number(params.id)\r\n  );\r\n  const [teamName, setTeamName] = useState(\"\");\r\n  const [teamImage, setTeamImage] = useState(\"\");\r\n  const [userList, setUserList] = useState([]);\r\n  const [newUserList, setNewUserList] = useState([]);\r\n\r\n  const addUser = (_user, _userList, _newUserList) => {\r\n    setUserList(\r\n      _.sortBy(\r\n        _userList.filter((user) => user.id !== _user.id),\r\n        \"name\"\r\n      )\r\n    );\r\n    setNewUserList(_.sortBy([..._newUserList, _user], \"name\"));\r\n  };\r\n\r\n  const removeUser = (_user, _userList, _newUserList) => {\r\n    setNewUserList(\r\n      _.sortBy(\r\n        _newUserList.filter((user) => user.id !== _user.id),\r\n        \"name\"\r\n      )\r\n    );\r\n    setUserList(_.sortBy([..._userList, _user], \"name\"));\r\n  };\r\n\r\n  const editTeam = async () => {\r\n    const newTeamId = await store.teamStore.editTeam(teamData.id, {\r\n      name: teamName,\r\n      image: teamImage,\r\n      users: newUserList,\r\n    });\r\n\r\n    history.push(`/teams/${newTeamId}`);\r\n\r\n    if (newTeamId) alert(`Suas alterações foram salvas.`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTeamName(teamData.name);\r\n    setTeamImage(teamData.image);\r\n    setNewUserList(teamData.users);\r\n\r\n    const _userList = [...store.userStore.userList];\r\n    teamData.users.forEach((_user) => {\r\n      _userList.forEach((user, index) => {\r\n        if (user.id === _user.id) _userList.splice(index, 1);\r\n      });\r\n    });\r\n    setUserList(_userList);\r\n  }, [teamData]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"screen create-team\">\r\n      <Container maxWidth=\"lg\">\r\n        <header className=\"screen__header\">\r\n          <h2>{`Editar equipe ${teamData.name}`}</h2>\r\n        </header>\r\n\r\n        <main>\r\n          <div className=\"create-team__form\">\r\n            <div className=\"create-team__form__content\">\r\n              <TextField\r\n                id=\"team-name\"\r\n                label=\"Nome\"\r\n                variant=\"filled\"\r\n                value={teamName}\r\n                onChange={(e) => {\r\n                  setTeamName(e.target.value);\r\n                }}\r\n              />\r\n              <TextField\r\n                id=\"team-image\"\r\n                label=\"Imagem\"\r\n                variant=\"filled\"\r\n                value={teamImage}\r\n                onChange={(e) => {\r\n                  setTeamImage(e.target.value);\r\n                }}\r\n              />\r\n              {teamName?.length || teamImage?.length ? (\r\n                <div className=\"screen__header__preview\">\r\n                  <Team\r\n                    name={teamName}\r\n                    image={teamImage}\r\n                    avatarSize={80}\r\n                    fontSize={22}\r\n                    disabled\r\n                  />\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <Button variant=\"outlined\" onClick={editTeam}>\r\n              Salvar Alterações\r\n            </Button>\r\n          </div>\r\n\r\n          <div className=\"create-team__user-lists\">\r\n            <div className=\"user-list\">\r\n              <header className=\"section-header\">\r\n                <h3>Todos os colaboradores</h3>\r\n              </header>\r\n              {userList.map((user) => (\r\n                <div className=\"user-list__item\" key={user.id}>\r\n                  <User\r\n                    key={user.id}\r\n                    id={user.id}\r\n                    profilePicture={user?.profilePicture}\r\n                    name={user?.name}\r\n                    email={user?.email}\r\n                    hours={user?.hours}\r\n                    hourValue={user?.hourValue}\r\n                    payment={user?.payment}\r\n                  />\r\n                  <Button\r\n                    className=\"user-list__item__bt-add\"\r\n                    onClick={() => addUser(user, userList, newUserList)}\r\n                  >\r\n                    <ArrowForward />\r\n                  </Button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"user-list\">\r\n              <header className=\"section-header\">\r\n                <h3>Colaboradores na equipe</h3>\r\n              </header>\r\n              {newUserList.map((user) => (\r\n                <div className=\"user-list__item\" key={user.id}>\r\n                  <Button\r\n                    className=\"user-list__item__bt-add\"\r\n                    onClick={() => removeUser(user, userList, newUserList)}\r\n                  >\r\n                    <ArrowBack />\r\n                  </Button>\r\n                  <User\r\n                    id={user.id}\r\n                    profilePicture={user?.profilePicture}\r\n                    name={user?.name}\r\n                    email={user?.email}\r\n                    hours={user?.hours}\r\n                    hourValue={user?.hourValue}\r\n                    payment={user?.payment}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(EditTeam);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { TextField, Button, Container } from \"@material-ui/core\";\r\nimport { ArrowBack, ArrowForward } from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\n\r\nimport User from \"../../components/User/User\";\r\nimport Team from \"../../components/Team/Team\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst CreateTeam = () => {\r\n  const store = useStore();\r\n  const history = useHistory();\r\n  const [teamName, setTeamName] = useState(\"\");\r\n  const [teamImage, setTeamImage] = useState(\"\");\r\n  const [userList, setUserList] = useState([]);\r\n  const [newUserList, setNewUserList] = useState([]);\r\n\r\n  const addUser = (_user) => {\r\n    setUserList(\r\n      _.sortBy(\r\n        userList.filter((user) => user.id !== _user.id),\r\n        \"name\"\r\n      )\r\n    );\r\n    setNewUserList(_.sortBy([...newUserList, _user], \"name\"));\r\n  };\r\n\r\n  const removeUser = (_user) => {\r\n    setNewUserList(\r\n      _.sortBy(\r\n        newUserList.filter((user) => user.id !== _user.id),\r\n        \"name\"\r\n      )\r\n    );\r\n    setUserList(_.sortBy([...userList, _user], \"name\"));\r\n  };\r\n\r\n  const createTeam = async () => {\r\n    const newTeamId = store.teamStore.createTeam({\r\n      name: teamName,\r\n      image: teamImage,\r\n      users: newUserList,\r\n    });\r\n\r\n    store.teamStore.fetchTeamList();\r\n\r\n    history.push(`/teams/${newTeamId}`);\r\n\r\n    if (newTeamId) alert(`A equipe ${teamName} foi criada.`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUserList(store.userStore.userList);\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"screen create-team\">\r\n      <Container maxWidth=\"lg\">\r\n        <header className=\"screen__header\">\r\n          <h2>Criar equipe</h2>\r\n        </header>\r\n\r\n        <main>\r\n          <div className=\"create-team__form\">\r\n            <div className=\"create-team__form__content\">\r\n              <TextField\r\n                id=\"team-name\"\r\n                label=\"Nome\"\r\n                variant=\"filled\"\r\n                value={teamName}\r\n                onChange={(e) => {\r\n                  setTeamName(e.target.value);\r\n                }}\r\n              />\r\n              <TextField\r\n                id=\"team-image\"\r\n                label=\"Imagem\"\r\n                variant=\"filled\"\r\n                value={teamImage}\r\n                onChange={(e) => {\r\n                  setTeamImage(e.target.value);\r\n                }}\r\n              />\r\n              {teamName?.length || teamImage?.length ? (\r\n                <div className=\"screen__header__preview\">\r\n                  <Team\r\n                    name={teamName}\r\n                    image={teamImage}\r\n                    avatarSize={80}\r\n                    fontSize={22}\r\n                    disabled\r\n                  />\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <Button variant=\"outlined\" onClick={createTeam}>\r\n              Criar\r\n            </Button>\r\n          </div>\r\n\r\n          <div className=\"create-team__user-lists\">\r\n            <div className=\"user-list\">\r\n              <header className=\"section-header\">\r\n                <h3>Todos os colaboradores</h3>\r\n              </header>\r\n              {userList.map((user) => (\r\n                <div className=\"user-list__item\" key={user.id}>\r\n                  <User\r\n                    key={user.id}\r\n                    id={user.id}\r\n                    profilePicture={user?.profilePicture}\r\n                    name={user?.name}\r\n                    email={user?.email}\r\n                    hours={user?.hours}\r\n                    hourValue={user?.hourValue}\r\n                    payment={user?.payment}\r\n                  />\r\n                  <Button\r\n                    className=\"user-list__item__bt-add\"\r\n                    onClick={() => addUser(user)}\r\n                  >\r\n                    <ArrowForward />\r\n                  </Button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"user-list\">\r\n              <header className=\"section-header\">\r\n                <h3>Colaboradores na equipe</h3>\r\n              </header>\r\n              {newUserList.map((user) => (\r\n                <div className=\"user-list__item\" key={user.id}>\r\n                  <Button\r\n                    className=\"user-list__item__bt-add\"\r\n                    onClick={() => removeUser(user)}\r\n                  >\r\n                    <ArrowBack />\r\n                  </Button>\r\n                  <User\r\n                    id={user.id}\r\n                    profilePicture={user?.profilePicture}\r\n                    name={user?.name}\r\n                    email={user?.email}\r\n                    hours={user?.hours}\r\n                    hourValue={user?.hourValue}\r\n                    payment={user?.payment}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(CreateTeam);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Container, TextField, Fab } from \"@material-ui/core\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\n\r\nimport Team from \"../../components/Team/Team\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst Teams = () => {\r\n  const store = useStore();\r\n  const history = useHistory();\r\n  const [filterTerm, setFilterTerm] = useState(\"\");\r\n  const [filteredList, setFilteredList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (filterTerm.length) {\r\n      setFilteredList(\r\n        store.teamStore.teamList.filter((item) =>\r\n          item.name.toLowerCase().includes(filterTerm.toLowerCase())\r\n        )\r\n      );\r\n      return;\r\n    }\r\n    setFilteredList(store.teamStore.teamList);\r\n  }, [filterTerm]);\r\n\r\n  useEffect(() => {\r\n    setFilteredList(store.teamStore.teamList);\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"screen teams\">\r\n      <Container maxWidth=\"lg\">\r\n        <header className=\"screen__header\">\r\n          <h2>Equipes</h2>\r\n\r\n          <div className=\"screen__header__right\">\r\n            {store?.teamStore?.teamList?.length ? (\r\n              <TextField\r\n                id=\"filter-term\"\r\n                label=\"Filtro\"\r\n                variant=\"filled\"\r\n                value={filterTerm}\r\n                onChange={(e) => {\r\n                  setFilterTerm(e.target.value);\r\n                }}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </header>\r\n\r\n        <main>\r\n          {!filteredList?.length ? (\r\n            <div>Nenhuma equipe encontrada.</div>\r\n          ) : (\r\n            filteredList.map((team) => (\r\n              <Team\r\n                // card\r\n                key={team.id}\r\n                id={team.id}\r\n                name={team?.name}\r\n                image={team?.image}\r\n              />\r\n            ))\r\n          )}\r\n        </main>\r\n      </Container>\r\n      <Fab\r\n        className=\"teams__create-team\"\r\n        color=\"primary\"\r\n        aria-label=\"Criar equipe\"\r\n        onClick={() => {\r\n          history.push(\"/teams/create\");\r\n        }}\r\n      >\r\n        <Add />\r\n      </Fab>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Teams);\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst LineChart = (props) => {\r\n  const { data = {} } = props;\r\n\r\n  const options = {\r\n    responsive: true,\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  return <Line data={data} options={options} />;\r\n};\r\n\r\nexport default LineChart;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { ListItem } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst TimeEntry = (props) => {\r\n  const { project = {}, time = \"\", description = \"\", disabled = false } = props;\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <ListItem\r\n      button={!disabled}\r\n      className=\"time-entry\"\r\n      onClick={() =>\r\n        project.id ? history.push(`/projects/${project.id}`) : null\r\n      }\r\n      style={{\r\n        borderColor: project.color,\r\n      }}\r\n    >\r\n      <div className=\"time-entry__top\">\r\n        <div className=\"time-entry__project-name\">{project.name}</div>\r\n      </div>\r\n      <div className=\"time-entry__bottom\">\r\n        <div\r\n          className=\"time-entry__time\"\r\n          style={{\r\n            borderColor: project.color,\r\n          }}\r\n        >\r\n          {time.replace(\"PT\", \"\").replace(\"H\", \"hr \").replace(\"M\", \"min\")}\r\n        </div>\r\n        -<div className=\"time-entry__description\">{description}</div>\r\n      </div>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default observer(TimeEntry);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Avatar, Container } from \"@material-ui/core\";\r\nimport { AccessTime } from \"@material-ui/icons\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\n\r\nimport LineChart from \"../../components/Chart/LineChart\";\r\nimport TimeEntry from \"../../components/TimeEntry/TimeEntry\";\r\nimport Team from \"../../components/Team/Team\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst UserDetail = () => {\r\n  const store = useStore();\r\n  const params = useParams();\r\n  const [user, setUser] = useState(null);\r\n  const foundUser = store.userStore.userList.find(\r\n    (user) => user.id === params.id\r\n  );\r\n\r\n  useEffect(() => {\r\n    setUser(foundUser);\r\n  }, [foundUser]);\r\n\r\n  useEffect(() => {\r\n    store.userStore.fetchUserData(foundUser);\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  if (!user) return null;\r\n\r\n  return (\r\n    <div className=\"screen user-detail\">\r\n      <Container maxWidth=\"lg\">\r\n        <header className=\"screen__header\">\r\n          <div className=\"screen__header__left\">\r\n            <Avatar\r\n              alt={user?.name}\r\n              src={user?.profilePicture}\r\n              className=\"user-detail__avatar\"\r\n            />\r\n            <h2>{user?.name}</h2>\r\n          </div>\r\n          <div\r\n            className=\"screen__header__right\"\r\n            style={{ color: user.hours >= 200 ? \"#f44336\" : \"#ffffff\" }}\r\n          >\r\n            {user.hours.toFixed(2)}\r\n            <AccessTime color={user.hours >= 200 ? \"error\" : \"\"} />\r\n          </div>\r\n        </header>\r\n        <main>\r\n          {user?.teams.length ? (\r\n            <div className=\"user-detail__teams\">\r\n              <header className=\"section-header\">\r\n                <h3>Equipes do colaborador</h3>\r\n              </header>\r\n              {user.teams.map((team) => (\r\n                <Team\r\n                  // card\r\n                  key={team.id}\r\n                  id={team.id}\r\n                  name={team?.name}\r\n                  image={team?.image}\r\n                />\r\n              ))}\r\n            </div>\r\n          ) : null}\r\n\r\n          {user?.timeEntries.length ? (\r\n            <>\r\n              <div className=\"user-detail__chart\">\r\n                <header className=\"section-header\">\r\n                  <h3>Horas por dia</h3>\r\n                </header>\r\n                <LineChart\r\n                  data={{\r\n                    labels: user.timeEntriesByDay\r\n                      .map((entry) => entry.date)\r\n                      .reverse(),\r\n                    datasets: [\r\n                      {\r\n                        label: \"Horas\",\r\n                        data: user.timeEntriesByDay\r\n                          .map((entry) => entry.hours)\r\n                          .reverse(),\r\n                        backgroundColor: [\"rgba(255, 255, 255, 0.1)\"],\r\n                        borderColor: [\"rgba(255, 255, 255, 0.1)\"],\r\n                        borderWidth: 1,\r\n                      },\r\n                    ],\r\n                  }}\r\n                />\r\n              </div>\r\n            </>\r\n          ) : null}\r\n\r\n          {user?.timeEntries?.length ? (\r\n            <div className=\"time-entries\">\r\n              {user.timeEntriesByDay.map((day) => (\r\n                <div className=\"time-entries__day\" key={day.date}>\r\n                  <header className=\"section-header\">\r\n                    <h3>{day.date}</h3>\r\n                  </header>\r\n                  <div className=\"description\">\r\n                    {day.timeEntries.map((entry) => (\r\n                      <TimeEntry\r\n                        key={entry.id}\r\n                        disabled={!entry?.project?.id}\r\n                        project={entry.project}\r\n                        time={entry.timeInterval.duration}\r\n                        description={entry.description}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : null}\r\n\r\n          {!user?.timeEntries.length ? (\r\n            <div>\r\n              Nenhuma entrada encontrada para este usuário no período\r\n              selecionado.\r\n            </div>\r\n          ) : null}\r\n        </main>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(UserDetail);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Container, TextField } from \"@material-ui/core\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\n\r\nimport User from \"../../components/User/User\";\r\n\r\nconst Users = () => {\r\n  const store = useStore();\r\n  const [filterTerm, setFilterTerm] = useState(\"\");\r\n  const [filteredList, setFilteredList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (filterTerm.length) {\r\n      setFilteredList(\r\n        store.userStore.userList.filter((item) =>\r\n          item.name.toLowerCase().includes(filterTerm.toLowerCase())\r\n        )\r\n      );\r\n      return;\r\n    }\r\n    setFilteredList(store.userStore.userList);\r\n  }, [filterTerm]);\r\n\r\n  useEffect(() => {\r\n    setFilteredList(store.userStore.userList);\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"screen users\">\r\n      <Container maxWidth=\"lg\">\r\n        <header className=\"screen__header\">\r\n          <h2>Colaboradoes</h2>\r\n\r\n          {store?.userStore?.userList?.length ? (\r\n            <TextField\r\n              id=\"filter-term\"\r\n              label=\"Filtro\"\r\n              variant=\"filled\"\r\n              value={filterTerm}\r\n              onChange={(e) => {\r\n                setFilterTerm(e.target.value);\r\n              }}\r\n            />\r\n          ) : null}\r\n        </header>\r\n\r\n        <main>\r\n          {!filteredList?.length ? (\r\n            <div>Nenhum colaborador encontrado.</div>\r\n          ) : (\r\n            filteredList.map((user) => (\r\n              <User\r\n                id={user.id}\r\n                key={user.id}\r\n                profilePicture={user?.profilePicture}\r\n                name={user?.name}\r\n                email={user?.email}\r\n                hours={user?.hours}\r\n                hourValue={user?.hourValue}\r\n                payment={user?.payment}\r\n                showMeta\r\n              />\r\n            ))\r\n          )}\r\n        </main>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Users);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { ListItem } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst Project = (props) => {\r\n  const { id, index, name = \"\", color = \"\", disabled = false } = props;\r\n  const [showColor, setShowColor] = useState(false);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const colorEffect = setTimeout(() => {\r\n      setShowColor(true);\r\n    }, index * 50 + 100);\r\n\r\n    return () => {\r\n      clearTimeout(colorEffect);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <ListItem\r\n      button={!disabled}\r\n      onClick={() => (!disabled ? history.push(`/projects/${id}`) : null)}\r\n      className=\"project\"\r\n      style={{\r\n        borderColor: showColor ? color : \"transparent\",\r\n      }}\r\n    >\r\n      <div className=\"project__name\">{name}</div>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default observer(Project);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Container, TextField } from \"@material-ui/core\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\n\r\nimport Project from \"../../components/Project/Project\";\r\n\r\nconst Projects = () => {\r\n  const store = useStore();\r\n  const [filterTerm, setFilterTerm] = useState(\"\");\r\n  const [filteredList, setFilteredList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (filterTerm.length) {\r\n      setFilteredList(\r\n        store.projectStore.projectList.filter((item) =>\r\n          item.name.toLowerCase().includes(filterTerm.toLowerCase())\r\n        )\r\n      );\r\n      return;\r\n    }\r\n    setFilteredList(store.projectStore.projectList);\r\n  }, [filterTerm]);\r\n\r\n  useEffect(() => {\r\n    setFilteredList(store.projectStore.projectList);\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"screen projects\">\r\n      <Container maxWidth=\"lg\">\r\n        <header className=\"screen__header\">\r\n          <h2>Projetos</h2>\r\n\r\n          {store?.projectStore?.projectList?.length ? (\r\n            <TextField\r\n              id=\"filter-term\"\r\n              label=\"Filtro\"\r\n              variant=\"filled\"\r\n              value={filterTerm}\r\n              onChange={(e) => {\r\n                setFilterTerm(e.target.value);\r\n              }}\r\n            />\r\n          ) : null}\r\n        </header>\r\n\r\n        <main>\r\n          {!filteredList?.length ? (\r\n            <div>Nenhum projeto encontrado.</div>\r\n          ) : (\r\n            filteredList.map((project, index) => (\r\n              <Project\r\n                key={project.id}\r\n                id={project.id}\r\n                color={project?.color}\r\n                name={project?.name}\r\n                index={index}\r\n              />\r\n            ))\r\n          )}\r\n        </main>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Projects);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport _ from \"lodash\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\nimport getDuration from \"../../utils/getDuration\";\r\n\r\nimport User from \"../../components/User/User\";\r\nimport HorizontalBarChart from \"../../components/Chart/HorizontalBarChart\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst ProjectDetail = () => {\r\n  const store = useStore();\r\n  const params = useParams();\r\n  const [project, setProject] = useState(null);\r\n  const foundProject = store.projectStore.projectList.find(\r\n    (project) => project.id === params.id\r\n  );\r\n\r\n  useEffect(() => {\r\n    setProject(foundProject);\r\n  }, [foundProject]);\r\n\r\n  useEffect(() => {\r\n    store.projectStore.fetchProjectData(foundProject);\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  if (!project) return null;\r\n\r\n  return (\r\n    <div className=\"screen project-detail\">\r\n      <Container maxWidth=\"lg\">\r\n        <header className=\"screen__header\">\r\n          <div className=\"screen__header__left\">\r\n            <h2>{project?.name}</h2>\r\n          </div>\r\n          <div className=\"screen__header__right\">\r\n            {\r\n              <div className=\"project-detail__estimate\">\r\n                <div>\r\n                  {`Estimativa: ${getDuration(\r\n                    project?.estimate.estimate\r\n                  )} horas`}\r\n                </div>\r\n                <div>\r\n                  {`Total: ${getDuration(project?.duration).toFixed(2)} horas`}\r\n                </div>\r\n\r\n                {getDuration(project?.estimate.estimate) &&\r\n                getDuration(project?.duration) ? (\r\n                  <div>\r\n                    {`Esforço: ${(\r\n                      (getDuration(project?.duration) /\r\n                        getDuration(project?.estimate.estimate)) *\r\n                      100\r\n                    ).toFixed(2)}%`}\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            }\r\n          </div>\r\n        </header>\r\n        <main>\r\n          {project?.fetchedTimeEntries && project?.timeEntriesByUser.length ? (\r\n            <>\r\n              <div className=\"project-detail__chart\">\r\n                <header className=\"section-header\">\r\n                  <h3>Horas por colaborador</h3>\r\n                </header>\r\n                <HorizontalBarChart\r\n                  data={{\r\n                    labels: _.orderBy(\r\n                      project.timeEntriesByUser,\r\n                      \"hours\",\r\n                      \"desc\"\r\n                    ).map((user) => user.name),\r\n                    datasets: [\r\n                      {\r\n                        label: \"Horas\",\r\n                        data: _.orderBy(\r\n                          project.timeEntriesByUser,\r\n                          \"hours\",\r\n                          \"desc\"\r\n                        ).map((user) =>\r\n                          user?.hours ? user.hours.toFixed(2) : 0\r\n                        ),\r\n                        backgroundColor: [`${project.color}85`],\r\n                        borderWidth: 0,\r\n                      },\r\n                    ],\r\n                  }}\r\n                />\r\n              </div>\r\n            </>\r\n          ) : null}\r\n\r\n          {project?.timeEntriesByUser?.length ? (\r\n            <div className=\"user-list\">\r\n              <header className=\"section-header\">\r\n                <h3>Colaboradores no projeto</h3>\r\n              </header>\r\n              {project.timeEntriesByUser.map((user) => (\r\n                <User\r\n                  id={user.id}\r\n                  key={user.id}\r\n                  profilePicture={user?.profilePicture}\r\n                  name={user?.name}\r\n                  email={user?.email}\r\n                  hours={user?.hours}\r\n                  hourValue={user?.hourValue}\r\n                  payment={user?.payment}\r\n                />\r\n              ))}\r\n            </div>\r\n          ) : null}\r\n\r\n          {project?.fetchedTimeEntries &&\r\n          !project?.timeEntriesByUser.length &&\r\n          !project?.timeEntriesByUser?.length ? (\r\n            <div>\r\n              Nenhuma entrada encontrada para este projeto no período\r\n              selecionado.\r\n            </div>\r\n          ) : null}\r\n        </main>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(ProjectDetail);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { flowResult } from \"mobx\";\r\nimport {\r\n  TextField,\r\n  Container,\r\n  Button,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\n\r\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\r\nimport { useStore } from \"../../hooks\";\r\n\r\nimport User from \"../../components/User/User\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst Login = () => {\r\n  const store = useStore();\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [fetching, setFetching] = useState(false);\r\n  const [apiKey] = useLocalStorage(\"clockify-api-key\");\r\n\r\n  const authenticate = async () => {\r\n    setFetching(true);\r\n    await flowResult(store.authStore.authenticate(inputValue));\r\n    setFetching(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const dataLogContainer = document.querySelector(\".login .fetch-data-log\");\r\n    if (dataLogContainer) {\r\n      dataLogContainer.scrollTop = dataLogContainer.scrollHeight;\r\n    }\r\n  }, [store.authStore.fetchDataLog.length]);\r\n\r\n  useEffect(() => {\r\n    if (apiKey?.length) setInputValue(apiKey);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"screen login\">\r\n      <Container maxWidth=\"lg\" className=\"login__container\">\r\n        <h1>Clockify Teams</h1>\r\n        <div className=\"login__box\">\r\n          {!store.authStore.isConfirmingIdentity ? (\r\n            <>\r\n              {!store.authStore.autoLogin ? (\r\n                <TextField\r\n                  id=\"api-key\"\r\n                  label=\"Clockify API Key\"\r\n                  variant=\"filled\"\r\n                  value={inputValue}\r\n                  onChange={(e) => {\r\n                    setInputValue(e.target.value);\r\n                  }}\r\n                />\r\n              ) : null}\r\n              {fetching || store.authStore.autoLogin ? (\r\n                <LinearProgress />\r\n              ) : (\r\n                <Button variant=\"outlined\" onClick={authenticate}>\r\n                  Autenticar\r\n                </Button>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <User\r\n                disabled\r\n                name={store?.authStore?.user?.name}\r\n                profilePicture={store?.authStore?.user?.profilePicture}\r\n                email={store?.authStore?.user?.email}\r\n              />\r\n\r\n              <div className=\"fetch-data-log\">\r\n                {store.authStore.fetchDataLog.map(({ text, color }) => (\r\n                  <div style={{ color }} key={text}>\r\n                    {text}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Login);\r\n","import React from \"react\";\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\n\r\nimport Header from \"../Header/Header\";\r\n\r\nimport TeamDetail from \"../../screens/TeamDetail/TeamDetail\";\r\nimport EditTeam from \"../../screens/EditTeam/EditTeam\";\r\nimport CreateTeam from \"../../screens/CreateTeam/CreateTeam\";\r\nimport Teams from \"../../screens/Teams/Teams\";\r\nimport UserDetail from \"../../screens/UserDetail/UserDetail\";\r\nimport Users from \"../../screens/Users/Users\";\r\nimport Projects from \"../../screens/Projects/Projects\";\r\nimport ProjectDetail from \"../../screens/ProjectDetail/ProjectDetail\";\r\nimport Login from \"../../screens/Login/Login\";\r\n\r\nconst Router = () => {\r\n  const store = useStore();\r\n\r\n  return (\r\n    <HashRouter>\r\n      {store?.authStore?.isAuthenticated ? (\r\n        <>\r\n          <Header />\r\n          <Switch>\r\n            <Route path=\"/users/:id\">\r\n              <UserDetail />\r\n            </Route>\r\n            <Route path=\"/users\">\r\n              <Users />\r\n            </Route>\r\n            <Route path=\"/projects/:id\">\r\n              <ProjectDetail />\r\n            </Route>\r\n            <Route path=\"/projects\">\r\n              <Projects />\r\n            </Route>\r\n            <Route path=\"/teams/edit/:id\">\r\n              <EditTeam />\r\n            </Route>\r\n            <Route path=\"/teams/create\">\r\n              <CreateTeam />\r\n            </Route>\r\n            <Route path=\"/teams/:id\">\r\n              <TeamDetail />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Teams />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      ) : (\r\n        <Switch>\r\n          <Route path=\"/\">\r\n            <Login />\r\n          </Route>\r\n        </Switch>\r\n      )}\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default observer(Router);\r\n","const theme = {\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      main: \"#ecf0f1\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default theme;\r\n","import { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport theme from \"../../constants/theme\";\r\n\r\nconst Theme = ({ children }) => {\r\n  const customTheme = createMuiTheme(theme);\r\n  return (\r\n    <ThemeProvider theme={customTheme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Theme;\r\n","import React from \"react\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst Loader = ({ active }) => {\r\n  if (active) {\r\n    return (\r\n      <div className=\"loader\">\r\n        <LinearProgress />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState } from \"react\";\r\nimport { flowResult } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { Search } from \"@material-ui/icons\";\r\n\r\nimport { useStore } from \"../../hooks\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst date = new Date();\r\n\r\nconst QueryDateSeletor = () => {\r\n  const store = useStore();\r\n  const [fetching, setFetching] = useState(false);\r\n  const [startDate, setStartDate] = useState(\r\n    new Date(date.getFullYear(), date.getMonth(), 1)\r\n  );\r\n  const [endDate, setEndDate] = useState(\r\n    new Date(date.getFullYear(), date.getMonth() + 1, 0)\r\n  );\r\n\r\n  const fetchData = async () => {\r\n    store.authStore.clearDataLog();\r\n    store.authStore.setStatusConfirmingIdentity();\r\n    store.userStore.setQueryDate(startDate, endDate);\r\n    setFetching(true);\r\n    await flowResult(store.projectStore.fetchProjectList());\r\n    await flowResult(store.userStore.fetchUserList());\r\n    store.teamStore.fetchTeamList();\r\n    setFetching(false);\r\n    store.authStore.confirmIdentity();\r\n  };\r\n\r\n  if (store.authStore.isUnauthenticated) return null;\r\n\r\n  return (\r\n    <div className=\"query-date-selector\">\r\n      <Loader active={fetching} />\r\n\r\n      <div className=\"query-date-selector__content\">\r\n        <KeyboardDatePicker\r\n          inputVariant=\"filled\"\r\n          id=\"start-date\"\r\n          label=\"Data inicial\"\r\n          format=\"dd/MM/yyyy\"\r\n          value={startDate}\r\n          onChange={setStartDate}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"Selecione a data inicial\",\r\n          }}\r\n          disabled={fetching}\r\n        />\r\n        <KeyboardDatePicker\r\n          inputVariant=\"filled\"\r\n          id=\"end-date\"\r\n          label=\"Data final\"\r\n          format=\"dd/MM/yyyy\"\r\n          value={endDate}\r\n          onChange={setEndDate}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"Selecione a data final\",\r\n          }}\r\n          disabled={fetching}\r\n        />\r\n        <Button\r\n          variant=\"outlined\"\r\n          disabled={fetching}\r\n          onClick={fetchData}\r\n          className=\"query-date-selector__bt-search\"\r\n        >\r\n          <Search />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(QueryDateSeletor);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport { flowResult } from \"mobx\";\nimport { wrapRoot } from \"mobx-easy\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nimport baseAPI from \"./services/baseAPI\";\nimport RootStore from \"./stores/containers/rootStore\";\n\nimport { RootStoreProvider } from \"./hooks\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\n\nimport Router from \"./components/Router/Router\";\nimport Theme from \"./components/Theme/Theme\";\nimport QueryDateSeletor from \"./components/QueryDateSelector/QueryDateSeletor\";\n\nconst App = () => {\n  const [rootStore, setRootStore] = useState(null);\n  const [apiKey] = useLocalStorage(\"clockify-api-key\");\n\n  const init = async () => {\n    const newRootStore = wrapRoot({ RootStore, env: baseAPI });\n    setRootStore(newRootStore);\n\n    if (apiKey?.length) {\n      newRootStore.authStore.setAutoLogin(true);\n      await flowResult(newRootStore.authStore.authenticate(apiKey));\n      newRootStore.authStore.setAutoLogin(false);\n    }\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  if (!rootStore) return null;\n\n  return (\n    <div className=\"app\">\n      <RootStoreProvider value={rootStore}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <Theme>\n            <Router />\n            <QueryDateSeletor />\n          </Theme>\n        </MuiPickersUtilsProvider>\n      </RootStoreProvider>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/index.scss\";\nimport App from \"./App\";\nimport \"@fontsource/roboto/300.css\";\nimport \"@fontsource/roboto/400.css\";\nimport \"@fontsource/roboto/500.css\";\nimport \"@fontsource/roboto/700.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}